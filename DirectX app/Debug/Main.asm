; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29337.0 

	TITLE	D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	_IID_IInternalConnection
PUBLIC	_LIBID_ATLLib
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QB_WB			; ATL::szStringVal
PUBLIC	??_C@_13HADIAKP@?$AAS@				; `string'
PUBLIC	?multiszStringVal@ATL@@3QB_WB			; ATL::multiszStringVal
PUBLIC	??_C@_13LHMFKAAD@?$AAM@				; `string'
PUBLIC	?szDwordVal@ATL@@3QB_WB				; ATL::szDwordVal
PUBLIC	??_C@_13MKMNOPIJ@?$AAD@				; `string'
PUBLIC	?szBinaryVal@ATL@@3QB_WB			; ATL::szBinaryVal
PUBLIC	??_C@_13OPKGLAFF@?$AAB@				; `string'
PUBLIC	?szValToken@ATL@@3QB_WB				; ATL::szValToken
PUBLIC	??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl@		; `string'
PUBLIC	?szForceRemove@ATL@@3QB_WB			; ATL::szForceRemove
PUBLIC	??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@ ; `string'
PUBLIC	?szNoRemove@ATL@@3QB_WB				; ATL::szNoRemove
PUBLIC	??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@ ; `string'
PUBLIC	?szDelete@ATL@@3QB_WB				; ATL::szDelete
PUBLIC	??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe@ ; `string'
PUBLIC	?ScaleDPI@COLORPICK@@2MA			; COLORPICK::ScaleDPI
PUBLIC	?AB@@3UD2D_POINT_2F@@A				; AB
PUBLIC	?AB2@@3UD2D_POINT_2F@@A				; AB2
PUBLIC	?speed@@3HA					; speed
PUBLIC	?max_speed@@3HA					; max_speed
PUBLIC	?dx@@3MA					; dx
PUBLIC	?dy@@3MA					; dy
PUBLIC	?_key@@3_NA					; _key
PUBLIC	?troj_col@@3UCollision_area@@A			; troj_col
PUBLIC	?rect_col@@3UCollision_area@@A			; rect_col
PUBLIC	?key_col@@3UCollision_area@@A			; key_col
PUBLIC	?m_BlackBrush@@3PAUID2D1SolidColorBrush@@A	; m_BlackBrush
PUBLIC	?m_GreenBrush@@3PAUID2D1SolidColorBrush@@A	; m_GreenBrush
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
_BSS	SEGMENT
?AB@@3UD2D_POINT_2F@@A DQ 01H DUP (?)			; AB
?AB2@@3UD2D_POINT_2F@@A DQ 01H DUP (?)			; AB2
?troj_col@@3UCollision_area@@A DB 010H DUP (?)		; troj_col
?rect_col@@3UCollision_area@@A DB 010H DUP (?)		; rect_col
?key_col@@3UCollision_area@@A DB 010H DUP (?)		; key_col
?m_BlackBrush@@3PAUID2D1SolidColorBrush@@A DD 01H DUP (?) ; m_BlackBrush
?m_GreenBrush@@3PAUID2D1SolidColorBrush@@A DD 01H DUP (?) ; m_GreenBrush
_BSS	ENDS
msvcjmc	SEGMENT
__7242C389_ctype@h DB 01H
__90A1F774_basetsd@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__3C23D660_guiddef@h DB 01H
__AF541008_winnt@h DB 01H
__0D001789_processthreadsapi@h DB 01H
__F972325D_memoryapi@h DB 01H
__76CD430D_winerror@h DB 01H
__737D49DB_winbase@h DB 01H
__1B9502AC_winuser@h DB 01H
__376EBCA0_winioctl@h DB 01H
__24E9E95F_stdlib@h DB 01H
__2CCBBE23_propidl@h DB 01H
__AD360DAF_oleauto@h DB 01H
__0396F1A5_stralign@h DB 01H
__B0C4CEA9_malloc@h DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__09340588_corecrt_math@h DB 01H
__F3BB7801_dcommon@h DB 01H
__FA3A9F83_d3d10@h DB 01H
__A42BBD61_d2d1helper@h DB 01H
__433C12BC_d2d1@h DB 01H
__94107041_dwrite@h DB 01H
__15F97165_intsafe@h DB 01H
__2FFF9A72_vcruntime_new@h DB 01H
__C92AF437_cstdlib DB 01H
__EA052A26_cmath DB 01H
__AD6A91B7_stdio@h DB 01H
__53AB788E_type_traits DB 01H
__37A42F42_xutility DB 01H
__7D20BDF6_vcruntime_exception@h DB 01H
__2EDB6A35_exception DB 01H
__A7626682_limits DB 01H
__94B2127F_xmemory DB 01H
__E06194E3_xstring DB 01H
__A7955068_stdexcept DB 01H
__E20AD420_xcall_once@h DB 01H
__8AA3BE86_time@h DB 01H
__32B7F76F_xthreads@h DB 01H
__CC573A40_atomic DB 01H
__5D57C600_system_error DB 01H
__332CE83C_vcruntime_typeinfo@h DB 01H
__477BDC5B_typeinfo DB 01H
__1BCC6A0C_memory DB 01H
__37893D03_xfacet DB 01H
__58F23F93_xlocinfo DB 01H
__3F5FE0D2_xlocale DB 01H
__61174880_xiosbase DB 01H
__A1D886C5_xlocnum DB 01H
__C1118D8D_ios DB 01H
__B9D77FC5_fstream DB 01H
__6F1FEC90_string DB 01H
__E90981E3_figure_d2d1@h DB 01H
__9FAB02AC_trojuhelnik_d2d1@h DB 01H
__6A8A9493_Grid_d2d1@h DB 01H
__7E37EEE2_collision_d2d1@h DB 01H
__BFE14E61_Shlwapi@h DB 01H
__4C263367_tuple DB 01H
__50E47684_functional DB 01H
__62A468D7_tchar@h DB 01H
__E6E0639A_mbstring@h DB 01H
__3E27AA6F_atlalloc@h DB 01H
__2023EACD_atlconv@h DB 01H
__84D67D56_atltrace@h DB 01H
__B7C315CE_atlexcept@h DB 01H
__A1912DB2_atlchecked@h DB 01H
__30BD78D5_atlwinverapi@h DB 01H
__248C1FC3_atlcore@h DB 01H
__68AEF2DD_atlcomcli@h DB 01H
__3FC45F63_atltransactionmanager@h DB 01H
__8F84CEAC_statreg@h DB 01H
__E85C1562_atlbase@h DB 01H
__C41728E1_algorithm DB 01H
__A51590B7_colorpick@hpp DB 01H
__68D9E3CC_Main@cpp DB 01H
__EACF1662_vector DB 01H
__65CBA1A4_atlsimpcoll@h DB 01H
__FE2771BC_utility DB 01H
__8C31CCAC_sstream DB 01H
__4F9F0F2C_istream DB 01H
__2C4F3A16_ostream DB 01H
__A535E8D4_streambuf DB 01H
__6B8BB304_iosfwd DB 01H
__26089802_iterator DB 01H
__0938E6AE_xstddef DB 01H
__723C2028_atldef@h DB 01H
__B1DF93B2_unknwnbase@h DB 01H
__24D7E6E3_xatomic@h DB 01H
msvcjmc	ENDS
_DATA	SEGMENT
?ScaleDPI@COLORPICK@@2MA DD 042c00000r		; 96	; COLORPICK::ScaleDPI
?speed@@3HA DD	0aH					; speed
?max_speed@@3HA DD 0c8H					; max_speed
?dx@@3MA DD	042480000r			; 50	; dx
?dy@@3MA DD	042480000r			; 50	; dy
?_key@@3_NA DB	01H					; _key
_DATA	ENDS
;	COMDAT ??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe@
CONST	SEGMENT
??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe@ DB 'D', 00H, 'e', 00H, 'l'
	DB	00H, 'e', 00H, 't', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QB_WB
CONST	SEGMENT
?szDelete@ATL@@3QB_WB DD FLAT:??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe@ ; ATL::szDelete
CONST	ENDS
;	COMDAT ??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@
CONST	SEGMENT
??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@ DB 'N', 00H, 'o'
	DB	00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QB_WB
CONST	SEGMENT
?szNoRemove@ATL@@3QB_WB DD FLAT:??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@ ; ATL::szNoRemove
CONST	ENDS
;	COMDAT ??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@
CONST	SEGMENT
??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@ DB 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QB_WB
CONST	SEGMENT
?szForceRemove@ATL@@3QB_WB DD FLAT:??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe@ ; ATL::szForceRemove
CONST	ENDS
;	COMDAT ??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl@ DB 'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QB_WB
CONST	SEGMENT
?szValToken@ATL@@3QB_WB DD FLAT:??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl@ ; ATL::szValToken
CONST	ENDS
;	COMDAT ??_C@_13OPKGLAFF@?$AAB@
CONST	SEGMENT
??_C@_13OPKGLAFF@?$AAB@ DB 'B', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QB_WB
CONST	SEGMENT
?szBinaryVal@ATL@@3QB_WB DD FLAT:??_C@_13OPKGLAFF@?$AAB@ ; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ??_C@_13MKMNOPIJ@?$AAD@
CONST	SEGMENT
??_C@_13MKMNOPIJ@?$AAD@ DB 'D', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QB_WB
CONST	SEGMENT
?szDwordVal@ATL@@3QB_WB DD FLAT:??_C@_13MKMNOPIJ@?$AAD@	; ATL::szDwordVal
CONST	ENDS
;	COMDAT ??_C@_13LHMFKAAD@?$AAM@
CONST	SEGMENT
??_C@_13LHMFKAAD@?$AAM@ DB 'M', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QB_WB
CONST	SEGMENT
?multiszStringVal@ATL@@3QB_WB DD FLAT:??_C@_13LHMFKAAD@?$AAM@ ; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ??_C@_13HADIAKP@?$AAS@
CONST	SEGMENT
??_C@_13HADIAKP@?$AAS@ DB 'S', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QB_WB
CONST	SEGMENT
?szStringVal@ATL@@3QB_WB DD FLAT:??_C@_13HADIAKP@?$AAS@	; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_WinMain@16
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	?abs@@YAJJ@Z					; abs
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	_ceilf
PUBLIC	_cosf
PUBLIC	_sinf
PUBLIC	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
PUBLIC	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
PUBLIC	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
PUBLIC	?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
PUBLIC	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
PUBLIC	?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRoundedRectangle
PUBLIC	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
PUBLIC	?SetTransform@ID2D1RenderTarget@@QAEXABUD2D_MATRIX_3X2_F@@@Z ; ID2D1RenderTarget::SetTransform
PUBLIC	?Clear@ID2D1RenderTarget@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1RenderTarget::Clear
PUBLIC	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
PUBLIC	?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z ; ID2D1HwndRenderTarget::Resize
PUBLIC	?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z ; ID2D1Factory::CreateHwndRenderTarget
PUBLIC	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z		; D2D1::Point2F
PUBLIC	??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2<float>
PUBLIC	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z		; D2D1::SizeU
PUBLIC	??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z		; D2D1::Size<unsigned int>
PUBLIC	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z		; D2D1::RectF
PUBLIC	??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z		; D2D1::Rect<float>
PUBLIC	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
PUBLIC	?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ; D2D1::PixelFormat
PUBLIC	?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ; D2D1::RenderTargetProperties
PUBLIC	?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ; D2D1::HwndRenderTargetProperties
PUBLIC	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z		; D2D1::ColorF::ColorF
PUBLIC	?Init@ColorF@D2D1@@AAEXIM@Z			; D2D1::ColorF::Init
PUBLIC	??0Matrix3x2F@D2D1@@QAE@XZ			; D2D1::Matrix3x2F::Matrix3x2F
PUBLIC	?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ		; D2D1::Matrix3x2F::Identity
PUBLIC	?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z ; D2D1CreateFactory
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?ceil@@YAMM@Z					; ceil
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@I@std@@YAII@Z			; std::_Convert_size<unsigned int>
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z	; std::_Char_traits<wchar_t,unsigned short>::copy
PUBLIC	?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z	; std::_Char_traits<wchar_t,unsigned short>::move
PUBLIC	?length@?$_WChar_traits@_W@std@@SAIPB_W@Z	; std::_WChar_traits<wchar_t>::length
PUBLIC	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z	; std::_WChar_traits<wchar_t>::assign
PUBLIC	?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z	; std::_WChar_traits<wchar_t>::to_char_type
PUBLIC	?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z	; std::_WChar_traits<wchar_t>::to_int_type
PUBLIC	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z	; std::_WChar_traits<wchar_t>::eq_int_type
PUBLIC	?not_eof@?$_WChar_traits@_W@std@@SAGABG@Z	; std::_WChar_traits<wchar_t>::not_eof
PUBLIC	?eof@?$_WChar_traits@_W@std@@SAGXZ		; std::_WChar_traits<wchar_t>::eof
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z	; std::_Char_traits<char,int>::move
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z	; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z	; std::_Narrow_char_traits<char,int>::eq
PUBLIC	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z	; std::_Narrow_char_traits<char,int>::not_eof
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXQADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEIII@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXQAD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Erase_noexcept
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
PUBLIC	?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEXI@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Construct@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXQA_W0Urandom_access_iterator_tag@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
PUBLIC	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAIIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEABV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??0bad_cast@std@@QAE@XZ				; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UAE@XZ				; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QAE@ABV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UAEPAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??$_Adl_verify_range@PA_WPA_W@std@@YAXABQA_W0@Z	; std::_Adl_verify_range<wchar_t *,wchar_t *>
PUBLIC	??$_Adl_verify_range@PADPAD@std@@YAXABQAD0@Z	; std::_Adl_verify_range<char *,char *>
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	??$_Fgetc@_W@std@@YA_NAA_WPAU_iobuf@@@Z		; std::_Fgetc<wchar_t>
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	??$_Fputc@_W@std@@YA_N_WPAU_iobuf@@@Z		; std::_Fputc<wchar_t>
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
PUBLIC	??$_Ungetc@_W@std@@YA_NAB_WPAU_iobuf@@@Z	; std::_Ungetc<wchar_t>
PUBLIC	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
PUBLIC	??$_Integral_to_string@DH@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@H@Z ; std::_Integral_to_string<char,int>
PUBLIC	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
PUBLIC	??$_Integral_to_string@_WH@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@H@Z ; std::_Integral_to_string<wchar_t,int>
PUBLIC	?Find_number@@YAHQAHHH@Z			; Find_number
PUBLIC	??0TrojBody2@@QAE@XZ				; TrojBody2::TrojBody2
PUBLIC	??0FigurePart@@QAE@XZ				; FigurePart::FigurePart
PUBLIC	??1FigurePart@@QAE@XZ				; FigurePart::~FigurePart
PUBLIC	??0FigurePart@@QAE@$$QAU0@@Z			; FigurePart::FigurePart
PUBLIC	?GetRGBfromColorref@@YA?AUrgb@@K@Z		; GetRGBfromColorref
PUBLIC	?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ParseFigurePart
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetFigurePartsCount
PUBLIC	?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; GetFigurePart
PUBLIC	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
PUBLIC	??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?s2ws@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; s2ws
PUBLIC	?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SaveFigurePart
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
PUBLIC	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXABV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::__autoclassinit2
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; SaveFigurePartW
PUBLIC	??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??1?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAE@XZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::~basic_ofstream<wchar_t,std::char_traits<wchar_t> >
PUBLIC	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
PUBLIC	??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::basic_filebuf<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >
PUBLIC	?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::open
PUBLIC	?close@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::close
PUBLIC	?_Lock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::underflow
PUBLIC	?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::uflow
PUBLIC	?xsgetn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
PUBLIC	?xsputn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsputn
PUBLIC	?seekoff@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@PA_W_J@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::setbuf
PUBLIC	?sync@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::sync
PUBLIC	?imbue@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::imbue
PUBLIC	?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXABV?$codecvt@_WDU_Mbstatet@@@2@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Set_back
PUBLIC	??_G?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::__autoclassinit2
PUBLIC	??_G?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vbase destructor'
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; SaveFigure
PUBLIC	?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z ; GetFigureFromFile
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::__autoclassinit2
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z ; CreateFigureFromFigureParts
PUBLIC	?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SaveFigurePartToSvg
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SaveFigurePartToHtml
PUBLIC	?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; SaveFigurePartToSvgW
PUBLIC	??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; SaveFigurePartToHtmlW
PUBLIC	?FindMax@@YAHQAHH@Z				; FindMax
PUBLIC	?FindMin@@YAHQAHH@Z				; FindMin
PUBLIC	?GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ ; GetColorFromChooseColorDialog
PUBLIC	?GetColorFromChooseColorDialog2@@YAKXZ		; GetColorFromChooseColorDialog2
PUBLIC	??0Objekt@@QAE@XZ				; Objekt::Objekt
PUBLIC	??1Objekt@@QAE@XZ				; Objekt::~Objekt
PUBLIC	?_TrojBody@@YA?AUTrojBody@@HHHH@Z		; _TrojBody
PUBLIC	?_TrojBody2@@YA?AUTrojBody2@@HHHHHH@Z		; _TrojBody2
PUBLIC	?RotatePrimka@@YA?AUD2D_POINT_2F@@MMMMM_N@Z	; RotatePrimka
PUBLIC	??$pow@MH$0A@@@YANMH@Z				; pow<float,int,0>
PUBLIC	?RotatePrimka2@@YA?AUD2D_POINT_2F@@U1@0M_N@Z	; RotatePrimka2
PUBLIC	??0Trojuhelnik@@QAE@PAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@UTrojBody2@@H@Z ; Trojuhelnik::Trojuhelnik
PUBLIC	??1Trojuhelnik@@QAE@XZ				; Trojuhelnik::~Trojuhelnik
PUBLIC	?Draw@Trojuhelnik@@QAEXXZ			; Trojuhelnik::Draw
PUBLIC	?Erase@Trojuhelnik@@QAEXXZ			; Trojuhelnik::Erase
PUBLIC	?Move2@Trojuhelnik@@QAEXHH_N@Z			; Trojuhelnik::Move2
PUBLIC	?__autoclassinit2@Trojuhelnik@@QAEXI@Z		; Trojuhelnik::__autoclassinit2
PUBLIC	?DrawGrid@@YAXPAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@HH@Z ; DrawGrid
PUBLIC	?Zoom@@YAXPAUID2D1RenderTarget@@MM@Z		; Zoom
PUBLIC	?Collision@@YAHUCollision_area@@0@Z		; Collision
PUBLIC	??$AtlMultiply@I@ATL@@YAJPAIII@Z		; ATL::AtlMultiply<unsigned int>
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<2,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2
PUBLIC	??0CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	??0COLORPICKOPT@@QAE@XZ				; COLORPICKOPT::COLORPICKOPT
PUBLIC	??0?$CComPtrBase@UIDWriteFactory@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IDWriteFactory>::CComPtrBase<IDWriteFactory>
PUBLIC	??1?$CComPtrBase@UIDWriteFactory@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDWriteFactory>::~CComPtrBase<IDWriteFactory>
PUBLIC	??B?$CComPtrBase@UIDWriteFactory@@@ATL@@QBEPAUIDWriteFactory@@XZ ; ATL::CComPtrBase<IDWriteFactory>::operator IDWriteFactory *
PUBLIC	??I?$CComPtrBase@UIDWriteFactory@@@ATL@@QAEPAPAUIDWriteFactory@@XZ ; ATL::CComPtrBase<IDWriteFactory>::operator&
PUBLIC	??7?$CComPtrBase@UIDWriteFactory@@@ATL@@QBE_NXZ	; ATL::CComPtrBase<IDWriteFactory>::operator!
PUBLIC	??0?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ	; ATL::CComPtr<IDWriteFactory>::CComPtr<IDWriteFactory>
PUBLIC	??1?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ	; ATL::CComPtr<IDWriteFactory>::~CComPtr<IDWriteFactory>
PUBLIC	??0?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::CComPtrBase<ID2D1HwndRenderTarget>
PUBLIC	??1?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::~CComPtrBase<ID2D1HwndRenderTarget>
PUBLIC	??B?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAUID2D1HwndRenderTarget@@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator ID2D1HwndRenderTarget *
PUBLIC	??I?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEPAPAUID2D1HwndRenderTarget@@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator&
PUBLIC	??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator->
PUBLIC	??7?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator!
PUBLIC	?Release@?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEXXZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::Release
PUBLIC	??0?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1HwndRenderTarget>::CComPtr<ID2D1HwndRenderTarget>
PUBLIC	??1?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1HwndRenderTarget>::~CComPtr<ID2D1HwndRenderTarget>
PUBLIC	??0?$CComPtrBase@UID2D1Factory@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ID2D1Factory>::CComPtrBase<ID2D1Factory>
PUBLIC	??1?$CComPtrBase@UID2D1Factory@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ID2D1Factory>::~CComPtrBase<ID2D1Factory>
PUBLIC	??B?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAUID2D1Factory@@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator ID2D1Factory *
PUBLIC	??I?$CComPtrBase@UID2D1Factory@@@ATL@@QAEPAPAUID2D1Factory@@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator&
PUBLIC	??C?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1Factory@@@1@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator->
PUBLIC	??7?$CComPtrBase@UID2D1Factory@@@ATL@@QBE_NXZ	; ATL::CComPtrBase<ID2D1Factory>::operator!
PUBLIC	??0?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ	; ATL::CComPtr<ID2D1Factory>::CComPtr<ID2D1Factory>
PUBLIC	??1?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ	; ATL::CComPtr<ID2D1Factory>::~CComPtr<ID2D1Factory>
PUBLIC	?ToRGB@COLORPICK@@SAK_NU_D3DCOLORVALUE@@@Z	; COLORPICK::ToRGB
PUBLIC	?GetAValue@COLORPICK@@SAEK@Z			; COLORPICK::GetAValue
PUBLIC	?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z	; COLORPICK::FromRGB
PUBLIC	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z		; COLORPICK::fromRGBtoHSL
PUBLIC	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z		; COLORPICK::fromHSLtoRGB
PUBLIC	?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z ; COLORPICK::GetD2SolidBrush
PUBLIC	?KeyDown@COLORPICK@@QAEXIJ_N00@Z		; COLORPICK::KeyDown
PUBLIC	?Wheel@COLORPICK@@QAEXIJ@Z			; COLORPICK::Wheel
PUBLIC	?LeftUp@COLORPICK@@QAEXIJ@Z			; COLORPICK::LeftUp
PUBLIC	?EndEdit@COLORPICK@@QAEX_N@Z			; COLORPICK::EndEdit
PUBLIC	?LeftDown@COLORPICK@@QAE_NIJ@Z			; COLORPICK::LeftDown
PUBLIC	?Redraw@COLORPICK@@QAEXXZ			; COLORPICK::Redraw
PUBLIC	?MouseMove@COLORPICK@@QAEXIJ@Z			; COLORPICK::MouseMove
PUBLIC	?RightDown@COLORPICK@@QAEXIJ@Z			; COLORPICK::RightDown
PUBLIC	?LeftDoubleClick@COLORPICK@@QAEXIJ@Z		; COLORPICK::LeftDoubleClick
PUBLIC	??0?$CComPtrBase@UIDWriteTextFormat@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::CComPtrBase<IDWriteTextFormat>
PUBLIC	??1?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::~CComPtrBase<IDWriteTextFormat>
PUBLIC	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
PUBLIC	??I?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAEPAPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator&
PUBLIC	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
PUBLIC	??7?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator!
PUBLIC	??0?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ	; ATL::CComPtr<IDWriteTextFormat>::CComPtr<IDWriteTextFormat>
PUBLIC	??1?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ	; ATL::CComPtr<IDWriteTextFormat>::~CComPtr<IDWriteTextFormat>
PUBLIC	?CreateBrushes@COLORPICK@@QAEXPAUIDWriteFactory@@@Z ; COLORPICK::CreateBrushes
PUBLIC	?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UtagRECT@@@Z ; COLORPICK::Paint
PUBLIC	?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z ; COLORPICK::Paint
PUBLIC	??0PT@COLORPICK@@QAE@XZ				; COLORPICK::PT::PT
PUBLIC	??0?$allocator@UPT@COLORPICK@@@std@@QAE@XZ	; std::allocator<COLORPICK::PT>::allocator<COLORPICK::PT>
PUBLIC	?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::deallocate
PUBLIC	?allocate@?$allocator@UPT@COLORPICK@@@std@@QAEPAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAIABV?$allocator@UPT@COLORPICK@@@2@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::max_size
PUBLIC	??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >
PUBLIC	??1?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::~vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >
PUBLIC	?push_back@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::push_back
PUBLIC	?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Reallocate_exactly
PUBLIC	?reserve@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::reserve
PUBLIC	?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
PUBLIC	?_Unchecked_begin@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_end
PUBLIC	?empty@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBE_NXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::empty
PUBLIC	?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::max_size
PUBLIC	?capacity@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::capacity
PUBLIC	?_Umove@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEPAUPT@COLORPICK@@PAU34@00@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00U?$integral_constant@_N$00@2@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEII@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXQAUPT@COLORPICK@@II@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Change_array
PUBLIC	?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Tidy
PUBLIC	?_Xlength@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@CAXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
PUBLIC	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEABV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<COLORPICK::PT> >::_Vector_val<std::_Simple_types<COLORPICK::PT> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QBEABV?$allocator@UPT@COLORPICK@@@2@XZ ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first
PUBLIC	?Main_DP@COLORPICK@@QAGJPAUHWND__@@IIJ@Z	; COLORPICK::Main_DP
PUBLIC	?Main2_DP@COLORPICK@@SGJPAUHWND__@@IIJ@Z	; COLORPICK::Main2_DP
PUBLIC	?CenterWindow@COLORPICK@@QAEXPAUtagRECT@@@Z	; COLORPICK::CenterWindow
PUBLIC	?Show@COLORPICK@@QAEJPAUHWND__@@AAU_D3DCOLORVALUE@@PAUCOLORPICKOPT@@@Z ; COLORPICK::Show
PUBLIC	??0COLORPICK@@QAE@XZ				; COLORPICK::COLORPICK
PUBLIC	??1COLORPICK@@QAE@XZ				; COLORPICK::~COLORPICK
PUBLIC	?__autoclassinit2@COLORPICK@@QAEXI@Z		; COLORPICK::__autoclassinit2
PUBLIC	??$max@M@std@@YAABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YAABMABM0@Z			; std::min<float>
PUBLIC	??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>
PUBLIC	??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@PAUID2D1SolidColorBrush@@@Z ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>
PUBLIC	?Swap@?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<ID2D1SolidColorBrush>::Swap
PUBLIC	??1?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::~CComPtrBase<ID2D1SolidColorBrush>
PUBLIC	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
PUBLIC	??I?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAEPAPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator&
PUBLIC	??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
PUBLIC	??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@PAUID2D1SolidColorBrush@@@Z ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>
PUBLIC	??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@$$QAV01@@Z ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>
PUBLIC	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1SolidColorBrush>::~CComPtr<ID2D1SolidColorBrush>
PUBLIC	?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z ; ATL::CComPtr<ID2D1SolidColorBrush>::__autoclassinit2
PUBLIC	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z	; COLORPICK::InRect<float>
PUBLIC	??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>
PUBLIC	??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@PAUID2D1LinearGradientBrush@@@Z ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>
PUBLIC	?Swap@?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::Swap
PUBLIC	??1?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::~CComPtrBase<ID2D1LinearGradientBrush>
PUBLIC	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
PUBLIC	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
PUBLIC	??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>
PUBLIC	??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@PAUID2D1LinearGradientBrush@@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>
PUBLIC	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
PUBLIC	??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1LinearGradientBrush>::~CComPtr<ID2D1LinearGradientBrush>
PUBLIC	?__autoclassinit2@?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEXI@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::__autoclassinit2
PUBLIC	??0?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAE@PAUID2D1GradientStopCollection@@@Z ; ATL::CComPtrBase<ID2D1GradientStopCollection>::CComPtrBase<ID2D1GradientStopCollection>
PUBLIC	?Swap@?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<ID2D1GradientStopCollection>::Swap
PUBLIC	??1?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::~CComPtrBase<ID2D1GradientStopCollection>
PUBLIC	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
PUBLIC	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
PUBLIC	??0?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@PAUID2D1GradientStopCollection@@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::CComPtr<ID2D1GradientStopCollection>
PUBLIC	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
PUBLIC	??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1GradientStopCollection>::~CComPtr<ID2D1GradientStopCollection>
PUBLIC	?__autoclassinit2@?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEXI@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::__autoclassinit2
PUBLIC	??0?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAE@XZ ; std::allocator<D2D1_GRADIENT_STOP>::allocator<D2D1_GRADIENT_STOP>
PUBLIC	?deallocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEXQAUD2D1_GRADIENT_STOP@@I@Z ; std::allocator<D2D1_GRADIENT_STOP>::deallocate
PUBLIC	?allocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEPAUD2D1_GRADIENT_STOP@@I@Z ; std::allocator<D2D1_GRADIENT_STOP>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAIABV?$allocator@UD2D1_GRADIENT_STOP@@@2@@Z ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::max_size
PUBLIC	??0?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@IABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
PUBLIC	??1?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::~vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
PUBLIC	?data@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::data
PUBLIC	?max_size@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QBEIXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::max_size
PUBLIC	??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
PUBLIC	?_Ufill@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEPAUD2D1_GRADIENT_STOP@@PAU3@IU_Value_init_tag@2@@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Ufill
PUBLIC	?_Destroy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXPAUD2D1_GRADIENT_STOP@@0@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Tidy
PUBLIC	?_Xlength@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@CAXXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Xlength
PUBLIC	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
PUBLIC	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@ABEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QBEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::__autoclassinit2
PUBLIC	??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z ; D2D1CreateFactory<ID2D1Factory>
PUBLIC	??0DemoApp@@QAE@XZ				; DemoApp::DemoApp
PUBLIC	??1DemoApp@@QAE@XZ				; DemoApp::~DemoApp
PUBLIC	?Initialize@DemoApp@@QAEJXZ			; DemoApp::Initialize
PUBLIC	?RunMessageLoop@DemoApp@@QAEXXZ			; DemoApp::RunMessageLoop
PUBLIC	?CreateDeviceIndependentResources@DemoApp@@AAEJXZ ; DemoApp::CreateDeviceIndependentResources
PUBLIC	?CreateDeviceResources@DemoApp@@AAEJXZ		; DemoApp::CreateDeviceResources
PUBLIC	?DiscardDeviceResources@DemoApp@@AAEXXZ		; DemoApp::DiscardDeviceResources
PUBLIC	?OnRender@DemoApp@@AAEJXZ			; DemoApp::OnRender
PUBLIC	?LoadBitmapFromFile@DemoApp@@AAEJPB_WIIPAPAUID2D1Bitmap@@@Z ; DemoApp::LoadBitmapFromFile
PUBLIC	?OnResize@DemoApp@@AAEXII@Z			; DemoApp::OnResize
PUBLIC	?WndProc@DemoApp@@CGJPAUHWND__@@IIJ@Z		; DemoApp::WndProc
PUBLIC	?__autoclassinit2@DemoApp@@QAEXI@Z		; DemoApp::__autoclassinit2
PUBLIC	??$SafeRelease@UID2D1Factory@@@@YAXPAPAUID2D1Factory@@@Z ; SafeRelease<ID2D1Factory>
PUBLIC	??$SafeRelease@UID2D1HwndRenderTarget@@@@YAXPAPAUID2D1HwndRenderTarget@@@Z ; SafeRelease<ID2D1HwndRenderTarget>
PUBLIC	??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z ; SafeRelease<ID2D1SolidColorBrush>
PUBLIC	??$SafeRelease@UIWICBitmapDecoder@@@@YAXPAPAUIWICBitmapDecoder@@@Z ; SafeRelease<IWICBitmapDecoder>
PUBLIC	??$SafeRelease@UIWICBitmapFrameDecode@@@@YAXPAPAUIWICBitmapFrameDecode@@@Z ; SafeRelease<IWICBitmapFrameDecode>
PUBLIC	??$SafeRelease@UIWICStream@@@@YAXPAPAUIWICStream@@@Z ; SafeRelease<IWICStream>
PUBLIC	??$SafeRelease@UIWICFormatConverter@@@@YAXPAPAUIWICFormatConverter@@@Z ; SafeRelease<IWICFormatConverter>
PUBLIC	??$SafeRelease@UIWICBitmapScaler@@@@YAXPAPAUIWICBitmapScaler@@@Z ; SafeRelease<IWICBitmapScaler>
PUBLIC	??$_Unfancy_maybe_null@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z ; std::_Unfancy_maybe_null<D2D1_GRADIENT_STOP>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0UD2D1_GRADIENT_STOP@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D2D1_GRADIENT_STOP>
PUBLIC	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@$$V@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1><std::allocator<D2D1_GRADIENT_STOP> const &>
PUBLIC	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
PUBLIC	??$emplace_back@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@ABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::emplace_back<COLORPICK::PT const &>
PUBLIC	??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ; std::forward<COLORPICK::PT const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAE@ABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_back_with_unused_capacity<COLORPICK::PT const &>
PUBLIC	??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z ; std::_Unfancy<COLORPICK::PT>
PUBLIC	??$construct@UPT@COLORPICK@@ABU12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT const &>
PUBLIC	??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_reallocate<COLORPICK::PT const &>
PUBLIC	??$?0UPT@COLORPICK@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UPT@COLORPICK@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><COLORPICK::PT>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
PUBLIC	??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<wchar_t,char,_Mbstatet> >
PUBLIC	??$addressof@V?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@std@@YAPAV?$basic_filebuf@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::addressof<std::basic_filebuf<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$max@PAD@std@@YAABQADABQAD0@Z			; std::max<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$move@AAV?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::move<std::allocator<wchar_t> &>
PUBLIC	??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Destroy_range@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAXPAUPT@COLORPICK@@QAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ; std::_Destroy_range<std::allocator<COLORPICK::PT> >
PUBLIC	??$addressof@$$CBV?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@_WDU_Mbstatet@@@0@ABV10@@Z ; std::addressof<std::codecvt<wchar_t,char,_Mbstatet> const >
PUBLIC	??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@DDU_Mbstatet@@@0@ABV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
PUBLIC	??$_Destroy_in_place@PA_W@std@@YAXAAPA_W@Z	; std::_Destroy_in_place<wchar_t *>
PUBLIC	??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z ; <lambda_03628ca18370b1f44a99b655e704819b>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??R<lambda_15711c68e099a15a58f4d77303cb286d>@@QBEXQADQBDID@Z ; <lambda_15711c68e099a15a58f4d77303cb286d>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_15711c68e099a15a58f4d77303cb286d>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_15711c68e099a15a58f4d77303cb286d>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_15711c68e099a15a58f4d77303cb286d>,char>
PUBLIC	??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
PUBLIC	??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	??$_Get_size_of_n@$00@std@@YAII@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Destroy_range@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAXPAUD2D1_GRADIENT_STOP@@QAU1@AAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ; std::_Destroy_range<std::allocator<D2D1_GRADIENT_STOP> >
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YAII@Z		; std::_Get_size_of_n<32>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@_W@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
PUBLIC	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ; std::_Uninitialized_move<COLORPICK::PT *,std::allocator<COLORPICK::PT> >
PUBLIC	??R<lambda_2fb699096920f2dc628cb0826b07831d>@@QBEXQA_WQB_WI1I@Z ; <lambda_2fb699096920f2dc628cb0826b07831d>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_2fb699096920f2dc628cb0826b07831d>,wchar_t const *,unsigned int>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Verify_range@D@std@@YAXQBD0@Z		; std::_Verify_range<char>
PUBLIC	??$_Verify_range@_W@std@@YAXQB_W0@Z		; std::_Verify_range<wchar_t>
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QBEXPAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAEAAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	??$end@D$0BF@@std@@YAPADAAY0BF@D@Z		; std::end<char,21>
PUBLIC	??$_UIntegral_to_buff@DI@std@@YAPADPADI@Z	; std::_UIntegral_to_buff<char,unsigned int>
PUBLIC	??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
PUBLIC	??$end@_W$0BF@@std@@YAPA_WAAY0BF@_W@Z		; std::end<wchar_t,21>
PUBLIC	??$_UIntegral_to_buff@_WI@std@@YAPA_WPA_WI@Z	; std::_UIntegral_to_buff<wchar_t,unsigned int>
PUBLIC	??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><wchar_t *,0>
PUBLIC	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned int>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAABV?$allocator@UD2D1_GRADIENT_STOP@@@0@ABV10@@Z ; std::forward<std::allocator<D2D1_GRADIENT_STOP> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >::~_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$forward@ABQAD@std@@YAABQADABQAD@Z		; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Get_unwrapped@ABQAUPT@COLORPICK@@@std@@YA@ABQAUPT@COLORPICK@@@Z ; std::_Get_unwrapped<COLORPICK::PT * const &>
PUBLIC	??$move@AAUPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ; std::move<COLORPICK::PT &>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@PAUPT@COLORPICK@@AAV?$allocator@UPT@COLORPICK@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::~_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::__autoclassinit2
PUBLIC	??$_Emplace_back@UPT@COLORPICK@@@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEX$$QAUPT@COLORPICK@@@Z ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Emplace_back<COLORPICK::PT>
PUBLIC	??$exchange@PAV_Facet_base@std@@PAV12@@std@@YAPAV_Facet_base@0@AAPAV10@$$QAPAV10@@Z ; std::exchange<std::_Facet_base *,std::_Facet_base *>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D2D1_GRADIENT_STOP> >
PUBLIC	??$_Get_size_of_n@$01@std@@YAII@Z		; std::_Get_size_of_n<2>
PUBLIC	??$?0AAV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> &>
PUBLIC	??$_Allocators_equal@V?$allocator@_W@std@@@std@@YA_NABV?$allocator@_W@0@0@Z ; std::_Allocators_equal<std::allocator<wchar_t> >
PUBLIC	??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>
PUBLIC	??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z ; std::_Allocators_equal<std::allocator<char> >
PUBLIC	??R<lambda_09fe38f6114539daa867a3e4d6874f49>@@QBEXQA_WQB_WII1I@Z ; <lambda_09fe38f6114539daa867a3e4d6874f49>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_09fe38f6114539daa867a3e4d6874f49>,unsigned int,wchar_t const *,unsigned int>
PUBLIC	??R<lambda_4d79bb85f269e6e8002a4599002d832c>@@QBEXQADQBDII1I@Z ; <lambda_4d79bb85f269e6e8002a4599002d832c>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_4d79bb85f269e6e8002a4599002d832c>,unsigned int,char const *,unsigned int>
PUBLIC	??$_Get_size_of_n@$0BE@@std@@YAII@Z		; std::_Get_size_of_n<20>
PUBLIC	??$?0AAPAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$_Get_unwrapped@AAPAD@std@@YA@AAPAD@Z		; std::_Get_unwrapped<char * &>
PUBLIC	??$?0ABV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
PUBLIC	??$_Get_unwrapped@AAPA_W@std@@YA@AAPA_W@Z	; std::_Get_unwrapped<wchar_t * &>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z		; std::forward<wchar_t * const &>
PUBLIC	??$forward@UPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ; std::forward<COLORPICK::PT>
PUBLIC	??$construct@UPT@COLORPICK@@U12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@PAUD2D1_GRADIENT_STOP@@AAV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::~_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::__autoclassinit2
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXXZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Emplace_back<>
PUBLIC	??$forward@AAV?$allocator@_W@std@@@std@@YAAAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> &>
PUBLIC	??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> &>
PUBLIC	??$forward@AAPAV_Facet_base@std@@@std@@YAAAPAV_Facet_base@0@AAPAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$forward@ABV?$allocator@_W@std@@@std@@YAABV?$allocator@_W@0@ABV10@@Z ; std::forward<std::allocator<wchar_t> const &>
PUBLIC	??$_Unfancy@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z ; std::_Unfancy<D2D1_GRADIENT_STOP>
PUBLIC	??$construct@UD2D1_GRADIENT_STOP@@$$V@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAXAAV?$allocator@UD2D1_GRADIENT_STOP@@@1@QAUD2D1_GRADIENT_STOP@@@Z ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::construct<D2D1_GRADIENT_STOP>
PUBLIC	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vector deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0FE@ELBNMLDG@D?3?2Microsoft?5Visual?5Studio?22019@ ; `string'
PUBLIC	??_C@_1KI@PMMCEADF@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	?__LINE__Var@?0??ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA ; `ParseFigurePart'::`1'::__LINE__Var
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@ ; `string'
PUBLIC	??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`vftable'
PUBLIC	??_7?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vftable'
PUBLIC	??_8?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@7B@ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vbtable'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	?__LINE__Var@?0??SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA ; `SaveFigurePartToSvg'::`1'::__LINE__Var
PUBLIC	??_C@_0CM@CBKGBNFK@?$DM?$DPxml?5version?5?$DN?5?$CC1?40?$CC?5encoding?5@ ; `string'
PUBLIC	??_C@_0GD@CJBBGBLP@?$DM?$CBDOCTYPE?5svg?5PUBLIC?5?$CC?9?1?1W3C?1?1D@ ; `string'
PUBLIC	??_C@_0LI@FFEFNLND@?$DMsvg?5version?$DN?$CC1?41?$CC?5id?$DN?$CCLayer_2?$CC@ ; `string'
PUBLIC	??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@		; `string'
PUBLIC	??_C@_01IHBHIGKO@?0@				; `string'
PUBLIC	??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@ ; `string'
PUBLIC	??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@ ; `string'
PUBLIC	??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@		; `string'
PUBLIC	??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@	; `string'
PUBLIC	??_C@_06HNBPLMD@?$DM?1svg?$DO@			; `string'
PUBLIC	??_C@_0BP@NDPCLPIP@?$CJ?$DL?5stroke?9width?31?$DL?5stroke?3rgb?$CI@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@ ; `string'
PUBLIC	?__LINE__Var@?0??SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA ; `SaveFigurePartToHtml'::`1'::__LINE__Var
PUBLIC	??_C@_06GMAAMPJO@?$DMhmtl?$DO@			; `string'
PUBLIC	??_C@_06DFKEHCEK@?$DMhead?$DO@			; `string'
PUBLIC	??_C@_0CA@NKEDGCOF@?$DMtitle?$DO?5Figure?5to?5html?5?$DM?1title?$DO@ ; `string'
PUBLIC	??_C@_07EJLOLCDM@?$DM?1head?$DO@		; `string'
PUBLIC	??_C@_06PNKPIJJM@?$DMbody?$DO@			; `string'
PUBLIC	??_C@_0CE@MNEHCCIE@?$DMsvg?5width?$DN?$CC10000?$CC?5height?$DN?$CC1000@ ; `string'
PUBLIC	??_C@_07IBLFEJOK@?$DM?1body?$DO@		; `string'
PUBLIC	??_C@_07FAPLOCAO@?$DM?1html?$DO@		; `string'
PUBLIC	?__LINE__Var@?0??SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA ; `SaveFigurePartToSvgW'::`1'::__LINE__Var
PUBLIC	??_C@_1FI@OHEDHLJN@?$AA?$DM?$AA?$DP?$AAx?$AAm?$AAl?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_1MG@LPBBAEDP@?$AA?$DM?$AA?$CB?$AAD?$AAO?$AAC?$AAT?$AAY?$AAP?$AAE?$AA?5?$AAs?$AAv?$AAg?$AA?5?$AAP@ ; `string'
PUBLIC	??_C@_1BHA@MHEFOIFM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$DN?$AA?$CC?$AA1@ ; `string'
PUBLIC	??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@ ; `string'
PUBLIC	??_C@_13DEFPDAGF@?$AA?0@			; `string'
PUBLIC	??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@ ; `string'
PUBLIC	??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@ ; `string'
PUBLIC	??_C@_1BG@HONDCOFM@?$AA?$CC?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$DN?$AA?$CC@ ; `string'
PUBLIC	??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@ ; `string'
PUBLIC	??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@ ; `string'
PUBLIC	??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@ ; `string'
PUBLIC	??_C@_13HOIJIPNN@?$AA?5@			; `string'
PUBLIC	??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0??SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA ; `SaveFigurePartToHtmlW'::`1'::__LINE__Var
PUBLIC	??_C@_1O@OCPIBJEO@?$AA?$DM?$AAh?$AAm?$AAt?$AAl?$AA?$DO@ ; `string'
PUBLIC	??_C@_1O@CJCHOEJI@?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO@ ; `string'
PUBLIC	??_C@_1EA@JCFGIIMH@?$AA?$DM?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?5?$AAF?$AAi?$AAg?$AAu?$AAr?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1BA@FIMOFJJG@?$AA?$DM?$AA?1?$AAh?$AAe?$AAa?$AAd?$AA?$DO@ ; `string'
PUBLIC	??_C@_1O@CDJKIDBB@?$AA?$DM?$AAb?$AAo?$AAd?$AAy?$AA?$DO@ ; `string'
PUBLIC	??_C@_1EI@ICGNNPIM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC?$AA1?$AA0?$AA0@ ; `string'
PUBLIC	??_C@_1BA@FCHDDOBP@?$AA?$DM?$AA?1?$AAb?$AAo?$AAd?$AAy?$AA?$DO@ ; `string'
PUBLIC	??_C@_1BA@CLFOCEGC@?$AA?$DM?$AA?1?$AAh?$AAt?$AAm?$AAl?$AA?$DO@ ; `string'
PUBLIC	??_C@_19GFDACHI@?$AAI?$AAn?$AAf?$AAo@		; `string'
PUBLIC	??_C@_1JG@MIJPBHCG@?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1LM@NDOEFOIE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl@ ; `string'
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM@ ; `string'
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI@ ; `string'
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn@ ; `string'
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi@ ; `string'
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@ ; `string'
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg@ ; `string'
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn@ ; `string'
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi@ ; `string'
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn@ ; `string'
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt@ ; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi@ ; `string'
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe@ ; `string'
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe@ ; `string'
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl@ ; `string'
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@ ; `string'
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp@ ; `string'
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl@ ; `string'
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt@ ; `string'
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc@ ; `string'
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI@ ; `string'
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1LM@KAEPDMAH@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_1LK@HHCFJJEI@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_0FN@LAAFIOOO@D?3?2Microsoft?5Visual?5Studio?22019@ ; `string'
PUBLIC	??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA ; `ATL::AtlWinModuleInit'::`1'::__LINE__Var
PUBLIC	??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_19LELMJPKF@?$AAe?$AAd?$AAi?$AAt@		; `string'
PUBLIC	??_C@_13NIHIEAGH@?$AAG@				; `string'
PUBLIC	??_C@_13PHJMHGG@?$AAL@				; `string'
PUBLIC	??_C@_13IABLFADB@?$AAH@				; `string'
PUBLIC	??_C@_13LPLPOHMK@?$AAR@				; `string'
PUBLIC	??_C@_13PNBDBPLL@?$AAA@				; `string'
PUBLIC	??_C@_17DLHNGEBC@?$AAH?$AAS?$AAL@		; `string'
PUBLIC	??_C@_17KOJOHOEP@?$AAR?$AAG?$AAB@		; `string'
PUBLIC	??_C@_15PMCGDJNJ@?$AAO?$AAK@			; `string'
PUBLIC	??_C@_1O@BBGMCBMK@?$AAC?$AAA?$AAN?$AAC?$AAE?$AAL@ ; `string'
PUBLIC	??_C@_17MGDNIAJI@?$AAR?$AAE?$AAD@		; `string'
PUBLIC	??_C@_15FPHCHCFA@?$AA?$CF?$AAi@			; `string'
PUBLIC	??_C@_1M@DIBDEJMC@?$AAG?$AAR?$AAE?$AAE?$AAN@	; `string'
PUBLIC	??_C@_19IIBKGPN@?$AAB?$AAL?$AAU?$AAE@		; `string'
PUBLIC	??_C@_17JACMMIIF@?$AAH?$AAU?$AAE@		; `string'
PUBLIC	??_C@_17MBBPJFIP@?$AAS?$AAA?$AAT@		; `string'
PUBLIC	??_C@_1M@FHNADEIL@?$AAL?$AAI?$AAG?$AAH?$AAT@	; `string'
PUBLIC	??_C@_1M@DOOPGBLO@?$AAA?$AAL?$AAP?$AAH?$AAA@	; `string'
PUBLIC	??_C@_19LKCICPAE@?$AA?$CF?$AAi?$AA?$CF?$AA?$CF@	; `string'
PUBLIC	__GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
PUBLIC	??_C@_0EB@OAIDDNB@?$AB?$AA?$PP?$PP?$AA?$AA?$AA?$AA?$AA?$AA?$AA?$AAH?$AI?$AI?$IA?$AA?$AA?$AA?$AA?$AA?$AA?$CB?$AC?z?$AA?$AA?$AA?$AA?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@PBMEKDNI@?$AAC?$AAL?$AAA?$AAS?$AAS@	; `string'
PUBLIC	?prx@@3VCOLORPICK@@A				; prx
PUBLIC	??_C@_1BG@KBOCNCBA@?$AAD?$AA2?$AAD?$AAD?$AAe?$AAm?$AAo?$AAA?$AAp?$AAp@ ; `string'
PUBLIC	??_C@_1GI@HJJBOMF@?$AAD?$AAe?$AAm?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAl@ ; `string'
PUBLIC	??_C@_1CI@MADGDFGA@?$AAC?$AAo?$AAl?$AAl?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0FD@COPLKMDI@D?3?2Microsoft?5Visual?5Studio?22019@ ; `string'
PUBLIC	??_C@_1KG@CEOCEOEM@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_1MK@FKANIDJF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@	; `string'
PUBLIC	??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@	; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1MC@BJDPJDEC@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_0FE@LCNAMHNP@D?3?2Microsoft?5Visual?5Studio?22019@ ; `string'
PUBLIC	??_C@_1KI@BCEOLJOE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init'::`2'::_Stinit
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@ ; `string'
PUBLIC	??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@ ; `string'
PUBLIC	??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@ ; `string'
PUBLIC	??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	__GUID_06152247_6f50_465a_9245_118bfd3b6007
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<wchar_t,char,_Mbstatet> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_0FF@MAKIMAC@D?3?2Microsoft?5Visual?5Studio?22019@ ; `string'
PUBLIC	??_C@_1KK@NJCNFCOG@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@00800000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3d75c28f
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3f91df46a2529d39
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@40c90e56
PUBLIC	__real@41200000
PUBLIC	__real@41700000
PUBLIC	__real@41a00000
PUBLIC	__real@41c80000
PUBLIC	__real@41f00000
PUBLIC	__real@42480000
PUBLIC	__real@42c00000
PUBLIC	__real@42c80000
PUBLIC	__real@42e60000
PUBLIC	__real@43480000
PUBLIC	__real@437a0000
PUBLIC	__real@437f0000
PUBLIC	__real@43b40000
PUBLIC	__real@43c80000
PUBLIC	__real@43f00000
PUBLIC	__real@44160000
PUBLIC	__real@44200000
PUBLIC	__real@44228000
PUBLIC	__real@44480000
PUBLIC	__real@447a0000
PUBLIC	__real@44834000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__DebugBreak@0:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__HeapSetInformation@16:PROC
EXTRN	__imp__InitializeCriticalSectionEx@12:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetPixel@12:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__GetObjectW@12:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__DialogBoxIndirectParamW@20:PROC
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__SetDlgItemInt@16:PROC
EXTRN	__imp__GetDlgItemInt@16:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__SetCapture@4:PROC
EXTRN	__imp__ReleaseCapture@0:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__GetDCEx@12:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__ValidateRect@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__IntersectRect@12:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__GetDpiForWindow@4:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	_labs:PROC
EXTRN	__imp__CoUninitialize@0:PROC
EXTRN	__imp__CoInitialize@4:PROC
EXTRN	__imp__ChooseColorW@4:PROC
EXTRN	__imp__fgetwc:PROC
EXTRN	__imp__fputwc:PROC
EXTRN	__imp__ungetwc:PROC
EXTRN	__imp____stdio_common_vswprintf:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsnwprintf_s:PROC
EXTRN	_atan:PROC
EXTRN	_cos:PROC
EXTRN	_pow:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	__imp__ceil:PROC
EXTRN	_D2D1CreateFactory@16:PROC
EXTRN	__imp__DWriteCreateFactory@12:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp___get_stream_buffer_pointers:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fgetc:PROC
EXTRN	__imp__fgetpos:PROC
EXTRN	__imp__fputc:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fsetpos:PROC
EXTRN	__imp___fseeki64:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	__imp__ungetc:PROC
EXTRN	__imp___lock_file:PROC
EXTRN	__imp___unlock_file:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	??_Ebad_cast@std@@UAEPAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	__imp_?always_noconv@codecvt_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?in@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPA_W3AAPA_W@Z:PROC
EXTRN	__imp_?out@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PB_W1AAPB_WPAD3AAPAD@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@_WDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_?is@?$ctype@D@std@@QBE_NFD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z:PROC
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPAPA_W0PAH001@Z:PROC
EXTRN	__imp_?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z:PROC
EXTRN	__imp_?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WD@Z:PROC
EXTRN	__imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC		; std::_Fiopen
EXTRN	?_Fiopen@std@@YAPAU_iobuf@@PB_WHH@Z:PROC	; std::_Fiopen
EXTRN	__imp___wassert:PROC
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_UninitUse:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	__ftol2:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_GUID_WICPixelFormat32bppPBGRA:BYTE
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?id@?$codecvt@_WDU_Mbstatet@@@std@@2V0locale@2@A:DWORD
EXTRN	__imp_?id@?$ctype@D@std@@2V0locale@2@A:DWORD
EXTRN	__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:DWORD
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	___ImageBase:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?acrCustClr@?1??GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ@4PAKA DD 010H DUP (?) ; `GetColorFromChooseColorDialog'::`2'::acrCustClr
?rgbCurrent@?1??GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ@4KA DD 01H DUP (?) ; `GetColorFromChooseColorDialog'::`2'::rgbCurrent
?acrCustClr@?1??GetColorFromChooseColorDialog2@@YAKXZ@4PAKA DD 010H DUP (?) ; `GetColorFromChooseColorDialog2'::`2'::acrCustClr
?rgbCurrent@?1??GetColorFromChooseColorDialog2@@YAKXZ@4KA DD 01H DUP (?) ; `GetColorFromChooseColorDialog2'::`2'::rgbCurrent
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 028H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
_BSS	SEGMENT
?prx@@3VCOLORPICK@@A DB 0238H DUP (?)			; prx
_BSS	ENDS
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<wchar_t,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@44834000
CONST	SEGMENT
__real@44834000 DD 044834000r			; 1050
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@44228000
CONST	SEGMENT
__real@44228000 DD 044228000r			; 650
CONST	ENDS
;	COMDAT __real@44200000
CONST	SEGMENT
__real@44200000 DD 044200000r			; 640
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@43f00000
CONST	SEGMENT
__real@43f00000 DD 043f00000r			; 480
CONST	ENDS
;	COMDAT __real@43c80000
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@42e60000
CONST	SEGMENT
__real@42e60000 DD 042e60000r			; 115
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42c00000
CONST	SEGMENT
__real@42c00000 DD 042c00000r			; 96
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40c90e56
CONST	SEGMENT
__real@40c90e56 DD 040c90e56r			; 6.283
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f91df46a2529d39
CONST	SEGMENT
__real@3f91df46a2529d39 DQ 03f91df46a2529d39r	; 0.0174533
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d75c28f
CONST	SEGMENT
__real@3d75c28f DD 03d75c28fr			; 0.06
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00800000
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-38
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD FLAT:??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD FLAT:??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 00H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@ DD 00H ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@ DD 00H ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	070H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$rs	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	060H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KK@NJCNFCOG@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1KK@NJCNFCOG@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@MAKIMAC@D?3?2Microsoft?5Visual?5Studio?22019@
CONST	SEGMENT
??_C@_0FF@MAKIMAC@D?3?2Microsoft?5Visual?5Studio?22019@ DB 'D:\Microsoft '
	DB	'Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\includ'
	DB	'e\xutility', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT __GUID_06152247_6f50_465a_9245_118bfd3b6007
CONST	SEGMENT
__GUID_06152247_6f50_465a_9245_118bfd3b6007 DD 06152247H
	DW	06f50H
	DW	0465aH
	DB	092H
	DB	045H
	DB	011H
	DB	08bH
	DB	0fdH
	DB	03bH
	DB	060H
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@ DB '"'
	DB	00H, 'Y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e'
	DB	00H, ' ', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 't', 00H, 's', 00H, 'e'
	DB	00H, 'l', 00H, 'f', 00H, '.', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	'e', 00H, ' ', 00H, '"', 00H, ' ', 00H, '"', 00H, 'N', 00H, '4'
	DB	00H, '8', 00H, '4', 00H, '9', 00H, ' ', 00H, '[', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, '.', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'a'
	DB	00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 's', 00H, ']', 00H, '/', 00H, '1', 00H, '.', 00H, '3'
	DB	00H, ':', 00H, ' ', 00H, 'I', 00H, 'f', 00H, ' ', 00H, 'a', 00H
	DB	' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'b'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 's', 00H, ' ', 00H, 't', 00H
	DB	'o', 00H, ' ', 00H, 'a', 00H, 'n', 00H, ' ', 00H, 'r', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, ' ', 00H, '"', 00H, ' ', 00H, '"', 00H, 'p', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, ',', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'y', 00H, ' '
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 't', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'p', 00H, 'a', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'a', 00H, ' ', 00H
	DB	'u', 00H, 'n', 00H, 'i', 00H, 'q', 00H, 'u', 00H, 'e', 00H, ' '
	DB	00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, '"', 00H, ' ', 00H, '"'
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@
CONST	SEGMENT
??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@
CONST	SEGMENT
??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@ DB 'You cannot co'
	DB	'ncatenate the same moved string to itself. See N4849 [res.on.'
	DB	'arguments]/1.3: If a function argument binds to an rvalue ref'
	DB	'erence parameter, the implementation may assume that this par'
	DB	'ameter is a unique reference to this argument', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ DB '"'
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@
CONST	SEGMENT
??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@ DB 'front() '
	DB	'called on empty string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KI@BCEOLJOE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1KI@BCEOLJOE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@LCNAMHNP@D?3?2Microsoft?5Visual?5Studio?22019@
CONST	SEGMENT
??_C@_0FE@LCNAMHNP@D?3?2Microsoft?5Visual?5Studio?22019@ DB 'D:\Microsoft'
	DB	' Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\inclu'
	DB	'de\xstring', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@BJDPJDEC@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1MC@BJDPJDEC@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H
	DB	'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
CONST	SEGMENT
??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@ DB 'p', 00H, '!', 00H, '=', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
CONST	SEGMENT
??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@ DB 'p', 00H, '=', 00H, '=', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MK@FKANIDJF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1MK@FKANIDJF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'2', 00H, 'D', 00H, '1', 00H, '_', 00H, 'G', 00H, 'R', 00H, 'A'
	DB	00H, 'D', 00H, 'I', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H
	DB	'S', 00H, 'T', 00H, 'O', 00H, 'P', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'D', 00H, '2', 00H, 'D', 00H, '1', 00H, '_', 00H, 'G', 00H
	DB	'R', 00H, 'A', 00H, 'D', 00H, 'I', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'O', 00H, 'P', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1KG@CEOCEOEM@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1KG@CEOCEOEM@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@COPLKMDI@D?3?2Microsoft?5Visual?5Studio?22019@
CONST	SEGMENT
??_C@_0FD@COPLKMDI@D?3?2Microsoft?5Visual?5Studio?22019@ DB 'D:\Microsoft'
	DB	' Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\inclu'
	DB	'de\vector', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@MADGDFGA@?$AAC?$AAo?$AAl?$AAl?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@
CONST	SEGMENT
??_C@_1CI@MADGDFGA@?$AAC?$AAo?$AAl?$AAl?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@ DB 'C'
	DB	00H, 'o', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@HJJBOMF@?$AAD?$AAe?$AAm?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAl@
CONST	SEGMENT
??_C@_1GI@HJJBOMF@?$AAD?$AAe?$AAm?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAl@ DB 'D'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'n', 00H
	DB	0edH, 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'a', 00H, 'b', 00H, 's'
	DB	00H, 'o', 00H, 'l', 00H, 'u', 00H, 't', 00H, 'n', 00H, 0edH, 00H
	DB	' ', 00H, 'v', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'k', 00H, 'o'
	DB	00H, 's', 00H, 't', 00H, 'i', 00H, ' ', 00H, 0dH, 01H, 't', 00H
	DB	'v', 00H, 'e', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KBOCNCBA@?$AAD?$AA2?$AAD?$AAD?$AAe?$AAm?$AAo?$AAA?$AAp?$AAp@
CONST	SEGMENT
??_C@_1BG@KBOCNCBA@?$AAD?$AA2?$AAD?$AAD?$AAe?$AAm?$AAo?$AAA?$AAp?$AAp@ DB 'D'
	DB	00H, '2', 00H, 'D', 00H, 'D', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'A', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PBMEKDNI@?$AAC?$AAL?$AAA?$AAS?$AAS@
CONST	SEGMENT
??_C@_1M@PBMEKDNI@?$AAC?$AAL?$AAA?$AAS?$AAS@ DB 'C', 00H, 'L', 00H, 'A', 00H
	DB	'S', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OAIDDNB@?$AB?$AA?$PP?$PP?$AA?$AA?$AA?$AA?$AA?$AA?$AA?$AAH?$AI?$AI?$IA?$AA?$AA?$AA?$AA?$AA?$AA?$CB?$AC?z?$AA?$AA?$AA?$AA?$AA?$AA@
CONST	SEGMENT
??_C@_0EB@OAIDDNB@?$AB?$AA?$PP?$PP?$AA?$AA?$AA?$AA?$AA?$AA?$AA?$AAH?$AI?$AI?$IA?$AA?$AA?$AA?$AA?$AA?$AA?$CB?$AC?z?$AA?$AA?$AA?$AA?$AA?$AA@ DB 01H
	DB	00H, 0ffH, 0ffH, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 'H', 08H
	DB	08H, 080H, 00H, 00H, 00H, 00H, 00H, 00H, '!', 02H, 0faH, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 08H, 00H, 090H, 01H, 00H, 01H, 'M', 00H
	DB	'S', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'e', 00H, 'l', 00H, 'l'
	DB	00H, ' ', 00H, 'D', 00H, 'l', 00H, 'g', 00H, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
CONST	SEGMENT
__GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48 DD 0b859ee5aH
	DW	0d838H
	DW	04b5bH
	DB	0a2H
	DB	0e8H
	DB	01aH
	DB	0dcH
	DB	07dH
	DB	093H
	DB	0dbH
	DB	048H
CONST	ENDS
;	COMDAT ??_C@_19LKCICPAE@?$AA?$CF?$AAi?$AA?$CF?$AA?$CF@
CONST	SEGMENT
??_C@_19LKCICPAE@?$AA?$CF?$AAi?$AA?$CF?$AA?$CF@ DB '%', 00H, 'i', 00H, '%'
	DB	00H, '%', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DOOPGBLO@?$AAA?$AAL?$AAP?$AAH?$AAA@
CONST	SEGMENT
??_C@_1M@DOOPGBLO@?$AAA?$AAL?$AAP?$AAH?$AAA@ DB 'A', 00H, 'L', 00H, 'P', 00H
	DB	'H', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FHNADEIL@?$AAL?$AAI?$AAG?$AAH?$AAT@
CONST	SEGMENT
??_C@_1M@FHNADEIL@?$AAL?$AAI?$AAG?$AAH?$AAT@ DB 'L', 00H, 'I', 00H, 'G', 00H
	DB	'H', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17MBBPJFIP@?$AAS?$AAA?$AAT@
CONST	SEGMENT
??_C@_17MBBPJFIP@?$AAS?$AAA?$AAT@ DB 'S', 00H, 'A', 00H, 'T', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17JACMMIIF@?$AAH?$AAU?$AAE@
CONST	SEGMENT
??_C@_17JACMMIIF@?$AAH?$AAU?$AAE@ DB 'H', 00H, 'U', 00H, 'E', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19IIBKGPN@?$AAB?$AAL?$AAU?$AAE@
CONST	SEGMENT
??_C@_19IIBKGPN@?$AAB?$AAL?$AAU?$AAE@ DB 'B', 00H, 'L', 00H, 'U', 00H, 'E'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DIBDEJMC@?$AAG?$AAR?$AAE?$AAE?$AAN@
CONST	SEGMENT
??_C@_1M@DIBDEJMC@?$AAG?$AAR?$AAE?$AAE?$AAN@ DB 'G', 00H, 'R', 00H, 'E', 00H
	DB	'E', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
CONST	SEGMENT
??_C@_15FPHCHCFA@?$AA?$CF?$AAi@ DB '%', 00H, 'i', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17MGDNIAJI@?$AAR?$AAE?$AAD@
CONST	SEGMENT
??_C@_17MGDNIAJI@?$AAR?$AAE?$AAD@ DB 'R', 00H, 'E', 00H, 'D', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@BBGMCBMK@?$AAC?$AAA?$AAN?$AAC?$AAE?$AAL@
CONST	SEGMENT
??_C@_1O@BBGMCBMK@?$AAC?$AAA?$AAN?$AAC?$AAE?$AAL@ DB 'C', 00H, 'A', 00H, 'N'
	DB	00H, 'C', 00H, 'E', 00H, 'L', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_15PMCGDJNJ@?$AAO?$AAK@
CONST	SEGMENT
??_C@_15PMCGDJNJ@?$AAO?$AAK@ DB 'O', 00H, 'K', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17KOJOHOEP@?$AAR?$AAG?$AAB@
CONST	SEGMENT
??_C@_17KOJOHOEP@?$AAR?$AAG?$AAB@ DB 'R', 00H, 'G', 00H, 'B', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17DLHNGEBC@?$AAH?$AAS?$AAL@
CONST	SEGMENT
??_C@_17DLHNGEBC@?$AAH?$AAS?$AAL@ DB 'H', 00H, 'S', 00H, 'L', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13PNBDBPLL@?$AAA@
CONST	SEGMENT
??_C@_13PNBDBPLL@?$AAA@ DB 'A', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13LPLPOHMK@?$AAR@
CONST	SEGMENT
??_C@_13LPLPOHMK@?$AAR@ DB 'R', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13IABLFADB@?$AAH@
CONST	SEGMENT
??_C@_13IABLFADB@?$AAH@ DB 'H', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13PHJMHGG@?$AAL@
CONST	SEGMENT
??_C@_13PHJMHGG@?$AAL@ DB 'L', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13NIHIEAGH@?$AAG@
CONST	SEGMENT
??_C@_13NIHIEAGH@?$AAG@ DB 'G', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_19LELMJPKF@?$AAe?$AAd?$AAi?$AAt@
CONST	SEGMENT
??_C@_19LELMJPKF@?$AAe?$AAd?$AAi?$AAt@ DB 'e', 00H, 'd', 00H, 'i', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA DD 020ccH ; `ATL::AtlWinModuleInit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@LAAFIOOO@D?3?2Microsoft?5Visual?5Studio?22019@
CONST	SEGMENT
??_C@_0FN@LAAFIOOO@D?3?2Microsoft?5Visual?5Studio?22019@ DB 'D:\Microsoft'
	DB	' Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmf'
	DB	'c\include\atlbase.h', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@HHCFJJEI@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1LK@HHCFJJEI@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H
	DB	'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H
	DB	'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'c', 00H, 'l', 00H, 'i'
	DB	00H, '.', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1LM@KAEPDMAH@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1LM@KAEPDMAH@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H
	DB	'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI@
CONST	SEGMENT
??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc@
CONST	SEGMENT
??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt@
CONST	SEGMENT
??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl@
CONST	SEGMENT
??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp@
CONST	SEGMENT
??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@
CONST	SEGMENT
??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl@
CONST	SEGMENT
??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'i'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe@
CONST	SEGMENT
??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe@
CONST	SEGMENT
??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi@
CONST	SEGMENT
??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt@
CONST	SEGMENT
??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi@
CONST	SEGMENT
??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'v'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn@
CONST	SEGMENT
??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg@
CONST	SEGMENT
??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@
CONST	SEGMENT
??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi@
CONST	SEGMENT
??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn@
CONST	SEGMENT
??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI@
CONST	SEGMENT
??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM@
CONST	SEGMENT
??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl@
CONST	SEGMENT
??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LM@NDOEFOIE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1LM@NDOEFOIE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H
	DB	'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@MIJPBHCG@?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5@
CONST	SEGMENT
??_C@_1JG@MIJPBHCG@?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5@ DB 'D'
	DB	00H, 'o', 00H, ' ', 00H, 'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H
	DB	'w', 00H, 'a', 00H, 'n', 00H, 't', 00H, ' ', 00H, 't', 00H, 'o'
	DB	00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, ' ', 00H, 't', 00H
	DB	'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'l'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'a', 00H, 's', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, '?', 00H, ' ', 00H, '(', 00H, 'N', 00H, 'o', 00H, '-', 00H
	DB	'>', 00H, 'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'l', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_19GFDACHI@?$AAI?$AAn?$AAf?$AAo@
CONST	SEGMENT
??_C@_19GFDACHI@?$AAI?$AAn?$AAf?$AAo@ DB 'I', 00H, 'n', 00H, 'f', 00H, 'o'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@CLFOCEGC@?$AA?$DM?$AA?1?$AAh?$AAt?$AAm?$AAl?$AA?$DO@
CONST	SEGMENT
??_C@_1BA@CLFOCEGC@?$AA?$DM?$AA?1?$AAh?$AAt?$AAm?$AAl?$AA?$DO@ DB '<', 00H
	DB	'/', 00H, 'h', 00H, 't', 00H, 'm', 00H, 'l', 00H, '>', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@FCHDDOBP@?$AA?$DM?$AA?1?$AAb?$AAo?$AAd?$AAy?$AA?$DO@
CONST	SEGMENT
??_C@_1BA@FCHDDOBP@?$AA?$DM?$AA?1?$AAb?$AAo?$AAd?$AAy?$AA?$DO@ DB '<', 00H
	DB	'/', 00H, 'b', 00H, 'o', 00H, 'd', 00H, 'y', 00H, '>', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@ICGNNPIM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC?$AA1?$AA0?$AA0@
CONST	SEGMENT
??_C@_1EI@ICGNNPIM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC?$AA1?$AA0?$AA0@ DB '<'
	DB	00H, 's', 00H, 'v', 00H, 'g', 00H, ' ', 00H, 'w', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, '=', 00H, '"', 00H, '1', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '"', 00H, ' ', 00H, 'h', 00H
	DB	'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, '=', 00H, '"'
	DB	00H, '1', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '"', 00H
	DB	'>', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@CDJKIDBB@?$AA?$DM?$AAb?$AAo?$AAd?$AAy?$AA?$DO@
CONST	SEGMENT
??_C@_1O@CDJKIDBB@?$AA?$DM?$AAb?$AAo?$AAd?$AAy?$AA?$DO@ DB '<', 00H, 'b', 00H
	DB	'o', 00H, 'd', 00H, 'y', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@FIMOFJJG@?$AA?$DM?$AA?1?$AAh?$AAe?$AAa?$AAd?$AA?$DO@
CONST	SEGMENT
??_C@_1BA@FIMOFJJG@?$AA?$DM?$AA?1?$AAh?$AAe?$AAa?$AAd?$AA?$DO@ DB '<', 00H
	DB	'/', 00H, 'h', 00H, 'e', 00H, 'a', 00H, 'd', 00H, '>', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JCFGIIMH@?$AA?$DM?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?5?$AAF?$AAi?$AAg?$AAu?$AAr?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1EA@JCFGIIMH@?$AA?$DM?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?5?$AAF?$AAi?$AAg?$AAu?$AAr?$AAe?$AA?5@ DB '<'
	DB	00H, 't', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, '>', 00H
	DB	' ', 00H, 'F', 00H, 'i', 00H, 'g', 00H, 'u', 00H, 'r', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'h', 00H, 't', 00H
	DB	'm', 00H, 'l', 00H, ' ', 00H, '<', 00H, '/', 00H, 't', 00H, 'i'
	DB	00H, 't', 00H, 'l', 00H, 'e', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@CJCHOEJI@?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO@
CONST	SEGMENT
??_C@_1O@CJCHOEJI@?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO@ DB '<', 00H, 'h', 00H
	DB	'e', 00H, 'a', 00H, 'd', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OCPIBJEO@?$AA?$DM?$AAh?$AAm?$AAt?$AAl?$AA?$DO@
CONST	SEGMENT
??_C@_1O@OCPIBJEO@?$AA?$DM?$AAh?$AAm?$AAt?$AAl?$AA?$DO@ DB '<', 00H, 'h', 00H
	DB	'm', 00H, 't', 00H, 'l', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA DD 0203H ; `SaveFigurePartToHtmlW'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@
CONST	SEGMENT
??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@ DB 09H
	DB	00H, '<', 00H, 'p', 00H, 'o', 00H, 'l', 00H, 'y', 00H, 'g', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 's', 00H, '=', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13HOIJIPNN@?$AA?5@
CONST	SEGMENT
??_C@_13HOIJIPNN@?$AA?5@ DB ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
CONST	SEGMENT
??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@ DB ')'
	DB	00H, ';', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'k', 00H, 'e', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'd', 00H, 't'
	DB	00H, 'h', 00H, ':', 00H, '1', 00H, ';', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'k', 00H, 'e', 00H, ':', 00H, 'r'
	DB	00H, 'g', 00H, 'b', 00H, '(', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
CONST	SEGMENT
??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@ DB '<', 00H, '/', 00H
	DB	's', 00H, 'v', 00H, 'g', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@
CONST	SEGMENT
??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@ DB 09H
	DB	00H, '<', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, '=', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@HONDCOFM@?$AA?$CC?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$DN?$AA?$CC@
CONST	SEGMENT
??_C@_1BG@HONDCOFM@?$AA?$CC?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$DN?$AA?$CC@ DB '"'
	DB	00H, ' ', 00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, '=', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
CONST	SEGMENT
??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@ DB ')'
	DB	00H, ';', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'k', 00H, 'e', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'd', 00H, 't'
	DB	00H, 'h', 00H, ':', 00H, '3', 00H, ';', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'k', 00H, 'e', 00H, ':', 00H, 'r'
	DB	00H, 'g', 00H, 'b', 00H, '(', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
CONST	SEGMENT
??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@ DB '"'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'=', 00H, '"', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ':'
	DB	00H, 'r', 00H, 'g', 00H, 'b', 00H, '(', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13DEFPDAGF@?$AA?0@
CONST	SEGMENT
??_C@_13DEFPDAGF@?$AA?0@ DB ',', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
CONST	SEGMENT
??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@ DB ')', 00H
	DB	'"', 00H, ' ', 00H, '/', 00H, '>', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BHA@MHEFOIFM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$DN?$AA?$CC?$AA1@
CONST	SEGMENT
??_C@_1BHA@MHEFOIFM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$DN?$AA?$CC?$AA1@ DB '<'
	DB	00H, 's', 00H, 'v', 00H, 'g', 00H, ' ', 00H, 'v', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '=', 00H, '"'
	DB	00H, '1', 00H, '.', 00H, '1', 00H, '"', 00H, ' ', 00H, 'i', 00H
	DB	'd', 00H, '=', 00H, '"', 00H, 'L', 00H, 'a', 00H, 'y', 00H, 'e'
	DB	00H, 'r', 00H, '_', 00H, '2', 00H, '"', 00H, ' ', 00H, 'x', 00H
	DB	'm', 00H, 'l', 00H, 'n', 00H, 's', 00H, '=', 00H, '"', 00H, 'h'
	DB	00H, 't', 00H, 't', 00H, 'p', 00H, ':', 00H, '/', 00H, '/', 00H
	DB	'w', 00H, 'w', 00H, 'w', 00H, '.', 00H, 'w', 00H, '3', 00H, '.'
	DB	00H, 'o', 00H, 'r', 00H, 'g', 00H, '/', 00H, '2', 00H, '0', 00H
	DB	'0', 00H, '0', 00H, '/', 00H, 's', 00H, 'v', 00H, 'g', 00H, '"'
	DB	00H, ' ', 00H, 'x', 00H, 'm', 00H, 'l', 00H, 'n', 00H, 's', 00H
	DB	':', 00H, 'x', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'k', 00H, '='
	DB	00H, '"', 00H, 'h', 00H, 't', 00H, 't', 00H, 'p', 00H, ':', 00H
	DB	'/', 00H, '/', 00H, 'w', 00H, 'w', 00H, 'w', 00H, '.', 00H, 'w'
	DB	00H, '3', 00H, '.', 00H, 'o', 00H, 'r', 00H, 'g', 00H, '/', 00H
	DB	'1', 00H, '9', 00H, '9', 00H, '9', 00H, '/', 00H, 'x', 00H, 'l'
	DB	00H, 'i', 00H, 'n', 00H, 'k', 00H, '"', 00H, ' ', 00H, 'x', 00H
	DB	'=', 00H, '"', 00H, '0', 00H, 'p', 00H, 'x', 00H, '"', 00H, ' '
	DB	00H, 'y', 00H, '=', 00H, '"', 00H, '0', 00H, 'p', 00H, 'x', 00H
	DB	'"', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, '"', 00H, '1', 00H, '0', 00H
	DB	'0', 00H, '0', 00H, '"', 00H, ' ', 00H, 'h', 00H, 'e', 00H, 'i'
	DB	00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'"', 00H, '1', 00H, '0', 00H, '0', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, ' ', 00H, 'x', 00H, 'm', 00H, 'l', 00H, ':', 00H, 's', 00H
	DB	'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, '"', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 'v', 00H, 'e', 00H, '"', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@LPBBAEDP@?$AA?$DM?$AA?$CB?$AAD?$AAO?$AAC?$AAT?$AAY?$AAP?$AAE?$AA?5?$AAs?$AAv?$AAg?$AA?5?$AAP@
CONST	SEGMENT
??_C@_1MG@LPBBAEDP@?$AA?$DM?$AA?$CB?$AAD?$AAO?$AAC?$AAT?$AAY?$AAP?$AAE?$AA?5?$AAs?$AAv?$AAg?$AA?5?$AAP@ DB '<'
	DB	00H, '!', 00H, 'D', 00H, 'O', 00H, 'C', 00H, 'T', 00H, 'Y', 00H
	DB	'P', 00H, 'E', 00H, ' ', 00H, 's', 00H, 'v', 00H, 'g', 00H, ' '
	DB	00H, 'P', 00H, 'U', 00H, 'B', 00H, 'L', 00H, 'I', 00H, 'C', 00H
	DB	' ', 00H, '"', 00H, '-', 00H, '/', 00H, '/', 00H, 'W', 00H, '3'
	DB	00H, 'C', 00H, '/', 00H, '/', 00H, 'D', 00H, 'T', 00H, 'D', 00H
	DB	' ', 00H, 'S', 00H, 'V', 00H, 'G', 00H, ' ', 00H, '1', 00H, '.'
	DB	00H, '1', 00H, '/', 00H, '/', 00H, 'E', 00H, 'N', 00H, '"', 00H
	DB	' ', 00H, '"', 00H, 'h', 00H, 't', 00H, 't', 00H, 'p', 00H, ':'
	DB	00H, '/', 00H, '/', 00H, 'w', 00H, 'w', 00H, 'w', 00H, '.', 00H
	DB	'w', 00H, '3', 00H, '.', 00H, 'o', 00H, 'r', 00H, 'g', 00H, '/'
	DB	00H, 'G', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'h', 00H, 'i', 00H
	DB	'c', 00H, 's', 00H, '/', 00H, 'S', 00H, 'V', 00H, 'G', 00H, '/'
	DB	00H, '1', 00H, '.', 00H, '1', 00H, '/', 00H, 'D', 00H, 'T', 00H
	DB	'D', 00H, '/', 00H, 's', 00H, 'v', 00H, 'g', 00H, '1', 00H, '1'
	DB	00H, '.', 00H, 'd', 00H, 't', 00H, 'd', 00H, '"', 00H, '>', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@OHEDHLJN@?$AA?$DM?$AA?$DP?$AAx?$AAm?$AAl?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1FI@OHEDHLJN@?$AA?$DM?$AA?$DP?$AAx?$AAm?$AAl?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN@ DB '<'
	DB	00H, '?', 00H, 'x', 00H, 'm', 00H, 'l', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, '"', 00H, '1', 00H, '.', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'"', 00H, 'u', 00H, 't', 00H, 'f', 00H, '-', 00H, '8', 00H, '"'
	DB	00H, ' ', 00H, '?', 00H, '>', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA DD 01dfH ; `SaveFigurePartToSvgW'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07FAPLOCAO@?$DM?1html?$DO@
CONST	SEGMENT
??_C@_07FAPLOCAO@?$DM?1html?$DO@ DB '</html>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IBLFEJOK@?$DM?1body?$DO@
CONST	SEGMENT
??_C@_07IBLFEJOK@?$DM?1body?$DO@ DB '</body>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MNEHCCIE@?$DMsvg?5width?$DN?$CC10000?$CC?5height?$DN?$CC1000@
CONST	SEGMENT
??_C@_0CE@MNEHCCIE@?$DMsvg?5width?$DN?$CC10000?$CC?5height?$DN?$CC1000@ DB '<'
	DB	'svg width="10000" height="10000">', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PNKPIJJM@?$DMbody?$DO@
CONST	SEGMENT
??_C@_06PNKPIJJM@?$DMbody?$DO@ DB '<body>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EJLOLCDM@?$DM?1head?$DO@
CONST	SEGMENT
??_C@_07EJLOLCDM@?$DM?1head?$DO@ DB '</head>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NKEDGCOF@?$DMtitle?$DO?5Figure?5to?5html?5?$DM?1title?$DO@
CONST	SEGMENT
??_C@_0CA@NKEDGCOF@?$DMtitle?$DO?5Figure?5to?5html?5?$DM?1title?$DO@ DB '<'
	DB	'title> Figure to html </title>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DFKEHCEK@?$DMhead?$DO@
CONST	SEGMENT
??_C@_06DFKEHCEK@?$DMhead?$DO@ DB '<head>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GMAAMPJO@?$DMhmtl?$DO@
CONST	SEGMENT
??_C@_06GMAAMPJO@?$DMhmtl?$DO@ DB '<hmtl>', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA DD 01b6H ; `SaveFigurePartToHtml'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@
CONST	SEGMENT
??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@ DB 09H, '<polygon point'
	DB	's="', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NDPCLPIP@?$CJ?$DL?5stroke?9width?31?$DL?5stroke?3rgb?$CI@
CONST	SEGMENT
??_C@_0BP@NDPCLPIP@?$CJ?$DL?5stroke?9width?31?$DL?5stroke?3rgb?$CI@ DB ')'
	DB	'; stroke-width:1; stroke:rgb(', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HNBPLMD@?$DM?1svg?$DO@
CONST	SEGMENT
??_C@_06HNBPLMD@?$DM?1svg?$DO@ DB '</svg>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@
CONST	SEGMENT
??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@ DB 09H, '<rect width="', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@
CONST	SEGMENT
??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@ DB '" height="', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
CONST	SEGMENT
??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@ DB ')'
	DB	'; stroke-width:3; stroke:rgb(', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
CONST	SEGMENT
??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@ DB '" style="fill:rg'
	DB	'b(', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
CONST	SEGMENT
??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@ DB ')" />', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LI@FFEFNLND@?$DMsvg?5version?$DN?$CC1?41?$CC?5id?$DN?$CCLayer_2?$CC@
CONST	SEGMENT
??_C@_0LI@FFEFNLND@?$DMsvg?5version?$DN?$CC1?41?$CC?5id?$DN?$CCLayer_2?$CC@ DB '<'
	DB	'svg version="1.1" id="Layer_2" xmlns="http://www.w3.org/2000/'
	DB	'svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0p'
	DB	'x" width = "1000" height = "1000"  xml:space = "preserve" > ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@CJBBGBLP@?$DM?$CBDOCTYPE?5svg?5PUBLIC?5?$CC?9?1?1W3C?1?1D@
CONST	SEGMENT
??_C@_0GD@CJBBGBLP@?$DM?$CBDOCTYPE?5svg?5PUBLIC?5?$CC?9?1?1W3C?1?1D@ DB '<'
	DB	'!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.'
	DB	'org/Graphics/SVG/1.1/DTD/svg11.dtd">', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CBKGBNFK@?$DM?$DPxml?5version?5?$DN?5?$CC1?40?$CC?5encoding?5@
CONST	SEGMENT
??_C@_0CM@CBKGBNFK@?$DM?$DPxml?5version?5?$DN?5?$CC1?40?$CC?5encoding?5@ DB '<'
	DB	'?xml version = "1.0" encoding = "utf-8" ?>', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA DD 0192H ; `SaveFigurePartToSvg'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	070H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@7B@ DD 00H ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@ DD FLAT:??_R4?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	DD	FLAT:?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	DD	FLAT:?xsgetn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z
	DD	FLAT:?xsputn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@PA_W_J@Z
	DD	FLAT:?sync@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	060H
CONST	ENDS
;	COMDAT ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@
CONST	SEGMENT
??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@ DB 'i'
	DB	00H, 'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'R', 00H, 'E', 00H, 'C'
	DB	00H, 'T', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'L', 00H, 'E', 00H
	DB	' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '_'
	DB	00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'S', 00H, 'Q', 00H, 'U', 00H, 'A', 00H, 'R'
	DB	00H, 'E', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H
	DB	'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'R', 00H, 'E', 00H, 'C', 00H
	DB	'T', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'L', 00H, 'E', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'S', 00H, 'Q', 00H, 'U', 00H, 'A', 00H, 'R', 00H
	DB	'E', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H, 'd'
	DB	00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'A'
	DB	00H, 'N', 00H, 'G', 00H, 'L', 00H, 'E', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '_', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'T', 00H, 'R', 00H, 'I', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'L'
	DB	00H, 'E', 00H, '_', 00H, 'R', 00H, 'I', 00H, 'G', 00H, 'H', 00H
	DB	'T', 00H, '_', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'L', 00H, 'E'
	DB	00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H, 'd', 00H
	DB	'_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, 'I', 00H, 'M', 00H, 'A', 00H, 'G', 00H
	DB	'E', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H, 'd'
	DB	00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'R', 00H, 'E', 00H, 'C', 00H, 'T'
	DB	00H, 'A', 00H, 'N', 00H, 'G', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'C', 00H, 'O', 00H, 'P', 00H, 'Y', 00H, 'M', 00H, 'O', 00H, 'V'
	DB	00H, 'E', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'i', 00H
	DB	'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, 'Q', 00H, 'U', 00H
	DB	'A', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'P'
	DB	00H, 'Y', 00H, 'M', 00H, 'O', 00H, 'V', 00H, 'E', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '_', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'A', 00H, 'N', 00H, 'G'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'P', 00H
	DB	'Y', 00H, 'M', 00H, 'O', 00H, 'V', 00H, 'E', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'T', 00H, 'R', 00H, 'I', 00H, 'A', 00H, 'N', 00H, 'G', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'R', 00H, 'I', 00H, 'G', 00H, 'H'
	DB	00H, 'T', 00H, '_', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'L', 00H
	DB	'E', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'P', 00H, 'Y', 00H, 'M'
	DB	00H, 'O', 00H, 'V', 00H, 'E', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'i', 00H, 'd', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'I', 00H
	DB	'M', 00H, 'A', 00H, 'G', 00H, 'E', 00H, '_', 00H, 'C', 00H, 'O'
	DB	00H, 'P', 00H, 'Y', 00H, 'M', 00H, 'O', 00H, 'V', 00H, 'E', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@
CONST	SEGMENT
??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'C', 00H, '+', 00H, '+', 00H, 'P', 00H
	DB	'R', 00H, 'O', 00H, 'G', 00H, 'R', 00H, 'A', 00H, 'M', 00H, 'U'
	DB	00H, 'J', 00H, 'U', 00H, '\', 00H, 'V', 00H, 'i', 00H, 's', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u'
	DB	00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'c', 00H, '+', 00H
	DB	'+', 00H, '\', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'X', 00H, ' ', 00H, 'a', 00H, 'p', 00H, 'p', 00H
	DB	'\', 00H, 'f', 00H, 'i', 00H, 'g', 00H, 'u', 00H, 'r', 00H, 'e'
	DB	00H, '_', 00H, 'd', 00H, '2', 00H, 'd', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA DD 072H ; `ParseFigurePart'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DD FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DD	FLAT:??_Ebad_cast@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KI@PMMCEADF@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1KI@PMMCEADF@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H, '3'
	DB	00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@ELBNMLDG@D?3?2Microsoft?5Visual?5Studio?22019@
CONST	SEGMENT
??_C@_0FE@ELBNMLDG@D?3?2Microsoft?5Visual?5Studio?22019@ DB 'D:\Microsoft'
	DB	' Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\inclu'
	DB	'de\xmemory', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA DD 084H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z$0
__tryblocktable$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z$3
__unwindtable$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0
__tryblocktable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$3
__unwindtable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$0
__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$3
__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z$1
__ehfuncinfo$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z$1
__ehfuncinfo$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$1
__ehfuncinfo$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z$1
__ehfuncinfo$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z$0
__unwindtable$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$1
__ehfuncinfo$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRender@DemoApp@@AAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@DemoApp@@AAEJXZ$0
__ehfuncinfo$?OnRender@DemoApp@@AAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRender@DemoApp@@AAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DemoApp@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z$0
__unwindtable$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z$2
__ehfuncinfo$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlWinModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ$0
__ehfuncinfo$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ$0
__ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z$0
__ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Draw@Trojuhelnik@@QAEXXZ DD 019930522H
	DD	02dH
	DD	FLAT:__unwindtable$?Draw@Trojuhelnik@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Draw@Trojuhelnik@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$17
	DD	011H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$19
	DD	013H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$24
	DD	018H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$28
	DD	01cH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$31
	DD	01fH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$32
	DD	020H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$33
	DD	021H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$34
	DD	022H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$35
	DD	023H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$36
	DD	024H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$37
	DD	025H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$38
	DD	026H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$39
	DD	027H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$40
	DD	028H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$41
	DD	029H
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$43
	DD	02bH
	DD	FLAT:__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$44
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Objekt@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Objekt@@QAE@XZ$0
__ehfuncinfo$??0Objekt@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Objekt@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	07cH
	DD	FLAT:__unwindtable$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$28
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$31
	DD	01fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$32
	DD	020H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$33
	DD	021H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$40
	DD	028H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$43
	DD	02bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$45
	DD	02dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$48
	DD	030H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$49
	DD	031H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$51
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$52
	DD	034H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$53
	DD	035H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$54
	DD	036H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$55
	DD	037H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$56
	DD	038H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$57
	DD	039H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$59
	DD	03bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$60
	DD	03cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$61
	DD	03dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$63
	DD	03fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$64
	DD	040H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$65
	DD	041H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$66
	DD	042H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$67
	DD	043H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$68
	DD	044H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$69
	DD	045H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$70
	DD	046H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$71
	DD	047H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$72
	DD	048H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$73
	DD	049H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$74
	DD	04aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$75
	DD	04bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$76
	DD	04cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$77
	DD	04dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$79
	DD	04fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$80
	DD	050H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$81
	DD	051H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$83
	DD	053H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$85
	DD	055H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$87
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$88
	DD	058H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$89
	DD	059H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$90
	DD	05aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$91
	DD	05bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$92
	DD	05cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$93
	DD	05dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$94
	DD	05eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$95
	DD	05fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$96
	DD	060H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$97
	DD	061H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$98
	DD	062H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$99
	DD	063H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$100
	DD	064H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$101
	DD	065H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$102
	DD	066H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$103
	DD	067H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$104
	DD	068H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$105
	DD	069H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$106
	DD	06aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$107
	DD	06bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$108
	DD	06cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$109
	DD	06dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$110
	DD	06eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$111
	DD	06fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$112
	DD	070H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$113
	DD	071H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$114
	DD	072H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$115
	DD	073H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$116
	DD	074H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$117
	DD	075H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$118
	DD	076H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$119
	DD	077H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$120
	DD	078H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$121
	DD	079H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$122
	DD	07aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$123
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	07cH
	DD	FLAT:__unwindtable$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$28
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$31
	DD	01fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$32
	DD	020H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$33
	DD	021H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$40
	DD	028H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$43
	DD	02bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$45
	DD	02dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$48
	DD	030H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$49
	DD	031H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$51
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$52
	DD	034H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$53
	DD	035H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$54
	DD	036H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$55
	DD	037H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$56
	DD	038H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$57
	DD	039H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$59
	DD	03bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$60
	DD	03cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$61
	DD	03dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$63
	DD	03fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$64
	DD	040H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$65
	DD	041H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$66
	DD	042H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$67
	DD	043H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$68
	DD	044H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$69
	DD	045H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$70
	DD	046H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$71
	DD	047H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$72
	DD	048H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$73
	DD	049H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$74
	DD	04aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$75
	DD	04bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$76
	DD	04cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$77
	DD	04dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$79
	DD	04fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$80
	DD	050H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$81
	DD	051H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$83
	DD	053H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$85
	DD	055H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$87
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$88
	DD	058H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$89
	DD	059H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$90
	DD	05aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$91
	DD	05bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$92
	DD	05cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$93
	DD	05dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$94
	DD	05eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$95
	DD	05fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$96
	DD	060H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$97
	DD	061H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$98
	DD	062H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$99
	DD	063H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$100
	DD	064H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$101
	DD	065H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$102
	DD	066H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$103
	DD	067H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$104
	DD	068H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$105
	DD	069H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$106
	DD	06aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$107
	DD	06bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$108
	DD	06cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$109
	DD	06dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$110
	DD	06eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$111
	DD	06fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$112
	DD	070H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$113
	DD	071H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$114
	DD	072H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$115
	DD	073H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$116
	DD	074H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$117
	DD	075H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$118
	DD	076H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$119
	DD	077H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$120
	DD	078H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$121
	DD	079H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$122
	DD	07aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$123
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	07fH
	DD	FLAT:__unwindtable$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31
	DD	01fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32
	DD	020H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33
	DD	021H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40
	DD	028H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$43
	DD	02bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$45
	DD	02dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$48
	DD	030H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$49
	DD	031H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$51
	DD	033H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$52
	DD	034H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$53
	DD	035H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$54
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$55
	DD	037H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$56
	DD	038H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$57
	DD	039H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$59
	DD	03bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$60
	DD	03cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$61
	DD	03dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$63
	DD	03fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$64
	DD	040H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$65
	DD	041H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$66
	DD	042H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$67
	DD	043H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$68
	DD	044H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$69
	DD	045H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$70
	DD	046H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$71
	DD	047H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$72
	DD	048H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$73
	DD	049H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$74
	DD	04aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$75
	DD	04bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$76
	DD	04cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$77
	DD	04dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$79
	DD	04fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$80
	DD	050H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$81
	DD	051H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$83
	DD	053H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$85
	DD	055H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$87
	DD	057H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$88
	DD	058H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$89
	DD	059H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$90
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$91
	DD	05bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$92
	DD	05cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$93
	DD	05dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$94
	DD	05eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$95
	DD	05fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$96
	DD	060H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$97
	DD	061H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$98
	DD	062H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$99
	DD	063H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$100
	DD	064H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$101
	DD	065H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$102
	DD	066H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$103
	DD	067H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$104
	DD	068H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$105
	DD	069H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$106
	DD	06aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$107
	DD	06bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$108
	DD	06cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$109
	DD	06dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$110
	DD	06eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$111
	DD	06fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$112
	DD	070H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$113
	DD	071H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$114
	DD	072H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$115
	DD	073H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$116
	DD	074H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$117
	DD	075H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$118
	DD	076H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$119
	DD	077H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$120
	DD	078H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$121
	DD	079H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$122
	DD	07aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$123
	DD	07bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$124
	DD	07cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$125
	DD	07dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$126
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	07fH
	DD	FLAT:__unwindtable$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31
	DD	01fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32
	DD	020H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33
	DD	021H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40
	DD	028H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$43
	DD	02bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$45
	DD	02dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$48
	DD	030H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$49
	DD	031H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$51
	DD	033H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$52
	DD	034H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$53
	DD	035H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$54
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$55
	DD	037H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$56
	DD	038H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$57
	DD	039H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$59
	DD	03bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$60
	DD	03cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$61
	DD	03dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$63
	DD	03fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$64
	DD	040H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$65
	DD	041H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$66
	DD	042H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$67
	DD	043H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$68
	DD	044H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$69
	DD	045H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$70
	DD	046H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$71
	DD	047H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$72
	DD	048H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$73
	DD	049H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$74
	DD	04aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$75
	DD	04bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$76
	DD	04cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$77
	DD	04dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$79
	DD	04fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$80
	DD	050H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$81
	DD	051H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$83
	DD	053H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$85
	DD	055H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$87
	DD	057H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$88
	DD	058H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$89
	DD	059H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$90
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$91
	DD	05bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$92
	DD	05cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$93
	DD	05dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$94
	DD	05eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$95
	DD	05fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$96
	DD	060H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$97
	DD	061H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$98
	DD	062H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$99
	DD	063H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$100
	DD	064H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$101
	DD	065H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$102
	DD	066H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$103
	DD	067H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$104
	DD	068H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$105
	DD	069H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$106
	DD	06aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$107
	DD	06bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$108
	DD	06cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$109
	DD	06dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$110
	DD	06eH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$111
	DD	06fH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$112
	DD	070H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$113
	DD	071H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$114
	DD	072H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$115
	DD	073H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$116
	DD	074H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$117
	DD	075H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$118
	DD	076H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$119
	DD	077H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$120
	DD	078H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$121
	DD	079H
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$122
	DD	07aH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$123
	DD	07bH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$124
	DD	07cH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$125
	DD	07dH
	DD	FLAT:__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$126
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z$1
__ehfuncinfo$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2
__ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$3
__ehfuncinfo$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
__ehfuncinfo$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ$0
__ehfuncinfo$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z$2
__ehfuncinfo$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3
__ehfuncinfo$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2
__ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$1
__ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$4
__unwindtable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$1
__ehfuncinfo$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$2
__ehfuncinfo$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	0b7H
	DD	FLAT:__unwindtable$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28
	DD	01cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31
	DD	01eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32
	DD	01fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33
	DD	020H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34
	DD	021H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35
	DD	022H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36
	DD	023H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37
	DD	024H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38
	DD	025H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39
	DD	026H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40
	DD	027H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41
	DD	028H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42
	DD	029H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$43
	DD	02aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$44
	DD	02bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$45
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$48
	DD	02dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$49
	DD	02eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$50
	DD	02fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$51
	DD	030H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$52
	DD	031H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$53
	DD	032H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$54
	DD	033H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$55
	DD	034H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$56
	DD	035H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$57
	DD	036H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$58
	DD	037H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$59
	DD	038H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$60
	DD	039H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$61
	DD	03aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$62
	DD	03bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$63
	DD	03cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$64
	DD	03dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$65
	DD	03eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$66
	DD	03fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$67
	DD	040H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$68
	DD	041H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$69
	DD	042H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$70
	DD	043H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$71
	DD	044H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$72
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$74
	DD	046H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$75
	DD	047H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$76
	DD	048H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$77
	DD	049H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$78
	DD	04aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$79
	DD	04bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$80
	DD	04cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$81
	DD	04dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$82
	DD	04eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$83
	DD	04fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$84
	DD	050H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$85
	DD	051H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$86
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$88
	DD	053H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$89
	DD	054H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$90
	DD	055H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$91
	DD	056H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$92
	DD	057H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$93
	DD	058H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$94
	DD	059H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$95
	DD	05aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$96
	DD	05bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$97
	DD	05cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$98
	DD	05dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$99
	DD	05eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$100
	DD	05fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$101
	DD	060H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$102
	DD	061H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$103
	DD	062H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$104
	DD	063H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$105
	DD	064H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$106
	DD	065H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$107
	DD	066H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$108
	DD	067H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$109
	DD	068H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$110
	DD	069H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$111
	DD	06aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$112
	DD	06bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$113
	DD	06cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$114
	DD	06dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$115
	DD	06eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$116
	DD	06fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$117
	DD	070H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$118
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$120
	DD	072H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$121
	DD	073H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$122
	DD	074H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$123
	DD	075H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$124
	DD	076H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$125
	DD	077H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$126
	DD	078H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$127
	DD	079H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$128
	DD	07aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$129
	DD	07bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$130
	DD	07cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$131
	DD	07dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$132
	DD	07eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$133
	DD	07fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$134
	DD	080H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$135
	DD	081H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$136
	DD	082H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$137
	DD	083H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$138
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$140
	DD	085H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$141
	DD	086H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$142
	DD	087H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$143
	DD	088H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$144
	DD	089H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$145
	DD	08aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$146
	DD	08bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$147
	DD	08cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$148
	DD	08dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$149
	DD	08eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$150
	DD	08fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$151
	DD	090H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$152
	DD	091H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$153
	DD	092H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$154
	DD	093H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$155
	DD	094H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$156
	DD	095H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$157
	DD	096H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$158
	DD	097H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$159
	DD	098H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$160
	DD	099H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$161
	DD	09aH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$162
	DD	09bH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$163
	DD	09cH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$164
	DD	09dH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$165
	DD	09eH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$166
	DD	09fH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$167
	DD	0a0H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$168
	DD	0a1H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$169
	DD	0a2H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$170
	DD	02H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$172
	DD	0a4H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$173
	DD	0a5H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$174
	DD	0a6H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$175
	DD	0a7H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$176
	DD	0a8H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$177
	DD	0a9H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$178
	DD	0aaH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$179
	DD	0abH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$180
	DD	0acH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$181
	DD	0adH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$182
	DD	0aeH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$183
	DD	0afH
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$184
	DD	0b0H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$185
	DD	0b1H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$186
	DD	0b2H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$187
	DD	0b3H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$188
	DD	0b4H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$189
	DD	0b5H
	DD	FLAT:__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$190
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$1
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$1
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z$1
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?prx$initializer$@@3P6AXXZA DD FLAT:??__Eprx@@YAXXZ	; prx$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z
??_E?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UD2D1_GRADIENT_STOP@@$$V@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAXAAV?$allocator@UD2D1_GRADIENT_STOP@@@1@QAUD2D1_GRADIENT_STOP@@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$construct@UD2D1_GRADIENT_STOP@@$$V@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAXAAV?$allocator@UD2D1_GRADIENT_STOP@@@1@QAUD2D1_GRADIENT_STOP@@@Z PROC ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::construct<D2D1_GRADIENT_STOP>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	xor	ecx, ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx+12], ecx
	mov	DWORD PTR [edx+16], ecx
; Line 702
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@UD2D1_GRADIENT_STOP@@$$V@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAXAAV?$allocator@UD2D1_GRADIENT_STOP@@@1@QAUD2D1_GRADIENT_STOP@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::construct<D2D1_GRADIENT_STOP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z PROC ; std::_Unfancy<D2D1_GRADIENT_STOP>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z ENDP ; std::_Unfancy<D2D1_GRADIENT_STOP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABV?$allocator@_W@std@@@std@@YAABV?$allocator@_W@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@_W@std@@@std@@YAABV?$allocator@_W@0@ABV10@@Z PROC ; std::forward<std::allocator<wchar_t> const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@_W@std@@@std@@YAABV?$allocator@_W@0@ABV10@@Z ENDP ; std::forward<std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAPAV_Facet_base@std@@@std@@YAAAPAV_Facet_base@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAV_Facet_base@std@@@std@@YAAAPAV_Facet_base@0@AAPAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAV_Facet_base@std@@@std@@YAAAPAV_Facet_base@0@AAPAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAV?$allocator@_W@std@@@std@@YAAAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$allocator@_W@std@@@std@@YAAAV?$allocator@_W@0@AAV10@@Z PROC ; std::forward<std::allocator<wchar_t> &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV?$allocator@_W@std@@@std@@YAAAV?$allocator@_W@0@AAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Emplace_back<>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1545
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1546
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z ; std::_Unfancy<D2D1_GRADIENT_STOP>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	??$construct@UD2D1_GRADIENT_STOP@@$$V@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAXAAV?$allocator@UD2D1_GRADIENT_STOP@@@1@QAUD2D1_GRADIENT_STOP@@@Z ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::construct<D2D1_GRADIENT_STOP>
	add	esp, 8
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 1548
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z PROC ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Release, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1550
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1551
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1552
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 1553
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::~_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1540
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1541
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Destroy_range@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAXPAUD2D1_GRADIENT_STOP@@QAU1@AAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ; std::_Destroy_range<std::allocator<D2D1_GRADIENT_STOP> >
	add	esp, 12					; 0000000cH
; Line 1542
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::~_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@PAUD2D1_GRADIENT_STOP@@AAV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@PAUD2D1_GRADIENT_STOP@@AAV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1535
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@PAUD2D1_GRADIENT_STOP@@AAV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UPT@COLORPICK@@U12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@$$QAU34@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UPT@COLORPICK@@U12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@$$QAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ; std::forward<COLORPICK::PT>
	add	esp, 4
	mov	ecx, 8
	mov	esi, eax
	mov	edi, DWORD PTR $T1[ebp]
	rep movsd
; Line 702
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@UPT@COLORPICK@@U12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@$$QAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@UPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z PROC ; std::forward<COLORPICK::PT>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@UPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ENDP ; std::forward<COLORPICK::PT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z PROC		; std::forward<wchar_t * const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z ENDP		; std::forward<wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 694
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 696
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 697
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_unwrapped@AAPA_W@std@@YA@AAPA_W@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@AAPA_W@std@@YA@AAPA_W@Z PROC		; std::_Get_unwrapped<wchar_t * &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1300
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 1303
	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@AAPA_W@std@@YA@AAPA_W@Z ENDP		; std::_Get_unwrapped<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@_W@std@@@std@@YAABV?$allocator@_W@0@ABV10@@Z ; std::forward<std::allocator<wchar_t> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_unwrapped@AAPAD@std@@YA@AAPAD@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@AAPAD@std@@YA@AAPAD@Z PROC		; std::_Get_unwrapped<char * &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1300
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 1303
	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@AAPAD@std@@YA@AAPAD@Z ENDP		; std::_Get_unwrapped<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0AAPAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV_Facet_base@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0AAPAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1339
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@AAPAV_Facet_base@std@@@std@@YAAAPAV_Facet_base@0@AAPAV10@@Z ; std::forward<std::_Facet_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$0BE@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0BE@@std@@YAII@Z PROC		; std::_Get_size_of_n<20>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 1
; Line 59
	mov	DWORD PTR __Max_possible$1[ebp], 214748364 ; 0cccccccH
; Line 60
	cmp	DWORD PTR __Count$[ebp], 214748364	; 0cccccccH
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	imul	eax, DWORD PTR __Count$[ebp], 20
$LN3@Get_size_o:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0BE@@std@@YAII@Z ENDP		; std::_Get_size_of_n<20>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_grow_by@V<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@Z
_TEXT	SEGMENT
__Old_ptr$1 = -120					; size = 4
__Raw_new$ = -108					; size = 4
__New_ptr$ = -96					; size = 4
__Al$ = -84						; size = 4
__New_capacity$ = -72					; size = 4
__Old_capacity$ = -60					; size = 4
__New_size$ = -48					; size = 4
__Old_size$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Size_increase$ = 8					; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$_Reallocate_grow_by@V<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_4d79bb85f269e6e8002a4599002d832c>,unsigned int,char const *,unsigned int>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4331
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 4332
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 4333
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, DWORD PTR __Old_size$[ebp]
	cmp	eax, DWORD PTR __Size_increase$[ebp]
	jae	SHORT $LN2@Reallocate
; Line 4334
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4337
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Size_increase$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 4338
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4339
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4340
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4341
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4342
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4343
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4344
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4345
	mov	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Raw_new$[ebp], eax
; Line 4346
	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate
; Line 4347
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Old_ptr$1[ebp], ecx
; Line 4348
	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Raw_new$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_4d79bb85f269e6e8002a4599002d832c>@@QBEXQADQBDII1I@Z ; <lambda_4d79bb85f269e6e8002a4599002d832c>::operator()
; Line 4349
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
; Line 4350
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4351
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4352
	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR __Raw_new$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_4d79bb85f269e6e8002a4599002d832c>@@QBEXQADQBDII1I@Z ; <lambda_4d79bb85f269e6e8002a4599002d832c>::operator()
; Line 4353
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4356
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_grow_by@V<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_4d79bb85f269e6e8002a4599002d832c>,unsigned int,char const *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_4d79bb85f269e6e8002a4599002d832c>@@QBEXQADQBDII1I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Old_ptr$ = 12						; size = 4
__Old_size$ = 16					; size = 4
__Off$ = 20						; size = 4
__Ptr$ = 24						; size = 4
__Count$ = 28						; size = 4
??R<lambda_4d79bb85f269e6e8002a4599002d832c>@@QBEXQADQBDII1I@Z PROC ; <lambda_4d79bb85f269e6e8002a4599002d832c>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3187
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3188
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	add	edx, DWORD PTR __Off$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3189
	mov	eax, DWORD PTR __Old_size$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	add	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	add	edx, DWORD PTR __Off$[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3190
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??R<lambda_4d79bb85f269e6e8002a4599002d832c>@@QBEXQADQBDII1I@Z ENDP ; <lambda_4d79bb85f269e6e8002a4599002d832c>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_grow_by@V<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@Z
_TEXT	SEGMENT
__Old_ptr$1 = -120					; size = 4
__Raw_new$ = -108					; size = 4
__New_ptr$ = -96					; size = 4
__Al$ = -84						; size = 4
__New_capacity$ = -72					; size = 4
__Old_capacity$ = -60					; size = 4
__New_size$ = -48					; size = 4
__Old_size$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Size_increase$ = 8					; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$_Reallocate_grow_by@V<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_09fe38f6114539daa867a3e4d6874f49>,unsigned int,wchar_t const *,unsigned int>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4331
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 4332
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 4333
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	sub	eax, DWORD PTR __Old_size$[ebp]
	cmp	eax, DWORD PTR __Size_increase$[ebp]
	jae	SHORT $LN2@Reallocate
; Line 4334
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4337
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Size_increase$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 4338
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4339
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4340
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4341
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4342
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4343
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4344
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4345
	mov	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	mov	DWORD PTR __Raw_new$[ebp], eax
; Line 4346
	cmp	DWORD PTR __Old_capacity$[ebp], 8
	jb	SHORT $LN3@Reallocate
; Line 4347
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Old_ptr$1[ebp], ecx
; Line 4348
	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Raw_new$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_09fe38f6114539daa867a3e4d6874f49>@@QBEXQA_WQB_WII1I@Z ; <lambda_09fe38f6114539daa867a3e4d6874f49>::operator()
; Line 4349
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 4350
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4351
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4352
	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR __Raw_new$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_09fe38f6114539daa867a3e4d6874f49>@@QBEXQA_WQB_WII1I@Z ; <lambda_09fe38f6114539daa867a3e4d6874f49>::operator()
; Line 4353
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4356
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_grow_by@V<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_09fe38f6114539daa867a3e4d6874f49>,unsigned int,wchar_t const *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_09fe38f6114539daa867a3e4d6874f49>@@QBEXQA_WQB_WII1I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Old_ptr$ = 12						; size = 4
__Old_size$ = 16					; size = 4
__Off$ = 20						; size = 4
__Ptr$ = 24						; size = 4
__Count$ = 28						; size = 4
??R<lambda_09fe38f6114539daa867a3e4d6874f49>@@QBEXQA_WQB_WII1I@Z PROC ; <lambda_09fe38f6114539daa867a3e4d6874f49>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3187
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 3188
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR __New_ptr$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 3189
	mov	eax, DWORD PTR __Old_size$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR __Old_ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR __New_ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 3190
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??R<lambda_09fe38f6114539daa867a3e4d6874f49>@@QBEXQA_WQB_WII1I@Z ENDP ; <lambda_09fe38f6114539daa867a3e4d6874f49>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Lhs$ = 8						; size = 4
__Rhs$ = 12						; size = 4
??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z PROC ; std::_Allocators_equal<std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 2037
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 2039
	mov	al, 1
; Line 2043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z ENDP ; std::_Allocators_equal<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$allocator@D@std@@@std@@YAAAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocators_equal@V?$allocator@_W@std@@@std@@YA_NABV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
__Lhs$ = 8						; size = 4
__Rhs$ = 12						; size = 4
??$_Allocators_equal@V?$allocator@_W@std@@@std@@YA_NABV?$allocator@_W@0@0@Z PROC ; std::_Allocators_equal<std::allocator<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 2037
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 2039
	mov	al, 1
; Line 2043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocators_equal@V?$allocator@_W@std@@@std@@YA_NABV?$allocator@_W@0@0@Z ENDP ; std::_Allocators_equal<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0AAV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0AAV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$allocator@_W@std@@@std@@YAAAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$01@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$01@std@@YAII@Z PROC			; std::_Get_size_of_n<2>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 1
; Line 59
	mov	DWORD PTR __Max_possible$1[ebp], 2147483647 ; 7fffffffH
; Line 60
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
$LN3@Get_size_o:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$01@std@@YAII@Z ENDP			; std::_Get_size_of_n<2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z
_TEXT	SEGMENT
$T2 = -236						; size = 4
__Backout$3 = -32					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<D2D1_GRADIENT_STOP> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1862
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1870
	push	12					; 0000000cH
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@PAUD2D1_GRADIENT_STOP@@AAV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1871
	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
$LN4@Uninitiali:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@Uninitiali
; Line 1872
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXXZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Emplace_back<>
; Line 1873
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
; Line 1875
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::~_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
	mov	eax, DWORD PTR $T2[ebp]
; Line 1877
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z$0:
	lea	ecx, DWORD PTR __Backout$3[ebp]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >::~_Uninitialized_backout_al<std::allocator<D2D1_GRADIENT_STOP> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<D2D1_GRADIENT_STOP> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$exchange@PAV_Facet_base@std@@PAV12@@std@@YAPAV_Facet_base@0@AAPAV10@$$QAPAV10@@Z
_TEXT	SEGMENT
__Old_val$ = -8						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAV_Facet_base@std@@PAV12@@std@@YAPAV_Facet_base@0@AAPAV10@$$QAPAV10@@Z PROC ; std::exchange<std::_Facet_base *,std::_Facet_base *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 598
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx
; Line 599
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __New_val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 600
	mov	eax, DWORD PTR __Old_val$[ebp]
; Line 601
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAV_Facet_base@std@@PAV12@@std@@YAPAV_Facet_base@0@AAPAV10@$$QAPAV10@@Z ENDP ; std::exchange<std::_Facet_base *,std::_Facet_base *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back@UPT@COLORPICK@@@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEX$$QAUPT@COLORPICK@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@UPT@COLORPICK@@@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEX$$QAUPT@COLORPICK@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Emplace_back<COLORPICK::PT>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1545
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1546
	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@UPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ; std::forward<COLORPICK::PT>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z ; std::_Unfancy<COLORPICK::PT>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$construct@UPT@COLORPICK@@U12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT>
	add	esp, 12					; 0000000cH
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 1548
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@UPT@COLORPICK@@@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEX$$QAUPT@COLORPICK@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Emplace_back<COLORPICK::PT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z PROC ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Release, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1550
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1551
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1552
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 1553
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::~_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1540
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1541
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Destroy_range@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAXPAUPT@COLORPICK@@QAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ; std::_Destroy_range<std::allocator<COLORPICK::PT> >
	add	esp, 12					; 0000000cH
; Line 1542
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::~_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@PAUPT@COLORPICK@@AAV?$allocator@UPT@COLORPICK@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@PAUPT@COLORPICK@@AAV?$allocator@UPT@COLORPICK@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1535
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@PAUPT@COLORPICK@@AAV?$allocator@UPT@COLORPICK@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAUPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z PROC ; std::move<COLORPICK::PT &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAUPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ENDP ; std::move<COLORPICK::PT &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_unwrapped@ABQAUPT@COLORPICK@@@std@@YA@ABQAUPT@COLORPICK@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAUPT@COLORPICK@@@std@@YA@ABQAUPT@COLORPICK@@@Z PROC ; std::_Get_unwrapped<COLORPICK::PT * const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1300
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 1303
	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAUPT@COLORPICK@@@std@@YA@ABQAUPT@COLORPICK@@@Z ENDP ; std::_Get_unwrapped<COLORPICK::PT * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Ptr_container$ = -20					; size = 4
__Block_size$ = -8					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 115
	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax
; Line 116
	mov	eax, DWORD PTR __Block_size$[ebp]
	cmp	eax, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m
; Line 117
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:
; Line 120
	mov	eax, DWORD PTR __Block_size$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:
; Line 121
	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_0FE@ELBNMLDG@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	mov	esi, esp
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_1KI@PMMCEADF@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	eax, eax
	jne	SHORT $LN4@Allocate_m
; Line 122
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 123
	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 126
	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH
; Line 128
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABQAD@std@@YAABQADABQAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAD@std@@YAABQADABQAD@Z PROC		; std::forward<char * const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQAD@std@@YAABQADABQAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z PROC ; std::_Construct_in_place<wchar_t *,wchar_t * const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z	; std::addressof<wchar_t *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z	; std::forward<wchar_t * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z ENDP ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\istream
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4F9F0F2C_istream
	call	@__CheckForDebuggerJustMyCode@4
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 107
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Istr$ = 8						; size = 4
__Noskip$ = 12						; size = 1
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\istream
; Line 103
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4F9F0F2C_istream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Istr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	movzx	eax, BYTE PTR __Noskip$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -232						; size = 4
__Rdbuf$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\istream
; Line 88
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4F9F0F2C_istream
	call	@__CheckForDebuggerJustMyCode@4
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 90
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN3@Sentry_bas
; Line 91
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:
; Line 93
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Rdbuf$ = -20						; size = 4
_this$ = -8						; size = 4
__Istr$ = 8						; size = 4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\istream
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4F9F0F2C_istream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 83
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN1@Sentry_bas
; Line 84
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tidy_guard@V?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Tidy_guard@V?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >::~_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Tidy_guard
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Tidy
$LN3@Tidy_guard:
; Line 34
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tidy_guard@V?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >::~_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAABV?$allocator@UD2D1_GRADIENT_STOP@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAABV?$allocator@UD2D1_GRADIENT_STOP@@@0@ABV10@@Z PROC ; std::forward<std::allocator<D2D1_GRADIENT_STOP> const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAABV?$allocator@UD2D1_GRADIENT_STOP@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<D2D1_GRADIENT_STOP> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1003
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1007
	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	add	esp, 12					; 0000000cH
; Line 1012
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z
_TEXT	SEGMENT
tv405 = -332						; size = 8
tv287 = -324						; size = 8
tv290 = -322						; size = 2
tv285 = -322						; size = 2
tv324 = -320						; size = 8
tv289 = -320						; size = 4
tv284 = -320						; size = 4
tv286 = -316						; size = 4
tv135 = -316						; size = 4
tv288 = -314						; size = 2
tv283 = -314						; size = 2
$T2 = -308						; size = 4
$T3 = -294						; size = 2
$T4 = -282						; size = 2
$T5 = -270						; size = 2
$T6 = -258						; size = 2
__Ok$ = -56						; size = 8
__Pad$ = -40						; size = 4
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Data$ = 12						; size = 4
__Size$ = 16						; size = 4
??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z PROC ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 479
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 482
	mov	DWORD PTR __State$[ebp], 0
; Line 485
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv324[ebp], eax
	mov	DWORD PTR tv324[ebp+4], edx
	cmp	DWORD PTR tv324[ebp+4], 0
	jl	SHORT $LN10@Insert_str
	jg	SHORT $LN25@Insert_str
	cmp	DWORD PTR tv324[ebp], 0
	jbe	SHORT $LN10@Insert_str
$LN25@Insert_str:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Size$[ebp]
	ja	SHORT $LN8@Insert_str
$LN10@Insert_str:
; Line 486
	mov	DWORD PTR __Pad$[ebp], 0
; Line 487
	jmp	SHORT $LN9@Insert_str
$LN8@Insert_str:
; Line 488
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Size$[ebp]
	mov	DWORD PTR __Pad$[ebp], eax
$LN9@Insert_str:
; Line 491
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 493
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Insert_str
; Line 494
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 495
	jmp	$LN12@Insert_str
$LN11@Insert_str:
; Line 496
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 497
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@Insert_str
; Line 498
	jmp	SHORT $LN4@Insert_str
$LN2@Insert_str:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN4@Insert_str:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@Insert_str
; Line 499
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv283[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv285[ebp], ax
	mov	cx, WORD PTR tv285[ebp]
	mov	WORD PTR $T6[ebp], cx
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T5[ebp], ax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Insert_str
; Line 500
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 501
	jmp	SHORT $LN14@Insert_str
$LN15@Insert_str:
; Line 503
	jmp	$LN2@Insert_str
$LN14@Insert_str:
; Line 507
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN16@Insert_str
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	mov	esi, esp
	push	ecx
	push	eax
	mov	edx, DWORD PTR __Data$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv405[ebp], eax
	mov	DWORD PTR tv405[ebp+4], ecx
	mov	edx, DWORD PTR tv287[ebp]
	cmp	edx, DWORD PTR tv405[ebp]
	jne	SHORT $LN26@Insert_str
	mov	eax, DWORD PTR tv287[ebp+4]
	cmp	eax, DWORD PTR tv405[ebp+4]
	je	SHORT $LN16@Insert_str
$LN26@Insert_str:
; Line 508
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 509
	jmp	$LN17@Insert_str
$LN16@Insert_str:
; Line 510
	jmp	SHORT $LN7@Insert_str
$LN5@Insert_str:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN7@Insert_str:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN17@Insert_str
; Line 511
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv288[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv290[ebp], ax
	mov	cx, WORD PTR tv290[ebp]
	mov	WORD PTR $T4[ebp], cx
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T3[ebp], ax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@Insert_str
; Line 512
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 513
	jmp	SHORT $LN17@Insert_str
$LN18@Insert_str:
; Line 515
	jmp	$LN5@Insert_str
$LN17@Insert_str:
; Line 518
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN20@Insert_str
__catch$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z$0:
; Line 519
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN24@Insert_str
	ret	0
$LN20@Insert_str:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN12@Insert_str
$LN24@Insert_str:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN12@Insert_str:
; Line 522
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 523
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 524
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@Insert_str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN30@Insert_str:
	DD	1
	DD	$LN29@Insert_str
$LN29@Insert_str:
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN27@Insert_str
$LN27@Insert_str:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z ENDP ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
_TEXT	SEGMENT
tv202 = -308						; size = 4
tv200 = -308						; size = 4
tv203 = -304						; size = 4
tv201 = -304						; size = 4
tv65 = -304						; size = 4
$T2 = -296						; size = 4
$T3 = -284						; size = 4
__Meta$4 = -80						; size = 4
__Metadelim$5 = -68					; size = 4
__Ok$ = -56						; size = 8
__Changed$ = -37					; size = 1
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
__Delim$ = 16						; size = 1
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 29
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 32
	mov	DWORD PTR __State$[ebp], 0
; Line 33
	mov	BYTE PTR __Changed$[ebp], 0
; Line 34
	push	1
	mov	eax, DWORD PTR __Istr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 36
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN5@getline
; Line 37
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 38
	push	0
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Line 39
	lea	eax, DWORD PTR __Delim$[ebp]
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	mov	DWORD PTR __Metadelim$5[ebp], eax
; Line 40
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv65[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv65[ebp]
	call	DWORD PTR __imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv200[ebp], eax
	mov	eax, DWORD PTR tv200[ebp]
	mov	DWORD PTR __Meta$4[ebp], eax
; Line 42
	jmp	SHORT $LN4@getline
$LN2@getline:
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv201[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv201[ebp]
	call	DWORD PTR __imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR tv202[ebp]
	mov	DWORD PTR __Meta$4[ebp], eax
$LN4@getline:
; Line 43
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@getline
; Line 44
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 1
	mov	DWORD PTR __State$[ebp], eax
; Line 45
	jmp	$LN3@getline
	jmp	$LN8@getline
$LN7@getline:
; Line 46
	lea	eax, DWORD PTR __Metadelim$5[ebp]
	push	eax
	lea	ecx, DWORD PTR __Meta$4[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@getline
; Line 47
	mov	BYTE PTR __Changed$[ebp], 1
; Line 48
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv203[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv203[ebp]
	call	DWORD PTR __imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 49
	jmp	SHORT $LN3@getline
	jmp	SHORT $LN8@getline
$LN9@getline:
; Line 50
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, esi
	ja	SHORT $LN11@getline
; Line 51
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
; Line 52
	jmp	SHORT $LN3@getline
; Line 53
	jmp	SHORT $LN8@getline
$LN11@getline:
; Line 54
	lea	eax, DWORD PTR __Meta$4[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR __Str$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 55
	mov	BYTE PTR __Changed$[ebp], 1
$LN8@getline:
; Line 57
	jmp	$LN2@getline
$LN3@getline:
	jmp	SHORT $LN15@getline
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:
; Line 58
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN19@getline
	ret	0
$LN15@getline:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@getline
$LN19@getline:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN5@getline:
; Line 61
	movzx	eax, BYTE PTR __Changed$[ebp]
	test	eax, eax
	jne	SHORT $LN13@getline
; Line 62
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN13@getline:
; Line 65
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Istr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 66
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 67
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@getline
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN25@getline:
	DD	3
	DD	$LN24@getline
$LN24@getline:
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN20@getline
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN21@getline
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN22@getline
$LN22@getline:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN21@getline:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	0
$LN20@getline:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -229						; size = 1
__Zero_uncaught_exceptions$ = -29			; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 113
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[ebp], 0
$LN5@sentry:
	mov	cl, BYTE PTR tv72[ebp]
	mov	BYTE PTR __Zero_uncaught_exceptions$[ebp], cl
; Line 118
	movzx	eax, BYTE PTR __Zero_uncaught_exceptions$[ebp]
	test	eax, eax
	je	SHORT $LN1@sentry
; Line 119
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Tied$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 93
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 95
	jmp	SHORT $LN1@sentry
$LN2@sentry:
; Line 98
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Tied$[ebp], eax
; Line 99
	cmp	DWORD PTR __Tied$[ebp], 0
	je	SHORT $LN4@sentry
	mov	eax, DWORD PTR __Tied$[ebp]
	cmp	eax, DWORD PTR __Ostr$[ebp]
	jne	SHORT $LN3@sentry
$LN4@sentry:
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 101
	jmp	SHORT $LN1@sentry
$LN3@sentry:
; Line 104
	mov	esi, esp
	mov	ecx, DWORD PTR __Tied$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 105
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
$LN1@sentry:
; Line 106
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -232						; size = 4
__Rdbuf$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 80
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN3@Sentry_bas
; Line 81
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:
; Line 83
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Rdbuf$ = -20						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 73
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN1@Sentry_bas
; Line 74
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
_TEXT	SEGMENT
tv405 = -332						; size = 8
tv290 = -324						; size = 4
tv287 = -324						; size = 8
tv285 = -324						; size = 4
tv324 = -320						; size = 8
tv289 = -320						; size = 4
tv284 = -320						; size = 4
tv286 = -316						; size = 4
tv135 = -316						; size = 4
tv288 = -313						; size = 1
tv283 = -313						; size = 1
$T2 = -308						; size = 4
$T3 = -296						; size = 4
$T4 = -284						; size = 4
$T5 = -272						; size = 4
$T6 = -260						; size = 4
__Ok$ = -56						; size = 8
__Pad$ = -40						; size = 4
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Data$ = 12						; size = 4
__Size$ = 16						; size = 4
??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 479
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 482
	mov	DWORD PTR __State$[ebp], 0
; Line 485
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv324[ebp], eax
	mov	DWORD PTR tv324[ebp+4], edx
	cmp	DWORD PTR tv324[ebp+4], 0
	jl	SHORT $LN10@Insert_str
	jg	SHORT $LN25@Insert_str
	cmp	DWORD PTR tv324[ebp], 0
	jbe	SHORT $LN10@Insert_str
$LN25@Insert_str:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Size$[ebp]
	ja	SHORT $LN8@Insert_str
$LN10@Insert_str:
; Line 486
	mov	DWORD PTR __Pad$[ebp], 0
; Line 487
	jmp	SHORT $LN9@Insert_str
$LN8@Insert_str:
; Line 488
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Size$[ebp]
	mov	DWORD PTR __Pad$[ebp], eax
$LN9@Insert_str:
; Line 491
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 493
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Insert_str
; Line 494
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 495
	jmp	$LN12@Insert_str
$LN11@Insert_str:
; Line 496
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 497
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@Insert_str
; Line 498
	jmp	SHORT $LN4@Insert_str
$LN2@Insert_str:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN4@Insert_str:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@Insert_str
; Line 499
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv283[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Insert_str
; Line 500
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 501
	jmp	SHORT $LN14@Insert_str
$LN15@Insert_str:
; Line 503
	jmp	$LN2@Insert_str
$LN14@Insert_str:
; Line 507
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN16@Insert_str
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	mov	esi, esp
	push	ecx
	push	eax
	mov	edx, DWORD PTR __Data$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv405[ebp], eax
	mov	DWORD PTR tv405[ebp+4], ecx
	mov	edx, DWORD PTR tv287[ebp]
	cmp	edx, DWORD PTR tv405[ebp]
	jne	SHORT $LN26@Insert_str
	mov	eax, DWORD PTR tv287[ebp+4]
	cmp	eax, DWORD PTR tv405[ebp+4]
	je	SHORT $LN16@Insert_str
$LN26@Insert_str:
; Line 508
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 509
	jmp	$LN17@Insert_str
$LN16@Insert_str:
; Line 510
	jmp	SHORT $LN7@Insert_str
$LN5@Insert_str:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN7@Insert_str:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN17@Insert_str
; Line 511
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv288[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@Insert_str
; Line 512
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 513
	jmp	SHORT $LN17@Insert_str
$LN18@Insert_str:
; Line 515
	jmp	$LN5@Insert_str
$LN17@Insert_str:
; Line 518
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN20@Insert_str
__catch$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$0:
; Line 519
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN24@Insert_str
	ret	0
$LN20@Insert_str:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN12@Insert_str
$LN24@Insert_str:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN12@Insert_str:
; Line 522
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 523
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 524
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@Insert_str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN30@Insert_str:
	DD	1
	DD	$LN29@Insert_str
$LN29@Insert_str:
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN27@Insert_str
$LN27@Insert_str:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -229						; size = 1
__Zero_uncaught_exceptions$ = -29			; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 113
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[ebp], 0
$LN5@sentry:
	mov	cl, BYTE PTR tv72[ebp]
	mov	BYTE PTR __Zero_uncaught_exceptions$[ebp], cl
; Line 118
	movzx	eax, BYTE PTR __Zero_uncaught_exceptions$[ebp]
	test	eax, eax
	je	SHORT $LN1@sentry
; Line 119
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Tied$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 93
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 95
	jmp	SHORT $LN1@sentry
$LN2@sentry:
; Line 98
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Tied$[ebp], eax
; Line 99
	cmp	DWORD PTR __Tied$[ebp], 0
	je	SHORT $LN4@sentry
	mov	eax, DWORD PTR __Tied$[ebp]
	cmp	eax, DWORD PTR __Ostr$[ebp]
	jne	SHORT $LN3@sentry
$LN4@sentry:
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 101
	jmp	SHORT $LN1@sentry
$LN3@sentry:
; Line 104
	mov	esi, esp
	mov	ecx, DWORD PTR __Tied$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 105
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
$LN1@sentry:
; Line 106
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -232						; size = 4
__Rdbuf$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 80
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN3@Sentry_bas
; Line 81
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:
; Line 83
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Rdbuf$ = -20						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 73
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN1@Sentry_bas
; Line 74
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::move<std::basic_istream<char,std::char_traits<char> > &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::move<std::basic_istream<char,std::char_traits<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T2 = -277						; size = 1
$T3 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S35$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><wchar_t *,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2455
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S35$[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	lea	eax, DWORD PTR _$S35$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2456
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2457
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
; Line 2458
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PA_WPA_W@std@@YAXABQA_W0@Z ; std::_Adl_verify_range<wchar_t *,wchar_t *>
	add	esp, 8
; Line 2459
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Get_unwrapped@AAPA_W@std@@YA@AAPA_W@Z ; std::_Get_unwrapped<wchar_t * &>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Get_unwrapped@AAPA_W@std@@YA@AAPA_W@Z ; std::_Get_unwrapped<wchar_t * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXQA_W0Urandom_access_iterator_tag@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct
; Line 2460
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2461
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@allocator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@allocator:
	DD	2
	DD	$LN8@allocator
$LN8@allocator:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@allocator
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@allocator
$LN6@allocator:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@allocator:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	53					; 00000035H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><wchar_t *,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_UIntegral_to_buff@_WI@std@@YAPA_WPA_WI@Z
_TEXT	SEGMENT
__UVal_trunc$ = -20					; size = 4
__Big_uty$ = -5						; size = 1
__RNext$ = 8						; size = 4
__UVal$ = 12						; size = 4
??$_UIntegral_to_buff@_WI@std@@YAPA_WPA_WI@Z PROC	; std::_UIntegral_to_buff<wchar_t,unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 460
	mov	BYTE PTR __Big_uty$[ebp], 0
; Line 473
	mov	eax, DWORD PTR __UVal$[ebp]
	mov	DWORD PTR __UVal_trunc$[ebp], eax
$LN4@UIntegral_:
; Line 477
	mov	eax, DWORD PTR __RNext$[ebp]
	sub	eax, 2
	mov	DWORD PTR __RNext$[ebp], eax
	mov	eax, DWORD PTR __UVal_trunc$[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	add	edx, 48					; 00000030H
	mov	eax, DWORD PTR __RNext$[ebp]
	mov	WORD PTR [eax], dx
; Line 478
	mov	eax, DWORD PTR __UVal_trunc$[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	mov	DWORD PTR __UVal_trunc$[ebp], eax
; Line 479
	cmp	DWORD PTR __UVal_trunc$[ebp], 0
	jne	SHORT $LN4@UIntegral_
; Line 480
	mov	eax, DWORD PTR __RNext$[ebp]
; Line 481
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_UIntegral_to_buff@_WI@std@@YAPA_WPA_WI@Z ENDP	; std::_UIntegral_to_buff<wchar_t,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$end@_W$0BF@@std@@YAPA_WAAY0BF@_W@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$end@_W$0BF@@std@@YAPA_WAAY0BF@_W@Z PROC		; std::end<wchar_t,21>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 2194
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 2195
	mov	eax, DWORD PTR __Array$[ebp]
	add	eax, 42					; 0000002aH
; Line 2196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$end@_W$0BF@@std@@YAPA_WAAY0BF@_W@Z ENDP		; std::end<wchar_t,21>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
$T2 = -277						; size = 1
$T3 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S34$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2455
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S34$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S34$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2456
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2457
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Line 2458
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PADPAD@std@@YAXABQAD0@Z ; std::_Adl_verify_range<char *,char *>
	add	esp, 8
; Line 2459
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Get_unwrapped@AAPAD@std@@YA@AAPAD@Z	; std::_Get_unwrapped<char * &>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Get_unwrapped@AAPAD@std@@YA@AAPAD@Z	; std::_Get_unwrapped<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXQAD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
; Line 2460
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2461
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@allocator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@allocator:
	DD	2
	DD	$LN8@allocator
$LN8@allocator:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@allocator
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@allocator
$LN6@allocator:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@allocator:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	52					; 00000034H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_UIntegral_to_buff@DI@std@@YAPADPADI@Z
_TEXT	SEGMENT
__UVal_trunc$ = -20					; size = 4
__Big_uty$ = -5						; size = 1
__RNext$ = 8						; size = 4
__UVal$ = 12						; size = 4
??$_UIntegral_to_buff@DI@std@@YAPADPADI@Z PROC		; std::_UIntegral_to_buff<char,unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 460
	mov	BYTE PTR __Big_uty$[ebp], 0
; Line 473
	mov	eax, DWORD PTR __UVal$[ebp]
	mov	DWORD PTR __UVal_trunc$[ebp], eax
$LN4@UIntegral_:
; Line 477
	mov	eax, DWORD PTR __RNext$[ebp]
	sub	eax, 1
	mov	DWORD PTR __RNext$[ebp], eax
	mov	eax, DWORD PTR __UVal_trunc$[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	add	edx, 48					; 00000030H
	mov	eax, DWORD PTR __RNext$[ebp]
	mov	BYTE PTR [eax], dl
; Line 478
	mov	eax, DWORD PTR __UVal_trunc$[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	mov	DWORD PTR __UVal_trunc$[ebp], eax
; Line 479
	cmp	DWORD PTR __UVal_trunc$[ebp], 0
	jne	SHORT $LN4@UIntegral_
; Line 480
	mov	eax, DWORD PTR __RNext$[ebp]
; Line 481
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_UIntegral_to_buff@DI@std@@YAPADPADI@Z ENDP		; std::_UIntegral_to_buff<char,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$end@D$0BF@@std@@YAPADAAY0BF@D@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$end@D$0BF@@std@@YAPADAAY0BF@D@Z PROC			; std::end<char,21>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 2194
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 2195
	mov	eax, DWORD PTR __Array$[ebp]
	add	eax, 21					; 00000015H
; Line 2196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$end@D$0BF@@std@@YAPADAAY0BF@D@Z ENDP			; std::end<char,21>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; Line 2590
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1BCC6A0C_memory
	call	@__CheckForDebuggerJustMyCode@4
	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAEAAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAEAAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1347
	mov	eax, DWORD PTR _this$[ebp]
; Line 1348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAEAAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; Line 2675
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1BCC6A0C_memory
	call	@__CheckForDebuggerJustMyCode@4
; Line 2676
	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAV_Facet_base@std@@PAV12@@std@@YAPAV_Facet_base@0@AAPAV10@$$QAPAV10@@Z ; std::exchange<std::_Facet_base *,std::_Facet_base *>
	add	esp, 8
; Line 2677
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; Line 2645
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1BCC6A0C_memory
	call	@__CheckForDebuggerJustMyCode@4
; Line 2646
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@unique_ptr
; Line 2647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PAV_Facet_base@2@$00@std@@QAEAAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
	mov	ecx, eax
	call	??R?$default_delete@V_Facet_base@std@@@std@@QBEXPAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
$LN3@unique_ptr:
; Line 2649
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QBEXPAV_Facet_base@1@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@V_Facet_base@std@@@std@@QBEXPAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; Line 2535
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1BCC6A0C_memory
	call	@__CheckForDebuggerJustMyCode@4
; Line 2537
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN2@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN2@operator:
; Line 2538
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@V_Facet_base@std@@@std@@QBEXPAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Verify_range@_W@std@@YAXQB_W0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@_W@std@@YAXQB_W0@Z PROC		; std::_Verify_range<wchar_t>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1241
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
$LN4@Verify_ran:
; Line 1243
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_0FF@MAKIMAC@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	mov	esi, esp
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_1KK@NJCNFCOG@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran
; Line 1244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Verify_range@_W@std@@YAXQB_W0@Z ENDP		; std::_Verify_range<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Verify_range@D@std@@YAXQBD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@D@std@@YAXQBD0@Z PROC			; std::_Verify_range<char>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1241
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
$LN4@Verify_ran:
; Line 1243
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_0FF@MAKIMAC@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	mov	esi, esp
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_1KK@NJCNFCOG@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran
; Line 1244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Verify_range@D@std@@YAXQBD0@Z ENDP			; std::_Verify_range<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_grow_by@V<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@Z
_TEXT	SEGMENT
__Old_ptr$1 = -120					; size = 4
__Raw_new$ = -108					; size = 4
__New_ptr$ = -96					; size = 4
__Al$ = -84						; size = 4
__New_capacity$ = -72					; size = 4
__Old_capacity$ = -60					; size = 4
__New_size$ = -48					; size = 4
__Old_size$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Size_increase$ = 8					; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$_Reallocate_grow_by@V<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_2fb699096920f2dc628cb0826b07831d>,wchar_t const *,unsigned int>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4331
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 4332
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 4333
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	sub	eax, DWORD PTR __Old_size$[ebp]
	cmp	eax, DWORD PTR __Size_increase$[ebp]
	jae	SHORT $LN2@Reallocate
; Line 4334
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4337
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Size_increase$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 4338
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4339
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4340
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4341
	mov	eax, DWORD PTR __New_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4342
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4343
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4344
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4345
	mov	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	mov	DWORD PTR __Raw_new$[ebp], eax
; Line 4346
	cmp	DWORD PTR __Old_capacity$[ebp], 8
	jb	SHORT $LN3@Reallocate
; Line 4347
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Old_ptr$1[ebp], ecx
; Line 4348
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_ptr$1[ebp]
	push	eax
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Raw_new$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_2fb699096920f2dc628cb0826b07831d>@@QBEXQA_WQB_WI1I@Z ; <lambda_2fb699096920f2dc628cb0826b07831d>::operator()
; Line 4349
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 4350
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4351
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4352
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Raw_new$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_2fb699096920f2dc628cb0826b07831d>@@QBEXQA_WQB_WI1I@Z ; <lambda_2fb699096920f2dc628cb0826b07831d>::operator()
; Line 4353
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4356
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_grow_by@V<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_2fb699096920f2dc628cb0826b07831d>,wchar_t const *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_2fb699096920f2dc628cb0826b07831d>@@QBEXQA_WQB_WI1I@Z
_TEXT	SEGMENT
$T1 = -210						; size = 2
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Old_ptr$ = 12						; size = 4
__Old_size$ = 16					; size = 4
__Ptr$ = 20						; size = 4
__Count$ = 24						; size = 4
??R<lambda_2fb699096920f2dc628cb0826b07831d>@@QBEXQA_WQB_WI1I@Z PROC ; <lambda_2fb699096920f2dc628cb0826b07831d>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2949
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2950
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 2951
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	mov	eax, DWORD PTR __New_ptr$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 2952
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __New_ptr$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ; std::_WChar_traits<wchar_t>::assign
	add	esp, 8
; Line 2953
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??R<lambda_2fb699096920f2dc628cb0826b07831d>@@QBEXQA_WQB_WI1I@Z ENDP ; <lambda_2fb699096920f2dc628cb0826b07831d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z
_TEXT	SEGMENT
$T2 = -260						; size = 4
__Backout$3 = -56					; size = 12
__ULast$ = -36						; size = 4
__UFirst$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z PROC ; std::_Uninitialized_move<COLORPICK::PT *,std::allocator<COLORPICK::PT> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1685
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1689
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAUPT@COLORPICK@@@std@@YA@ABQAUPT@COLORPICK@@@Z ; std::_Get_unwrapped<COLORPICK::PT * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax
; Line 1690
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAUPT@COLORPICK@@@std@@YA@ABQAUPT@COLORPICK@@@Z ; std::_Get_unwrapped<COLORPICK::PT * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax
; Line 1696
	push	12					; 0000000cH
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@PAUPT@COLORPICK@@AAV?$allocator@UPT@COLORPICK@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1697
	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __UFirst$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR __UFirst$[ebp], eax
$LN4@Uninitiali:
	mov	eax, DWORD PTR __UFirst$[ebp]
	cmp	eax, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@Uninitiali
; Line 1698
	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	call	??$move@AAUPT@COLORPICK@@@std@@YA$$QAUPT@COLORPICK@@AAU12@@Z ; std::move<COLORPICK::PT &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	??$_Emplace_back@UPT@COLORPICK@@@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEX$$QAUPT@COLORPICK@@@Z ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Emplace_back<COLORPICK::PT>
; Line 1699
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
; Line 1701
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$3[ebp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::~_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
	mov	eax, DWORD PTR $T2[ebp]
; Line 1703
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z$0:
	lea	ecx, DWORD PTR __Backout$3[ebp]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >::~_Uninitialized_backout_al<std::allocator<COLORPICK::PT> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ENDP ; std::_Uninitialized_move<COLORPICK::PT *,std::allocator<COLORPICK::PT> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@_W@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@_W@std@@@0@ABV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@_W@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0CA@@std@@YAII@Z PROC		; std::_Get_size_of_n<32>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 1
; Line 59
	mov	DWORD PTR __Max_possible$1[ebp], 134217727 ; 07ffffffH
; Line 60
	cmp	DWORD PTR __Count$[ebp], 134217727	; 07ffffffH
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 5
$LN3@Get_size_o:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0CA@@std@@YAII@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAXPAUD2D1_GRADIENT_STOP@@QAU1@AAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAXPAUD2D1_GRADIENT_STOP@@QAU1@AAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z PROC ; std::_Destroy_range<std::allocator<D2D1_GRADIENT_STOP> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 962
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 970
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAXPAUD2D1_GRADIENT_STOP@@QAU1@AAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<D2D1_GRADIENT_STOP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 1
; Line 59
	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH
; Line 60
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 213
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 216
	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate
; Line 217
	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:
; Line 221
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 222
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 200
	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate
; Line 201
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:
; Line 205
	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate
; Line 206
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:
; Line 209
	xor	eax, eax
$LN1@Allocate:
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$00@std@@YAII@Z
_TEXT	SEGMENT
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$00@std@@YAII@Z PROC			; std::_Get_size_of_n<1>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 0
; Line 65
	mov	eax, DWORD PTR __Count$[ebp]
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$00@std@@YAII@Z ENDP			; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 44
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 908
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 910
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
	add	esp, 4
; Line 912
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAD@std@@YAABQADABQAD@Z	; std::forward<char * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 885
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 889
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z
_TEXT	SEGMENT
__Old_ptr$1 = -120					; size = 4
__Raw_new$ = -108					; size = 4
__New_ptr$ = -96					; size = 4
__Al$ = -84						; size = 4
__New_capacity$ = -72					; size = 4
__Old_capacity$ = -60					; size = 4
__New_size$ = -48					; size = 4
__Old_size$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Size_increase$ = 8					; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4331
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 4332
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 4333
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, DWORD PTR __Old_size$[ebp]
	cmp	eax, DWORD PTR __Size_increase$[ebp]
	jae	SHORT $LN2@Reallocate
; Line 4334
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4337
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Size_increase$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 4338
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4339
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4340
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4341
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4342
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4343
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4344
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4345
	mov	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Raw_new$[ebp], eax
; Line 4346
	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate
; Line 4347
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Old_ptr$1[ebp], ecx
; Line 4348
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_ptr$1[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Raw_new$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()
; Line 4349
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
; Line 4350
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4351
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4352
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Raw_new$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()
; Line 4353
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4356
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Old_ptr$ = 12						; size = 4
__Old_size$ = 16					; size = 4
__Ptr$ = 20						; size = 4
__Count$ = 24						; size = 4
??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z PROC ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2949
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2950
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2951
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	add	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2952
	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	add	ecx, DWORD PTR __New_ptr$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 2953
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ENDP ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z
_TEXT	SEGMENT
__New_ptr$ = -60					; size = 4
__Al$ = -48						; size = 4
__New_capacity$ = -36					; size = 4
__Old_capacity$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4302
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4305
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	DWORD PTR __New_size$[ebp], eax
	jbe	SHORT $LN2@Reallocate
; Line 4306
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4309
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4310
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4311
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4312
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4313
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4314
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4315
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4316
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()
; Line 4317
	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate
; Line 4318
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
; Line 4319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4320
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4321
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4324
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4325
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z PROC ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3054
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3055
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3056
	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 3057
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ENDP ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_grow_by@V<lambda_15711c68e099a15a58f4d77303cb286d>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_15711c68e099a15a58f4d77303cb286d>@@D@Z
_TEXT	SEGMENT
__Old_ptr$1 = -120					; size = 4
__Raw_new$ = -108					; size = 4
__New_ptr$ = -96					; size = 4
__Al$ = -84						; size = 4
__New_capacity$ = -72					; size = 4
__Old_capacity$ = -60					; size = 4
__New_size$ = -48					; size = 4
__Old_size$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Size_increase$ = 8					; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 1
??$_Reallocate_grow_by@V<lambda_15711c68e099a15a58f4d77303cb286d>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_15711c68e099a15a58f4d77303cb286d>@@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_15711c68e099a15a58f4d77303cb286d>,char>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4331
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 4332
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 4333
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, DWORD PTR __Old_size$[ebp]
	cmp	eax, DWORD PTR __Size_increase$[ebp]
	jae	SHORT $LN2@Reallocate
; Line 4334
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4337
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Size_increase$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 4338
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4339
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4340
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4341
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4342
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4343
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4344
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4345
	mov	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Raw_new$[ebp], eax
; Line 4346
	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate
; Line 4347
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Old_ptr$1[ebp], ecx
; Line 4348
	movzx	eax, BYTE PTR _<_Args_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$1[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Raw_new$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_15711c68e099a15a58f4d77303cb286d>@@QBEXQADQBDID@Z ; <lambda_15711c68e099a15a58f4d77303cb286d>::operator()
; Line 4349
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
; Line 4350
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4351
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4352
	movzx	eax, BYTE PTR _<_Args_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR __Raw_new$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_15711c68e099a15a58f4d77303cb286d>@@QBEXQADQBDID@Z ; <lambda_15711c68e099a15a58f4d77303cb286d>::operator()
; Line 4353
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4356
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_grow_by@V<lambda_15711c68e099a15a58f4d77303cb286d>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_15711c68e099a15a58f4d77303cb286d>@@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_15711c68e099a15a58f4d77303cb286d>,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_15711c68e099a15a58f4d77303cb286d>@@QBEXQADQBDID@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Old_ptr$ = 12						; size = 4
__Old_size$ = 16					; size = 4
__Ch$ = 20						; size = 1
??R<lambda_15711c68e099a15a58f4d77303cb286d>@@QBEXQADQBDID@Z PROC ; <lambda_15711c68e099a15a58f4d77303cb286d>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3703
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3704
	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3705
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	add	ecx, DWORD PTR __Old_size$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 3706
	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	mov	edx, DWORD PTR __New_ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	push	eax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 3707
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??R<lambda_15711c68e099a15a58f4d77303cb286d>@@QBEXQADQBDID@Z ENDP ; <lambda_15711c68e099a15a58f4d77303cb286d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z
_TEXT	SEGMENT
__New_ptr$ = -60					; size = 4
__Al$ = -48						; size = 4
__New_capacity$ = -36					; size = 4
__Old_capacity$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4302
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4305
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	DWORD PTR __New_size$[ebp], eax
	jbe	SHORT $LN2@Reallocate
; Line 4306
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4309
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4310
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4311
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4312
	mov	eax, DWORD PTR __New_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4313
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4314
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4315
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4316
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z ; <lambda_03628ca18370b1f44a99b655e704819b>::operator()
; Line 4317
	cmp	DWORD PTR __Old_capacity$[ebp], 8
	jb	SHORT $LN3@Reallocate
; Line 4318
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 4319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4320
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4321
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4324
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4325
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z
_TEXT	SEGMENT
$T1 = -210						; size = 2
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z PROC ; <lambda_03628ca18370b1f44a99b655e704819b>::operator(), COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3054
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3055
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 3056
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __New_ptr$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ; std::_WChar_traits<wchar_t>::assign
	add	esp, 8
; Line 3057
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z ENDP ; <lambda_03628ca18370b1f44a99b655e704819b>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_in_place@PA_W@std@@YAXAAPA_W@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PA_W@std@@YAXAAPA_W@Z PROC		; std::_Destroy_in_place<wchar_t *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PA_W@std@@YAXAAPA_W@Z ENDP		; std::_Destroy_in_place<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@DDU_Mbstatet@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@DDU_Mbstatet@@@0@ABV10@@Z PROC ; std::addressof<std::codecvt<char,char,_Mbstatet> const >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@DDU_Mbstatet@@@0@ABV10@@Z ENDP ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@_WDU_Mbstatet@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@_WDU_Mbstatet@@@0@ABV10@@Z PROC ; std::addressof<std::codecvt<wchar_t,char,_Mbstatet> const >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@_WDU_Mbstatet@@@0@ABV10@@Z ENDP ; std::addressof<std::codecvt<wchar_t,char,_Mbstatet> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAXPAUPT@COLORPICK@@QAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAXPAUPT@COLORPICK@@QAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z PROC ; std::_Destroy_range<std::allocator<COLORPICK::PT> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 962
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 970
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAXPAUPT@COLORPICK@@QAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<COLORPICK::PT> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1339
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1339
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z PROC ; std::move<std::allocator<wchar_t> &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ENDP ; std::move<std::allocator<wchar_t> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1304
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Container_
; Line 1305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
$LN3@Container_:
; Line 1307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1289
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1290
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1291
	push	1
	mov	ecx, DWORD PTR __Al_$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1292
	mov	eax, DWORD PTR __Mycont$[ebp]
	push	eax
	call	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8
; Line 1293
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 1294
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z PROC	; std::pointer_traits<char *>::pointer_to, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 151
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
; Line 152
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ENDP	; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$max@PAD@std@@YAABQADABQAD0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@PAD@std@@YAABQADABQAD0@Z PROC			; std::max<char *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 44
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$max@PAD@std@@YAABQADABQAD0@Z ENDP			; std::max<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 68
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -288						; size = 4
__Psave_guard$3 = -84					; size = 4
__Pfmod$4 = -72						; size = 4
__Pf$5 = -60						; size = 4
__Id$6 = -48						; size = 4
__Psave$7 = -36						; size = 4
__Lock$8 = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,_Mbstatet> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xlocale
; Line 426
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __3F5FE0D2_xlocale
	call	@__CheckForDebuggerJustMyCode@4
; Line 427
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 428
	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
	mov	DWORD PTR __Psave$7[ebp], eax
; Line 430
	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
	call	DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Id$6[ebp], eax
; Line 431
	mov	eax, DWORD PTR __Id$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp]
	call	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 433
	cmp	DWORD PTR __Pf$5[ebp], 0
	jne	$LN2@use_facet
; Line 434
	cmp	DWORD PTR __Psave$7[ebp], 0
	je	SHORT $LN3@use_facet
; Line 435
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
	jmp	$LN2@use_facet
$LN3@use_facet:
; Line 436
	mov	esi, esp
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave$7[ebp]
	push	ecx
	call	DWORD PTR __imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN5@use_facet
; Line 438
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
; Line 442
	jmp	SHORT $LN2@use_facet
$LN5@use_facet:
; Line 443
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pfmod$4[ebp], eax
; Line 444
	push	4
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 449
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	call	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
	add	esp, 4
; Line 452
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 453
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B, eax ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
; Line 454
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 456
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
; Line 457
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:
; Line 460
	mov	eax, DWORD PTR __Pf$5[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
$LN7@use_facet:
; Line 462
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@use_facet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@use_facet:
	DD	3
	DD	$LN14@use_facet
$LN14@use_facet:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@use_facet
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@use_facet
	DD	-84					; ffffffacH
	DD	4
	DD	$LN12@use_facet
$LN12@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	103					; 00000067H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN11@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN10@use_facet:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z$1:
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@std@@YAPAV?$basic_filebuf@_WU?$char_traits@_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@std@@YAPAV?$basic_filebuf@_WU?$char_traits@_W@std@@@0@AAV10@@Z PROC ; std::addressof<std::basic_filebuf<wchar_t,std::char_traits<wchar_t> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@std@@YAPAV?$basic_filebuf@_WU?$char_traits@_W@std@@@0@AAV10@@Z ENDP ; std::addressof<std::basic_filebuf<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -288						; size = 4
__Psave_guard$3 = -84					; size = 4
__Pfmod$4 = -72						; size = 4
__Pf$5 = -60						; size = 4
__Id$6 = -48						; size = 4
__Psave$7 = -36						; size = 4
__Lock$8 = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<wchar_t,char,_Mbstatet> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xlocale
; Line 426
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __3F5FE0D2_xlocale
	call	@__CheckForDebuggerJustMyCode@4
; Line 427
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 428
	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<wchar_t,char,_Mbstatet> >::_Psave
	mov	DWORD PTR __Psave$7[ebp], eax
; Line 430
	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?id@?$codecvt@_WDU_Mbstatet@@@std@@2V0locale@2@A
	call	DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Id$6[ebp], eax
; Line 431
	mov	eax, DWORD PTR __Id$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp]
	call	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 433
	cmp	DWORD PTR __Pf$5[ebp], 0
	jne	$LN2@use_facet
; Line 434
	cmp	DWORD PTR __Psave$7[ebp], 0
	je	SHORT $LN3@use_facet
; Line 435
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
	jmp	$LN2@use_facet
$LN3@use_facet:
; Line 436
	mov	esi, esp
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave$7[ebp]
	push	ecx
	call	DWORD PTR __imp_?_Getcat@?$codecvt@_WDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN5@use_facet
; Line 438
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
; Line 442
	jmp	SHORT $LN2@use_facet
$LN5@use_facet:
; Line 443
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pfmod$4[ebp], eax
; Line 444
	push	4
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 449
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	call	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
	add	esp, 4
; Line 452
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 453
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@2PBVfacet@locale@2@B, eax ; std::_Facetptr<std::codecvt<wchar_t,char,_Mbstatet> >::_Psave
; Line 454
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 456
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
; Line 457
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:
; Line 460
	mov	eax, DWORD PTR __Pf$5[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
$LN7@use_facet:
; Line 462
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@use_facet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@use_facet:
	DD	3
	DD	$LN14@use_facet
$LN14@use_facet:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@use_facet
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@use_facet
	DD	-84					; ffffffacH
	DD	4
	DD	$LN12@use_facet
$LN12@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	103					; 00000067H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN11@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN10@use_facet:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z$1:
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<wchar_t,char,_Mbstatet> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
__New_proxy$ = -20					; size = 4
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1106
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1107
	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	DWORD PTR __New_proxy$[ebp], eax
; Line 1108
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_proxy$[ebp]
	push	edx
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_proxy$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1110
	mov	eax, DWORD PTR __New_proxy$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1><>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1339
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UPT@COLORPICK@@@std@@QAE@XZ ; std::allocator<COLORPICK::PT>::allocator<COLORPICK::PT>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<COLORPICK::PT> >::_Vector_val<std::_Simple_types<COLORPICK::PT> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0UPT@COLORPICK@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UPT@COLORPICK@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0UPT@COLORPICK@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UPT@COLORPICK@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><COLORPICK::PT>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UPT@COLORPICK@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UPT@COLORPICK@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><COLORPICK::PT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z
_TEXT	SEGMENT
__Constructed_first$ = -156				; size = 4
__Constructed_last$ = -144				; size = 4
__Newvec$ = -132					; size = 4
__Newcapacity$ = -120					; size = 4
__Newsize$ = -108					; size = 4
__Oldsize$ = -96					; size = 4
__Whereoff$ = -84					; size = 4
__Mylast$ = -72						; size = 4
__Myfirst$ = -60					; size = 4
__My_data$ = -48					; size = 4
__Al$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_reallocate<COLORPICK::PT const &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 725
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 727
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 728
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 729
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 730
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 734
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 5
	mov	DWORD PTR __Whereoff$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 5
	mov	DWORD PTR __Oldsize$[ebp], edx
; Line 737
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::max_size
	cmp	DWORD PTR __Oldsize$[ebp], eax
	jne	SHORT $LN2@Emplace_re
; Line 738
	call	?_Xlength@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@CAXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Xlength
$LN2@Emplace_re:
; Line 741
	mov	eax, DWORD PTR __Oldsize$[ebp]
	add	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax
; Line 742
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEII@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Calculate_growth
	mov	DWORD PTR __Newcapacity$[ebp], eax
; Line 744
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@UPT@COLORPICK@@@std@@QAEPAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax
; Line 745
	mov	eax, DWORD PTR __Whereoff$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR __Newvec$[ebp]
	lea	edx, DWORD PTR [ecx+eax+32]
	mov	DWORD PTR __Constructed_last$[ebp], edx
; Line 746
	mov	eax, DWORD PTR __Constructed_last$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], eax
; Line 748
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 749
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ; std::forward<COLORPICK::PT const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Whereoff$[ebp]
	shl	ecx, 5
	add	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	call	??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z ; std::_Unfancy<COLORPICK::PT>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$construct@UPT@COLORPICK@@ABU12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT const &>
	add	esp, 12					; 0000000cH
; Line 750
	mov	eax, DWORD PTR __Whereoff$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], eax
; Line 752
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN4@Emplace_re
; Line 753
	mov	eax, DWORD PTR __Newvec$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Umove_if_noexcept@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept
; Line 754
	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:
; Line 755
	mov	eax, DWORD PTR __Newvec$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Umove@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEPAUPT@COLORPICK@@PAU34@00@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove
; Line 756
	mov	eax, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], eax
; Line 757
	mov	eax, DWORD PTR __Whereoff$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR __Newvec$[ebp]
	lea	edx, DWORD PTR [ecx+eax+32]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Whereptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Umove@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEPAUPT@COLORPICK@@PAU34@00@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove
$LN5@Emplace_re:
	jmp	SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z$0:
; Line 760
	mov	eax, DWORD PTR __Constructed_last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Constructed_first$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy
; Line 761
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::deallocate
; Line 762
	push	0
	push	0
	call	__CxxThrowException@8
; Line 763
	mov	eax, $LN10@Emplace_re
	ret	0
$LN7@Emplace_re:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z$1
$LN10@Emplace_re:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z$1:
; Line 765
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_array@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXQAUPT@COLORPICK@@II@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Change_array
; Line 766
	mov	eax, DWORD PTR __Whereoff$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR __Newvec$[ebp]
$LN6@Emplace_re:
; Line 767
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_reallocate<COLORPICK::PT const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UPT@COLORPICK@@ABU12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@ABU34@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UPT@COLORPICK@@ABU12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@ABU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ; std::forward<COLORPICK::PT const &>
	add	esp, 4
	mov	ecx, 8
	mov	esi, eax
	mov	edi, DWORD PTR $T1[ebp]
	rep movsd
; Line 702
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@UPT@COLORPICK@@ABU12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@ABU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z PROC ; std::_Unfancy<COLORPICK::PT>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z ENDP ; std::_Unfancy<COLORPICK::PT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back_with_unused_capacity@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAE@ABUPT@COLORPICK@@@Z
_TEXT	SEGMENT
__Result$ = -44						; size = 4
__Mylast$ = -32						; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAE@ABUPT@COLORPICK@@@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_back_with_unused_capacity<COLORPICK::PT const &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 682
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 684
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 685
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 687
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ; std::forward<COLORPICK::PT const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Unfancy@UPT@COLORPICK@@@std@@YAPAUPT@COLORPICK@@PAU12@@Z ; std::_Unfancy<COLORPICK::PT>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	call	??$construct@UPT@COLORPICK@@ABU12@@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAXAAV?$allocator@UPT@COLORPICK@@@1@QAUPT@COLORPICK@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::construct<COLORPICK::PT,COLORPICK::PT const &>
	add	esp, 12					; 0000000cH
; Line 688
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Orphan_range
; Line 689
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Result$[ebp], ecx
; Line 690
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 696
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back_with_unused_capacity@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAE@ABUPT@COLORPICK@@@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_back_with_unused_capacity<COLORPICK::PT const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z PROC ; std::forward<COLORPICK::PT const &>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __53AB788E_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1443
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1444
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ENDP ; std::forward<COLORPICK::PT const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$emplace_back@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@ABUPT@COLORPICK@@@Z
_TEXT	SEGMENT
__Result$ = -44						; size = 4
__Mylast$ = -32						; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@ABUPT@COLORPICK@@@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::emplace_back<COLORPICK::PT const &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 702
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 703
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 704
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+12]
	je	SHORT $LN2@emplace_ba
; Line 705
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ; std::forward<COLORPICK::PT const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_back_with_unused_capacity@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAE@ABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_back_with_unused_capacity<COLORPICK::PT const &>
	jmp	SHORT $LN1@emplace_ba
$LN2@emplace_ba:
; Line 708
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@ABUPT@COLORPICK@@@std@@YAABUPT@COLORPICK@@ABU12@@Z ; std::forward<COLORPICK::PT const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_reallocate@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@QAU23@ABU23@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Emplace_reallocate<COLORPICK::PT const &>
	mov	DWORD PTR __Result$[ebp], eax
$LN1@emplace_ba:
; Line 714
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@ABUPT@COLORPICK@@@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::emplace_back<COLORPICK::PT const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Guard$2 = -88						; size = 4
__Proxy$ = -76						; size = 8
__My_data$ = -60					; size = 4
_$S30$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Construct_n_copies_of_ty<std::_Value_init_tag>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 455
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 456
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S30$[ebp]
	call	??$?0UD2D1_GRADIENT_STOP@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D2D1_GRADIENT_STOP>
	lea	eax, DWORD PTR _$S30$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 457
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 458
	mov	eax, DWORD PTR __My_data$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 459
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN2@Construct_
; Line 460
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy_nonzero@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_nonzero
; Line 461
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Guard$2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 462
	mov	eax, DWORD PTR __Val$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEPAUD2D1_GRADIENT_STOP@@PAU3@IU_Value_init_tag@2@@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Ufill
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 463
	mov	DWORD PTR __Guard$2[ebp], 0
; Line 464
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Guard$2[ebp]
	call	??1?$_Tidy_guard@V?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >::~_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >
$LN2@Construct_:
; Line 466
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 467
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Construct_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN11@Construct_:
	DD	3
	DD	$LN10@Construct_
$LN10@Construct_:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN6@Construct_
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN7@Construct_
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN8@Construct_
$LN8@Construct_:
	DB	95					; 0000005fH
	DB	71					; 00000047H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN7@Construct_:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN6@Construct_:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	48					; 00000030H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
__unwindfunclet$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$1:
	lea	ecx, DWORD PTR __Guard$2[ebp]
	jmp	??1?$_Tidy_guard@V?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >::~_Tidy_guard<std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@$$V@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@$$V@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1><std::allocator<D2D1_GRADIENT_STOP> const &>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1344
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAABV?$allocator@UD2D1_GRADIENT_STOP@@@0@ABV10@@Z ; std::forward<std::allocator<D2D1_GRADIENT_STOP> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@$$V@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1><std::allocator<D2D1_GRADIENT_STOP> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1031
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1035
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 1036
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -8						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 598
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx
; Line 599
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __New_val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 600
	mov	eax, DWORD PTR __Old_val$[ebp]
; Line 601
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0UD2D1_GRADIENT_STOP@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0UD2D1_GRADIENT_STOP@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D2D1_GRADIENT_STOP>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UD2D1_GRADIENT_STOP@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D2D1_GRADIENT_STOP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 814
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy_maybe_null@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy_maybe_null@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z PROC ; std::_Unfancy_maybe_null<D2D1_GRADIENT_STOP>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 407
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 408
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy_maybe_null@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z ENDP ; std::_Unfancy_maybe_null<D2D1_GRADIENT_STOP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UIWICBitmapScaler@@@@YAXPAPAUIWICBitmapScaler@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UIWICBitmapScaler@@@@YAXPAPAUIWICBitmapScaler@@@Z PROC ; SafeRelease<IWICBitmapScaler>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UIWICBitmapScaler@@@@YAXPAPAUIWICBitmapScaler@@@Z ENDP ; SafeRelease<IWICBitmapScaler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UIWICFormatConverter@@@@YAXPAPAUIWICFormatConverter@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UIWICFormatConverter@@@@YAXPAPAUIWICFormatConverter@@@Z PROC ; SafeRelease<IWICFormatConverter>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UIWICFormatConverter@@@@YAXPAPAUIWICFormatConverter@@@Z ENDP ; SafeRelease<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UIWICStream@@@@YAXPAPAUIWICStream@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UIWICStream@@@@YAXPAPAUIWICStream@@@Z PROC ; SafeRelease<IWICStream>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UIWICStream@@@@YAXPAPAUIWICStream@@@Z ENDP ; SafeRelease<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UIWICBitmapFrameDecode@@@@YAXPAPAUIWICBitmapFrameDecode@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UIWICBitmapFrameDecode@@@@YAXPAPAUIWICBitmapFrameDecode@@@Z PROC ; SafeRelease<IWICBitmapFrameDecode>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UIWICBitmapFrameDecode@@@@YAXPAPAUIWICBitmapFrameDecode@@@Z ENDP ; SafeRelease<IWICBitmapFrameDecode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UIWICBitmapDecoder@@@@YAXPAPAUIWICBitmapDecoder@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UIWICBitmapDecoder@@@@YAXPAPAUIWICBitmapDecoder@@@Z PROC ; SafeRelease<IWICBitmapDecoder>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UIWICBitmapDecoder@@@@YAXPAPAUIWICBitmapDecoder@@@Z ENDP ; SafeRelease<IWICBitmapDecoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z PROC ; SafeRelease<ID2D1SolidColorBrush>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z ENDP ; SafeRelease<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UID2D1HwndRenderTarget@@@@YAXPAPAUID2D1HwndRenderTarget@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UID2D1HwndRenderTarget@@@@YAXPAPAUID2D1HwndRenderTarget@@@Z PROC ; SafeRelease<ID2D1HwndRenderTarget>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UID2D1HwndRenderTarget@@@@YAXPAPAUID2D1HwndRenderTarget@@@Z ENDP ; SafeRelease<ID2D1HwndRenderTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$SafeRelease@UID2D1Factory@@@@YAXPAPAUID2D1Factory@@@Z
_TEXT	SEGMENT
_ppInterfaceToRelease$ = 8				; size = 4
??$SafeRelease@UID2D1Factory@@@@YAXPAPAUID2D1Factory@@@Z PROC ; SafeRelease<ID2D1Factory>, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SafeReleas
; Line 44
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _ppInterfaceToRelease$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@SafeReleas:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$SafeRelease@UID2D1Factory@@@@YAXPAPAUID2D1Factory@@@Z ENDP ; SafeRelease<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@DemoApp@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@DemoApp@@QAEXI@Z PROC			; DemoApp::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@DemoApp@@QAEXI@Z ENDP			; DemoApp::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WndProc@DemoApp@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv73 = -380						; size = 4
$T1 = -372						; size = 16
$T2 = -348						; size = 16
_col$3 = -132						; size = 16
_c1$4 = -108						; size = 16
_height$5 = -84						; size = 4
_width$6 = -72						; size = 4
_wasHandled$7 = -57					; size = 1
_pDemoApp$8 = -48					; size = 4
_pDemoApp$9 = -36					; size = 4
_pcs$10 = -24						; size = 4
_result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WndProc@DemoApp@@CGJPAUHWND__@@IIJ@Z PROC		; DemoApp::WndProc, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 428
	mov	DWORD PTR _result$[ebp], 0
; Line 430
	cmp	DWORD PTR _message$[ebp], 1
	jne	SHORT $LN4@WndProc
; Line 432
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _pcs$10[ebp], eax
; Line 433
	mov	eax, DWORD PTR _pcs$10[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDemoApp$9[ebp], ecx
; Line 435
	mov	esi, esp
	mov	eax, DWORD PTR _pDemoApp$9[ebp]
	push	eax
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 441
	mov	DWORD PTR _result$[ebp], 1
; Line 442
	jmp	$LN44@WndProc
$LN4@WndProc:
; Line 445
	mov	esi, esp
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDemoApp$8[ebp], eax
; Line 451
	mov	BYTE PTR _wasHandled$7[ebp], 0
; Line 453
	cmp	DWORD PTR _pDemoApp$8[ebp], 0
	je	$LN2@WndProc
; Line 455
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 254		; 000000feH
	ja	$LN2@WndProc
	mov	edx, DWORD PTR tv73[ebp]
	movzx	eax, BYTE PTR $LN46@WndProc[edx]
	jmp	DWORD PTR $LN47@WndProc[eax*4]
$LN7@WndProc:
; Line 459
	mov	eax, DWORD PTR _lParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _width$6[ebp], ecx
; Line 460
	mov	eax, DWORD PTR _lParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _height$5[ebp], ecx
; Line 461
	mov	eax, DWORD PTR _height$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDemoApp$8[ebp]
	call	?OnResize@DemoApp@@AAEXII@Z		; DemoApp::OnResize
; Line 463
	mov	DWORD PTR _result$[ebp], 0
; Line 464
	mov	BYTE PTR _wasHandled$7[ebp], 1
; Line 465
	jmp	$LN2@WndProc
; Line 469
	jmp	$LN2@WndProc
$LN9@WndProc:
; Line 472
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 474
	mov	DWORD PTR _result$[ebp], 0
; Line 475
	mov	BYTE PTR _wasHandled$7[ebp], 1
; Line 476
	jmp	$LN2@WndProc
$LN10@WndProc:
; Line 482
	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN11@WndProc
	mov	esi, esp
	push	40					; 00000028H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN11@WndProc
; Line 484
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm0
; Line 485
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm0
; Line 486
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm0
; Line 487
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm0
; Line 488
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 489
	jmp	$LN39@WndProc
$LN11@WndProc:
; Line 490
	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN13@WndProc
	mov	esi, esp
	push	38					; 00000026H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN13@WndProc
; Line 492
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm0
; Line 493
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm0
; Line 494
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm1
; Line 495
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm1
; Line 496
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 497
	jmp	$LN39@WndProc
$LN13@WndProc:
; Line 498
	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN15@WndProc
	mov	esi, esp
	push	40					; 00000028H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN15@WndProc
; Line 500
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm1
; Line 501
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm1
; Line 502
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm0
; Line 503
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm0
; Line 504
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 505
	jmp	$LN39@WndProc
$LN15@WndProc:
; Line 506
	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN17@WndProc
	mov	esi, esp
	push	38					; 00000026H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN17@WndProc
; Line 508
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm1
; Line 509
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm1
; Line 510
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm1
; Line 511
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm1
; Line 512
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@WndProc
$LN17@WndProc:
; Line 513
	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN19@WndProc
; Line 515
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm0
; Line 516
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm0
; Line 517
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 518
	jmp	$LN39@WndProc
$LN19@WndProc:
; Line 519
	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN21@WndProc
; Line 521
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm1
; Line 522
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm1
; Line 523
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 524
	jmp	$LN39@WndProc
$LN21@WndProc:
; Line 525
	mov	esi, esp
	push	40					; 00000028H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN23@WndProc
; Line 527
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm0
; Line 528
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	addss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm0
; Line 529
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 530
	jmp	$LN39@WndProc
$LN23@WndProc:
; Line 531
	mov	esi, esp
	push	38					; 00000026H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN25@WndProc
; Line 533
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm1
; Line 534
	cvtsi2ss xmm0, DWORD PTR ?speed@@3HA		; speed
	movss	xmm1, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm1
; Line 535
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 536
	jmp	$LN39@WndProc
$LN25@WndProc:
; Line 537
	mov	esi, esp
	push	67					; 00000043H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN27@WndProc
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN27@WndProc
; Line 538
	xor	eax, eax
	mov	DWORD PTR _c1$4[ebp], eax
	mov	DWORD PTR _c1$4[ebp+4], eax
	mov	DWORD PTR _c1$4[ebp+8], eax
	mov	DWORD PTR _c1$4[ebp+12], eax
; Line 539
	push	0
	lea	eax, DWORD PTR _c1$4[ebp]
	push	eax
	push	0
	mov	ecx, OFFSET ?prx@@3VCOLORPICK@@A	; prx
	call	?Show@COLORPICK@@QAEJPAUHWND__@@AAU_D3DCOLORVALUE@@PAUCOLORPICKOPT@@@Z ; COLORPICK::Show
; Line 540
	lea	eax, DWORD PTR _c1$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?m_GreenBrush@@3PAUID2D1SolidColorBrush@@A ; m_GreenBrush
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 541
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 542
	jmp	$LN39@WndProc
$LN27@WndProc:
; Line 543
	mov	esi, esp
	push	67					; 00000043H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN29@WndProc
; Line 544
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ ; GetColorFromChooseColorDialog
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _col$3[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR _col$3[ebp+4], ecx
	mov	edx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR _col$3[ebp+8], edx
	mov	eax, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR _col$3[ebp+12], eax
; Line 545
	lea	eax, DWORD PTR _col$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?m_GreenBrush@@3PAUID2D1SolidColorBrush@@A ; m_GreenBrush
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 546
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 547
	jmp	$LN39@WndProc
$LN29@WndProc:
; Line 548
	mov	esi, esp
	push	109					; 0000006dH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN31@WndProc
	mov	esi, esp
	push	83					; 00000053H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN31@WndProc
; Line 550
	cmp	DWORD PTR ?speed@@3HA, 1		; speed
	je	SHORT $LN33@WndProc
; Line 551
	mov	eax, DWORD PTR ?speed@@3HA		; speed
	sub	eax, 1
	mov	DWORD PTR ?speed@@3HA, eax		; speed
$LN33@WndProc:
; Line 553
	jmp	$LN39@WndProc
$LN31@WndProc:
; Line 554
	mov	esi, esp
	push	107					; 0000006bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN34@WndProc
	mov	esi, esp
	push	83					; 00000053H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN34@WndProc
; Line 556
	mov	eax, DWORD PTR ?speed@@3HA		; speed
	cmp	eax, DWORD PTR ?max_speed@@3HA		; max_speed
	je	SHORT $LN36@WndProc
; Line 557
	mov	eax, DWORD PTR ?speed@@3HA		; speed
	add	eax, 1
	mov	DWORD PTR ?speed@@3HA, eax		; speed
$LN36@WndProc:
; Line 559
	jmp	$LN39@WndProc
$LN34@WndProc:
; Line 560
	mov	esi, esp
	push	109					; 0000006dH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN37@WndProc
; Line 561
	movss	xmm0, DWORD PTR ?dx@@3MA
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?dx@@3MA, xmm0
; Line 562
	movss	xmm0, DWORD PTR ?dy@@3MA
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?dy@@3MA, xmm0
; Line 563
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 564
	jmp	SHORT $LN39@WndProc
$LN37@WndProc:
; Line 565
	mov	esi, esp
	push	107					; 0000006bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN39@WndProc
; Line 566
	movss	xmm0, DWORD PTR ?dy@@3MA
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?dy@@3MA, xmm0
; Line 567
	movss	xmm0, DWORD PTR ?dx@@3MA
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?dx@@3MA, xmm0
; Line 568
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@WndProc:
; Line 570
	cvttss2si eax, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A+8, eax
; Line 571
	movss	xmm0, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	subss	xmm0, DWORD PTR __real@43480000
	cvttss2si eax, xmm0
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A+12, eax
; Line 572
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A, 200 ; 000000c8H
; Line 573
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A+4, 200 ; 000000c8H
; Line 574
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR ?key_col@@3UCollision_area@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?key_col@@3UCollision_area@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR ?key_col@@3UCollision_area@@A+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR ?key_col@@3UCollision_area@@A+12
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR ?troj_col@@3UCollision_area@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?troj_col@@3UCollision_area@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR ?troj_col@@3UCollision_area@@A+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR ?troj_col@@3UCollision_area@@A+12
	mov	DWORD PTR [eax+12], edx
	call	?Collision@@YAHUCollision_area@@0@Z	; Collision
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN40@WndProc
; Line 575
	mov	BYTE PTR ?_key@@3_NA, 0			; _key
; Line 576
	mov	esi, esp
	push	0
	push	0
	push	15					; 0000000fH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN40@WndProc:
; Line 578
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR ?rect_col@@3UCollision_area@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?rect_col@@3UCollision_area@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR ?rect_col@@3UCollision_area@@A+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR ?rect_col@@3UCollision_area@@A+12
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR ?troj_col@@3UCollision_area@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?troj_col@@3UCollision_area@@A+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR ?troj_col@@3UCollision_area@@A+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR ?troj_col@@3UCollision_area@@A+12
	mov	DWORD PTR [eax+12], edx
	call	?Collision@@YAHUCollision_area@@0@Z	; Collision
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN41@WndProc
; Line 579
	mov	esi, esp
	push	0
	push	OFFSET ??_C@_19GFDACHI@?$AAI?$AAn?$AAf?$AAo@
	push	OFFSET ??_C@_1CI@MADGDFGA@?$AAC?$AAo?$AAl?$AAl?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN41@WndProc:
; Line 582
	jmp	SHORT $LN2@WndProc
$LN42@WndProc:
; Line 585
	mov	ecx, DWORD PTR _pDemoApp$8[ebp]
	call	?OnRender@DemoApp@@AAEJXZ		; DemoApp::OnRender
; Line 586
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ValidateRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 588
	mov	DWORD PTR _result$[ebp], 0
; Line 589
	mov	BYTE PTR _wasHandled$7[ebp], 1
; Line 590
	jmp	SHORT $LN2@WndProc
$LN43@WndProc:
; Line 594
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 596
	mov	DWORD PTR _result$[ebp], 1
; Line 597
	mov	BYTE PTR _wasHandled$7[ebp], 1
$LN2@WndProc:
; Line 602
	movzx	eax, BYTE PTR _wasHandled$7[ebp]
	test	eax, eax
	jne	SHORT $LN44@WndProc
; Line 604
	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN44@WndProc:
; Line 608
	mov	eax, DWORD PTR _result$[ebp]
; Line 609
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN51@WndProc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN51@WndProc:
	DD	2
	DD	$LN50@WndProc
$LN50@WndProc:
	DD	-108					; ffffff94H
	DD	16					; 00000010H
	DD	$LN48@WndProc
	DD	-132					; ffffff7cH
	DD	16					; 00000010H
	DD	$LN49@WndProc
$LN49@WndProc:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$LN48@WndProc:
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
	npad	1
$LN47@WndProc:
	DD	$LN43@WndProc
	DD	$LN7@WndProc
	DD	$LN42@WndProc
	DD	$LN9@WndProc
	DD	$LN10@WndProc
	DD	$LN2@WndProc
$LN46@WndProc:
	DB	0
	DB	5
	DB	5
	DB	1
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
?WndProc@DemoApp@@CGJPAUHWND__@@IIJ@Z ENDP		; DemoApp::WndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OnResize@DemoApp@@AAEXII@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?OnResize@DemoApp@@AAEXII@Z PROC			; DemoApp::OnResize, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 613
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 614
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@OnResize
; Line 619
	mov	eax, DWORD PTR _height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$[ebp]
	push	ecx
	call	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::SizeU
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z ; ID2D1HwndRenderTarget::Resize
$LN1@OnResize:
; Line 621
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnResize@DemoApp@@AAEXII@Z ENDP			; DemoApp::OnResize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadBitmapFromFile@DemoApp@@AAEJPB_WIIPAPAUID2D1Bitmap@@@Z
_TEXT	SEGMENT
_hr$ = -84						; size = 4
_pScaler$ = -72						; size = 4
_pConverter$ = -60					; size = 4
_pStream$ = -48						; size = 4
_pSource$ = -36						; size = 4
_pDecoder$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_uri$ = 8						; size = 4
_destinationWidth$ = 12					; size = 4
_destinationHeight$ = 16				; size = 4
_ppBitmap$ = 20						; size = 4
?LoadBitmapFromFile@DemoApp@@AAEJPB_WIIPAPAUID2D1Bitmap@@@Z PROC ; DemoApp::LoadBitmapFromFile, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 257
	mov	DWORD PTR _pDecoder$[ebp], 0
; Line 258
	mov	DWORD PTR _pSource$[ebp], 0
; Line 259
	mov	DWORD PTR _pStream$[ebp], 0
; Line 260
	mov	DWORD PTR _pConverter$[ebp], 0
; Line 261
	mov	DWORD PTR _pScaler$[ebp], 0
; Line 263
	mov	esi, esp
	lea	eax, DWORD PTR _pDecoder$[ebp]
	push	eax
	push	1
	push	-2147483648				; 80000000H
	push	0
	mov	ecx, DWORD PTR _uri$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 271
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN2@LoadBitmap
; Line 274
	mov	esi, esp
	lea	eax, DWORD PTR _pSource$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pDecoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pDecoder$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN2@LoadBitmap:
; Line 277
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@LoadBitmap
; Line 282
	mov	esi, esp
	lea	eax, DWORD PTR _pConverter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN3@LoadBitmap:
; Line 286
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN4@LoadBitmap
; Line 288
	mov	esi, esp
	push	1
	sub	esp, 8
	xorps	xmm0, xmm0
	movsd	QWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET _GUID_WICPixelFormat32bppPBGRA
	mov	eax, DWORD PTR _pSource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConverter$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pConverter$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN4@LoadBitmap:
; Line 297
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN5@LoadBitmap
; Line 301
	mov	esi, esp
	mov	eax, DWORD PTR _ppBitmap$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pConverter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN5@LoadBitmap:
; Line 308
	lea	eax, DWORD PTR _pDecoder$[ebp]
	push	eax
	call	??$SafeRelease@UIWICBitmapDecoder@@@@YAXPAPAUIWICBitmapDecoder@@@Z ; SafeRelease<IWICBitmapDecoder>
	add	esp, 4
; Line 309
	lea	eax, DWORD PTR _pSource$[ebp]
	push	eax
	call	??$SafeRelease@UIWICBitmapFrameDecode@@@@YAXPAPAUIWICBitmapFrameDecode@@@Z ; SafeRelease<IWICBitmapFrameDecode>
	add	esp, 4
; Line 310
	lea	eax, DWORD PTR _pStream$[ebp]
	push	eax
	call	??$SafeRelease@UIWICStream@@@@YAXPAPAUIWICStream@@@Z ; SafeRelease<IWICStream>
	add	esp, 4
; Line 311
	lea	eax, DWORD PTR _pConverter$[ebp]
	push	eax
	call	??$SafeRelease@UIWICFormatConverter@@@@YAXPAPAUIWICFormatConverter@@@Z ; SafeRelease<IWICFormatConverter>
	add	esp, 4
; Line 312
	lea	eax, DWORD PTR _pScaler$[ebp]
	push	eax
	call	??$SafeRelease@UIWICBitmapScaler@@@@YAXPAPAUIWICBitmapScaler@@@Z ; SafeRelease<IWICBitmapScaler>
	add	esp, 4
; Line 314
	mov	eax, DWORD PTR _hr$[ebp]
; Line 316
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@LoadBitmap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN13@LoadBitmap:
	DD	5
	DD	$LN12@LoadBitmap
$LN12@LoadBitmap:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@LoadBitmap
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@LoadBitmap
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN9@LoadBitmap
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN10@LoadBitmap
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN11@LoadBitmap
$LN11@LoadBitmap:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@LoadBitmap:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@LoadBitmap:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN8@LoadBitmap:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN7@LoadBitmap:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?LoadBitmapFromFile@DemoApp@@AAEJPB_WIIPAPAUID2D1Bitmap@@@Z ENDP ; DemoApp::LoadBitmapFromFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OnRender@DemoApp@@AAEJXZ
_TEXT	SEGMENT
$T2 = -18172						; size = 16
$T3 = -18148						; size = 16
$T4 = -18124						; size = 16
$T5 = -18100						; size = 16
$T6 = -18076						; size = 16
$T7 = -18052						; size = 24
_troj$8 = -16484					; size = 16320
_troj2$9 = -156						; size = 24
_key$10 = -124						; size = 16
_rectangle1$11 = -100					; size = 16
_height$12 = -76					; size = 4
_width$13 = -64						; size = 4
_rtSize$14 = -52					; size = 8
_hr$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnRender@DemoApp@@AAEJXZ PROC				; DemoApp::OnRender, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 625
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnRender@DemoApp@@AAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 18164				; 000046f4H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-18176]
	mov	ecx, 4541				; 000011bdH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 626
	mov	DWORD PTR _hr$[ebp], 0
; Line 628
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateDeviceResources@DemoApp@@AAEJXZ	; DemoApp::CreateDeviceResources
	mov	DWORD PTR _hr$[ebp], eax
; Line 629
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN2@OnRender
; Line 631
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+192]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 633
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ	; D2D1::Matrix3x2F::Identity
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?SetTransform@ID2D1RenderTarget@@QAEXABUD2D_MATRIX_3X2_F@@@Z ; ID2D1RenderTarget::SetTransform
; Line 635
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	16777215				; 00ffffffH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z	; D2D1::ColorF::ColorF
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?Clear@ID2D1RenderTarget@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1RenderTarget::Clear
; Line 636
	mov	esi, esp
	lea	eax, DWORD PTR _rtSize$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+212]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 638
	cvttss2si eax, DWORD PTR _rtSize$14[ebp]
	mov	DWORD PTR _width$13[ebp], eax
; Line 639
	cvttss2si eax, DWORD PTR _rtSize$14[ebp+4]
	mov	DWORD PTR _height$12[ebp], eax
; Line 642
	mov	esi, esp
	push	ecx
	movss	xmm0, DWORD PTR ?dy@@3MA
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?dx@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+204]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 644
	push	ecx
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44228000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::RectF
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T5[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T5[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T5[ebp+12], edx
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _rectangle1$11[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp+4]
	mov	DWORD PTR _rectangle1$11[ebp+4], ecx
	mov	edx, DWORD PTR $T5[ebp+8]
	mov	DWORD PTR _rectangle1$11[ebp+8], edx
	mov	eax, DWORD PTR $T5[ebp+12]
	mov	DWORD PTR _rectangle1$11[ebp+12], eax
; Line 650
	push	ecx
	movss	xmm0, DWORD PTR __real@44228000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44834000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@447a0000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::RectF
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T3[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T3[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T3[ebp+12], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _key$10[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR _key$10[ebp+4], ecx
	mov	edx, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR _key$10[ebp+8], edx
	mov	eax, DWORD PTR $T3[ebp+12]
	mov	DWORD PTR _key$10[ebp+12], eax
; Line 656
	movzx	eax, BYTE PTR ?_key@@3_NA		; _key
	test	eax, eax
	je	SHORT $LN3@OnRender
; Line 657
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	lea	edx, DWORD PTR _key$10[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
$LN3@OnRender:
; Line 659
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?m_BlackBrush@@3PAUID2D1SolidColorBrush@@A ; m_BlackBrush
	push	eax
	lea	ecx, DWORD PTR _rectangle1$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
; Line 664
	lea	ecx, DWORD PTR _troj2$9[ebp]
	call	??0TrojBody2@@QAE@XZ			; TrojBody2::TrojBody2
; Line 665
	cvttss2si eax, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	mov	DWORD PTR _troj2$9[ebp], eax
; Line 666
	cvttss2si eax, DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4
	mov	DWORD PTR _troj2$9[ebp+4], eax
; Line 667
	cvttss2si eax, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A
	mov	DWORD PTR _troj2$9[ebp+8], eax
; Line 668
	cvttss2si eax, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	mov	DWORD PTR _troj2$9[ebp+12], eax
; Line 669
	cvttss2si eax, DWORD PTR ?AB@@3UD2D_POINT_2F@@A
	mov	DWORD PTR _troj2$9[ebp+16], eax
; Line 670
	movss	xmm0, DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4
	subss	xmm0, DWORD PTR __real@43480000
	cvttss2si eax, xmm0
	mov	DWORD PTR _troj2$9[ebp+20], eax
; Line 671
	push	16320					; 00003fc0H
	lea	ecx, DWORD PTR _troj$8[ebp]
	call	?__autoclassinit2@Trojuhelnik@@QAEXI@Z
	push	55					; 00000037H
	sub	esp, 24					; 00000018H
	mov	eax, esp
	mov	ecx, DWORD PTR _troj2$9[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _troj2$9[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _troj2$9[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _troj2$9[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _troj2$9[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _troj2$9[ebp+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ?m_GreenBrush@@3PAUID2D1SolidColorBrush@@A ; m_GreenBrush
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	ecx, DWORD PTR _troj$8[ebp]
	call	??0Trojuhelnik@@QAE@PAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@UTrojBody2@@H@Z ; Trojuhelnik::Trojuhelnik
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 672
	push	0
	push	20					; 00000014H
	push	20					; 00000014H
	lea	ecx, DWORD PTR _troj$8[ebp]
	call	?Move2@Trojuhelnik@@QAEXHH_N@Z		; Trojuhelnik::Move2
; Line 673
	lea	ecx, DWORD PTR _troj$8[ebp]
	call	?Draw@Trojuhelnik@@QAEXXZ		; Trojuhelnik::Draw
; Line 704
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+196]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _troj$8[ebp]
	call	??1Trojuhelnik@@QAE@XZ			; Trojuhelnik::~Trojuhelnik
$LN2@OnRender:
; Line 707
	cmp	DWORD PTR _hr$[ebp], -2003238900	; 8899000cH
	jne	SHORT $LN4@OnRender
; Line 709
	mov	DWORD PTR _hr$[ebp], 0
; Line 710
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DiscardDeviceResources@DemoApp@@AAEXXZ	; DemoApp::DiscardDeviceResources
$LN4@OnRender:
; Line 712
	mov	eax, DWORD PTR _hr$[ebp]
; Line 713
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@OnRender
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 18176				; 00004700H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@OnRender:
	DD	5
	DD	$LN13@OnRender
$LN13@OnRender:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN7@OnRender
	DD	-100					; ffffff9cH
	DD	16					; 00000010H
	DD	$LN8@OnRender
	DD	-124					; ffffff84H
	DD	16					; 00000010H
	DD	$LN9@OnRender
	DD	-156					; ffffff64H
	DD	24					; 00000018H
	DD	$LN10@OnRender
	DD	-16484					; ffffbf9cH
	DD	16320					; 00003fc0H
	DD	$LN11@OnRender
$LN11@OnRender:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	106					; 0000006aH
	DB	0
$LN10@OnRender:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	106					; 0000006aH
	DB	50					; 00000032H
	DB	0
$LN9@OnRender:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN8@OnRender:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
$LN7@OnRender:
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRender@DemoApp@@AAEJXZ$0:
	lea	ecx, DWORD PTR _troj$8[ebp]
	jmp	??1Trojuhelnik@@QAE@XZ			; Trojuhelnik::~Trojuhelnik
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?OnRender@DemoApp@@AAEJXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-18180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnRender@DemoApp@@AAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnRender@DemoApp@@AAEJXZ ENDP				; DemoApp::OnRender
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DiscardDeviceResources@DemoApp@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DiscardDeviceResources@DemoApp@@AAEXXZ PROC		; DemoApp::DiscardDeviceResources, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 420
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	??$SafeRelease@UID2D1HwndRenderTarget@@@@YAXPAPAUID2D1HwndRenderTarget@@@Z ; SafeRelease<ID2D1HwndRenderTarget>
	add	esp, 4
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z ; SafeRelease<ID2D1SolidColorBrush>
	add	esp, 4
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z ; SafeRelease<ID2D1SolidColorBrush>
	add	esp, 4
; Line 423
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DiscardDeviceResources@DemoApp@@AAEXXZ ENDP		; DemoApp::DiscardDeviceResources
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateDeviceResources@DemoApp@@AAEJXZ
_TEXT	SEGMENT
$T1 = -504						; size = 16
$T2 = -480						; size = 16
$T3 = -456						; size = 16
$T4 = -432						; size = 16
$T5 = -408						; size = 28
$T6 = -372						; size = 8
$T7 = -356						; size = 28
$T8 = -320						; size = 16
$T9 = -296						; size = 16
$T10 = -272						; size = 8
_size$11 = -64						; size = 8
_rc$12 = -48						; size = 16
_hr$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?CreateDeviceResources@DemoApp@@AAEJXZ PROC		; DemoApp::CreateDeviceResources, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 360
	mov	DWORD PTR _hr$[ebp], 0
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	$LN6@CreateDevi
; Line 365
	mov	esi, esp
	lea	eax, DWORD PTR _rc$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 367
	mov	eax, DWORD PTR _rc$12[ebp+12]
	sub	eax, DWORD PTR _rc$12[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rc$12[ebp+8]
	sub	ecx, DWORD PTR _rc$12[ebp]
	push	ecx
	call	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::SizeU
	add	esp, 8
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR $T10[ebp+4], edx
	mov	edx, DWORD PTR $T10[ebp]
	mov	eax, DWORD PTR $T10[ebp+4]
	mov	DWORD PTR _size$11[ebp], edx
	mov	DWORD PTR _size$11[ebp+4], eax
; Line 373
	push	0
	mov	eax, DWORD PTR _size$11[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _size$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	call	?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ; D2D1::HwndRenderTargetProperties
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T9[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T9[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T9[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR $T9[ebp+12], eax
	push	0
	push	0
	call	?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ; D2D1::PixelFormat
	add	esp, 8
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR $T6[ebp+4], edx
	push	0
	push	0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ; D2D1::RenderTargetProperties
	add	esp, 28					; 0000001cH
	mov	ecx, 7
	mov	esi, eax
	lea	edi, DWORD PTR $T7[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z ; ID2D1Factory::CreateHwndRenderTarget
	mov	DWORD PTR _hr$[ebp], eax
; Line 380
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@CreateDevi
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	7833753					; 00778899H
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z	; D2D1::ColorF::ColorF
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
	mov	DWORD PTR _hr$[ebp], eax
$LN3@CreateDevi:
; Line 388
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN4@CreateDevi
; Line 391
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	6591981					; 006495edH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z	; D2D1::ColorF::ColorF
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
	mov	DWORD PTR _hr$[ebp], eax
$LN4@CreateDevi:
; Line 396
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN5@CreateDevi
; Line 399
	push	OFFSET ?m_BlackBrush@@3PAUID2D1SolidColorBrush@@A ; m_BlackBrush
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z	; D2D1::ColorF::ColorF
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
	mov	DWORD PTR _hr$[ebp], eax
$LN5@CreateDevi:
; Line 404
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN6@CreateDevi
; Line 407
	push	OFFSET ?m_GreenBrush@@3PAUID2D1SolidColorBrush@@A ; m_GreenBrush
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	32768					; 00008000H
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0ColorF@D2D1@@QAE@W4Enum@01@M@Z	; D2D1::ColorF::ColorF
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
	mov	DWORD PTR _hr$[ebp], eax
$LN6@CreateDevi:
; Line 414
	mov	eax, DWORD PTR _hr$[ebp]
; Line 415
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@CreateDevi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@CreateDevi:
	DD	2
	DD	$LN10@CreateDevi
$LN10@CreateDevi:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN8@CreateDevi
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN9@CreateDevi
$LN9@CreateDevi:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN8@CreateDevi:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?CreateDeviceResources@DemoApp@@AAEJXZ ENDP		; DemoApp::CreateDeviceResources
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateDeviceIndependentResources@DemoApp@@AAEJXZ
_TEXT	SEGMENT
_hr$ = -20						; size = 4
_this$ = -8						; size = 4
?CreateDeviceIndependentResources@DemoApp@@AAEJXZ PROC	; DemoApp::CreateDeviceIndependentResources, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 350
	mov	DWORD PTR _hr$[ebp], 0
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	push	0
	call	??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z ; D2D1CreateFactory<ID2D1Factory>
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 355
	mov	eax, DWORD PTR _hr$[ebp]
; Line 356
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateDeviceIndependentResources@DemoApp@@AAEJXZ ENDP	; DemoApp::CreateDeviceIndependentResources
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RunMessageLoop@DemoApp@@QAEXXZ
_TEXT	SEGMENT
_msg$ = -48						; size = 28
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?RunMessageLoop@DemoApp@@QAEXXZ PROC			; DemoApp::RunMessageLoop, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
$LN2@RunMessage:
; Line 182
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@RunMessage
; Line 184
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 185
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	jmp	SHORT $LN2@RunMessage
$LN1@RunMessage:
; Line 187
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@RunMessage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@RunMessage:
	DD	1
	DD	$LN6@RunMessage
$LN6@RunMessage:
	DD	-48					; ffffffd0H
	DD	28					; 0000001cH
	DD	$LN5@RunMessage
$LN5@RunMessage:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?RunMessageLoop@DemoApp@@QAEXXZ ENDP			; DemoApp::RunMessageLoop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Initialize@DemoApp@@QAEJXZ
_TEXT	SEGMENT
tv161 = -312						; size = 8
tv158 = -304						; size = 4
tv136 = -304						; size = 4
_dpiY$1 = -104						; size = 4
_dpiX$2 = -92						; size = 4
_wcex$3 = -80						; size = 48
_hr$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Initialize@DemoApp@@QAEJXZ PROC			; DemoApp::Initialize, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 195
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateDeviceIndependentResources@DemoApp@@AAEJXZ ; DemoApp::CreateDeviceIndependentResources
	mov	DWORD PTR _hr$[ebp], eax
; Line 197
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN3@Initialize
; Line 200
	mov	DWORD PTR _wcex$3[ebp], 48		; 00000030H
	push	44					; 0000002cH
	push	0
	lea	eax, DWORD PTR _wcex$3[ebp+4]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 201
	mov	DWORD PTR _wcex$3[ebp+4], 3
; Line 202
	mov	DWORD PTR _wcex$3[ebp+8], OFFSET ?WndProc@DemoApp@@CGJPAUHWND__@@IIJ@Z ; DemoApp::WndProc
; Line 203
	mov	DWORD PTR _wcex$3[ebp+12], 0
; Line 204
	mov	DWORD PTR _wcex$3[ebp+16], 4
; Line 205
	mov	DWORD PTR _wcex$3[ebp+20], OFFSET ___ImageBase
; Line 206
	mov	DWORD PTR _wcex$3[ebp+32], 0
; Line 207
	mov	DWORD PTR _wcex$3[ebp+36], 0
; Line 208
	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$3[ebp+28], eax
; Line 209
	mov	DWORD PTR _wcex$3[ebp+40], OFFSET ??_C@_1BG@KBOCNCBA@?$AAD?$AA2?$AAD?$AAD?$AAe?$AAm?$AAo?$AAA?$AAp?$AAp@
; Line 211
	mov	esi, esp
	lea	eax, DWORD PTR _wcex$3[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 221
	mov	esi, esp
	call	DWORD PTR __imp__GetDesktopWindow@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__GetDpiForWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv158[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv158[ebp]
	mov	eax, DWORD PTR tv158[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv161[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv161[ebp]
	movss	DWORD PTR _dpiX$2[ebp], xmm0
; Line 222
	movss	xmm0, DWORD PTR _dpiX$2[ebp]
	movss	DWORD PTR _dpiY$1[ebp], xmm0
; Line 227
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ___ImageBase
	push	0
	push	0
	movss	xmm0, DWORD PTR __real@43f00000
	mulss	xmm0, DWORD PTR _dpiY$1[ebp]
	divss	xmm0, DWORD PTR __real@42c00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?ceil@@YAMM@Z				; ceil
	add	esp, 4
	call	__ftol2
	push	eax
	movss	xmm0, DWORD PTR __real@44200000
	mulss	xmm0, DWORD PTR _dpiX$2[ebp]
	divss	xmm0, DWORD PTR __real@42c00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?ceil@@YAMM@Z				; ceil
	add	esp, 4
	call	__ftol2
	push	eax
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	13565952				; 00cf0000H
	push	OFFSET ??_C@_1GI@HJJBOMF@?$AAD?$AAe?$AAm?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAl@
	push	OFFSET ??_C@_1BG@KBOCNCBA@?$AAD?$AA2?$AAD?$AAD?$AAe?$AAm?$AAo?$AAA?$AAp?$AAp@
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Initialize
	mov	DWORD PTR tv136[ebp], 0
	jmp	SHORT $LN6@Initialize
$LN5@Initialize:
	mov	DWORD PTR tv136[ebp], -2147467259	; 80004005H
$LN6@Initialize:
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR _hr$[ebp], ecx
; Line 241
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@Initialize
; Line 243
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 244
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Initialize:
; Line 248
	mov	eax, DWORD PTR _hr$[ebp]
; Line 249
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Initialize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@Initialize:
	DD	1
	DD	$LN8@Initialize
$LN8@Initialize:
	DD	-80					; ffffffb0H
	DD	48					; 00000030H
	DD	$LN7@Initialize
$LN7@Initialize:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?Initialize@DemoApp@@QAEJXZ ENDP			; DemoApp::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DemoApp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DemoApp@@QAE@XZ PROC					; DemoApp::~DemoApp, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 170
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DemoApp@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$SafeRelease@UID2D1Factory@@@@YAXPAPAUID2D1Factory@@@Z ; SafeRelease<ID2D1Factory>
	add	esp, 4
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	??$SafeRelease@UID2D1HwndRenderTarget@@@@YAXPAPAUID2D1HwndRenderTarget@@@Z ; SafeRelease<ID2D1HwndRenderTarget>
	add	esp, 4
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z ; SafeRelease<ID2D1SolidColorBrush>
	add	esp, 4
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$SafeRelease@UID2D1SolidColorBrush@@@@YAXPAPAUID2D1SolidColorBrush@@@Z ; SafeRelease<ID2D1SolidColorBrush>
	add	esp, 4
; Line 176
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1DemoApp@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DemoApp@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DemoApp@@QAE@XZ ENDP					; DemoApp::~DemoApp
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DemoApp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DemoApp@@QAE@XZ PROC					; DemoApp::DemoApp, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 148
	movss	xmm0, DWORD PTR __real@43480000
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A, xmm0
; Line 149
	movss	xmm0, DWORD PTR __real@43480000
	movss	DWORD PTR ?AB@@3UD2D_POINT_2F@@A+4, xmm0
; Line 150
	movss	xmm0, DWORD PTR __real@43c80000
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A, xmm0
; Line 151
	movss	xmm0, DWORD PTR __real@43480000
	movss	DWORD PTR ?AB2@@3UD2D_POINT_2F@@A+4, xmm0
; Line 152
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A+8, 200 ; 000000c8H
; Line 153
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A+12, 0
; Line 154
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A, 200 ; 000000c8H
; Line 155
	mov	DWORD PTR ?troj_col@@3UCollision_area@@A+4, 200 ; 000000c8H
; Line 157
	mov	DWORD PTR ?key_col@@3UCollision_area@@A+8, 980 ; 000003d4H
; Line 158
	mov	DWORD PTR ?key_col@@3UCollision_area@@A+12, 580 ; 00000244H
; Line 159
	mov	DWORD PTR ?key_col@@3UCollision_area@@A+4, 70 ; 00000046H
; Line 160
	mov	DWORD PTR ?key_col@@3UCollision_area@@A, 70 ; 00000046H
; Line 162
	mov	DWORD PTR ?rect_col@@3UCollision_area@@A+8, 570 ; 0000023aH
; Line 163
	mov	DWORD PTR ?rect_col@@3UCollision_area@@A+12, 570 ; 0000023aH
; Line 164
	mov	DWORD PTR ?rect_col@@3UCollision_area@@A, 70 ; 00000046H
; Line 165
	mov	DWORD PTR ?rect_col@@3UCollision_area@@A+4, 220 ; 000000dcH
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DemoApp@@QAE@XZ ENDP					; DemoApp::DemoApp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Fprx@@YAXXZ
text$yd	SEGMENT
??__Fprx@@YAXXZ PROC					; `dynamic atexit destructor for 'prx'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?prx@@3VCOLORPICK@@A	; prx
	call	??1COLORPICK@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fprx@@YAXXZ ENDP					; `dynamic atexit destructor for 'prx''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eprx@@YAXXZ
text$di	SEGMENT
??__Eprx@@YAXXZ PROC					; `dynamic initializer for 'prx'', COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	push	568					; 00000238H
	mov	ecx, OFFSET ?prx@@3VCOLORPICK@@A	; prx
	call	?__autoclassinit2@COLORPICK@@QAEXI@Z
	mov	ecx, OFFSET ?prx@@3VCOLORPICK@@A	; prx
	call	??0COLORPICK@@QAE@XZ
	push	OFFSET ??__Fprx@@YAXXZ			; `dynamic atexit destructor for 'prx''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eprx@@YAXXZ ENDP					; `dynamic initializer for 'prx''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z
_TEXT	SEGMENT
_factoryType$ = 8					; size = 4
_factory$ = 12						; size = 4
??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z PROC ; D2D1CreateFactory<ID2D1Factory>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3739
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3740
	mov	eax, DWORD PTR _factory$[ebp]
	push	eax
	push	OFFSET __GUID_06152247_6f50_465a_9245_118bfd3b6007
	mov	ecx, DWORD PTR _factoryType$[ebp]
	push	ecx
	call	?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z ; D2D1CreateFactory
	add	esp, 12					; 0000000cH
; Line 3745
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z ENDP ; D2D1CreateFactory<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QBEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QBEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1350
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1351
	mov	eax, DWORD PTR _this$[ebp]
; Line 1352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QBEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1347
	mov	eax, DWORD PTR _this$[ebp]
; Line 1348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@ABEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@ABEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1736
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1737
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QBEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first
; Line 1738
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@ABEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1732
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1733
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Get_first
; Line 1734
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlength@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@CAXXZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Xlength, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1704
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1705
	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlength:
; Line 1706
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlength@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@CAXXZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__Myend$ = -68						; size = 4
__Mylast$ = -56						; size = 4
__Myfirst$ = -44					; size = 4
__My_data$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Tidy, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1686
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1687
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1688
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 1689
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 1690
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax
; Line 1692
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1694
	mov	eax, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Tidy
; Line 1695
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXPAUD2D1_GRADIENT_STOP@@0@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Destroy
; Line 1696
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEXQAUD2D1_GRADIENT_STOP@@I@Z ; std::allocator<D2D1_GRADIENT_STOP>::deallocate
; Line 1698
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1699
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1700
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@Tidy:
; Line 1702
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy_nonzero@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Buy_nonzero@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_nonzero, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1649
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1660
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QBEIXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::max_size
	cmp	DWORD PTR __Newcapacity$[ebp], eax
	jbe	SHORT $LN2@Buy_nonzer
; Line 1661
	call	?_Xlength@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@CAXXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Xlength
$LN2@Buy_nonzer:
; Line 1664
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy_raw@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_raw
$LN3@Buy_nonzer:
; Line 1665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy_nonzero@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy_raw@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Newvec$ = -68						; size = 4
__Myend$ = -56						; size = 4
__Mylast$ = -44						; size = 4
__Myfirst$ = -32					; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Buy_raw@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_raw, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1633
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1635
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1636
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 1637
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 1638
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax
; Line 1643
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	mov	ecx, eax
	call	?allocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEPAUD2D1_GRADIENT_STOP@@I@Z ; std::allocator<D2D1_GRADIENT_STOP>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax
; Line 1644
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1645
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1646
	imul	eax, DWORD PTR __Newcapacity$[ebp], 20
	add	eax, DWORD PTR __Newvec$[ebp]
	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1647
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy_raw@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXI@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXPAUD2D1_GRADIENT_STOP@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXPAUD2D1_GRADIENT_STOP@@0@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Destroy, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1611
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1612
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAXPAUD2D1_GRADIENT_STOP@@QAU1@AAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ; std::_Destroy_range<std::allocator<D2D1_GRADIENT_STOP> >
	add	esp, 12					; 0000000cH
; Line 1613
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXPAUD2D1_GRADIENT_STOP@@0@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Ufill@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEPAUD2D1_GRADIENT_STOP@@PAU3@IU_Value_init_tag@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Ufill@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEPAUD2D1_GRADIENT_STOP@@PAU3@IU_Value_init_tag@2@@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Ufill, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1581
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1583
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	push	eax
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Uninitialized_value_construct_n@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@IAAV?$allocator@UD2D1_GRADIENT_STOP@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D2D1_GRADIENT_STOP> >
	add	esp, 12					; 0000000cH
; Line 1584
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEPAUD2D1_GRADIENT_STOP@@PAU3@IU_Value_init_tag@2@@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z
_TEXT	SEGMENT
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[], COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1497
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1498
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
$LN4@operator:
; Line 1500
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	cmp	DWORD PTR __Pos$[ebp], eax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1501					; 000005ddH
	push	OFFSET ??_C@_0FD@COPLKMDI@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	mov	esi, esp
	push	0
	push	1501					; 000005ddH
	push	OFFSET ??_C@_1KG@CEOCEOEM@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1MK@FKANIDJF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
	push	OFFSET ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
; Line 1504
	imul	eax, DWORD PTR __Pos$[ebp], 20
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1505
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?max_size@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QBEIXZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::max_size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1487
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@ABEABV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAIABV?$allocator@UD2D1_GRADIENT_STOP@@@2@@Z ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 1490
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QBEIXZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::data, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1401
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1402
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy_maybe_null@UD2D1_GRADIENT_STOP@@@std@@YAPAUD2D1_GRADIENT_STOP@@PAU1@@Z ; std::_Unfancy_maybe_null<D2D1_GRADIENT_STOP>
	add	esp, 4
; Line 1403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -240						; size = 4
_$S15$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::~vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 673
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXXZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Tidy
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEAAV?$allocator@UD2D1_GRADIENT_STOP@@@2@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S15$[ebp]
	call	??$?0UD2D1_GRADIENT_STOP@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D2D1_GRADIENT_STOP>
	lea	eax, DWORD PTR _$S15$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 676
	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 678
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@vector
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@vector:
	DD	1
	DD	$LN4@vector
$LN4@vector:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@vector
$LN3@vector:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	53					; 00000035H
	DB	0
??1?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::~vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@IABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@IABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z PROC ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 471
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@UD2D1_GRADIENT_STOP@@@std@@$$V@?$_Compressed_pair@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@V?$_Vector_val@U?$_Simple_types@UD2D1_GRADIENT_STOP@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1>::_Compressed_pair<std::allocator<D2D1_GRADIENT_STOP>,std::_Vector_val<std::_Simple_types<D2D1_GRADIENT_STOP> >,1><std::allocator<D2D1_GRADIENT_STOP> const &>
; Line 472
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
; Line 473
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@IABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ENDP ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAIABV?$allocator@UD2D1_GRADIENT_STOP@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAIABV?$allocator@UD2D1_GRADIENT_STOP@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::max_size, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 709
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 710
	mov	eax, 214748364				; 0cccccccH
; Line 711
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@SAIABV?$allocator@UD2D1_GRADIENT_STOP@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D2D1_GRADIENT_STOP> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEPAUD2D1_GRADIENT_STOP@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEPAUD2D1_GRADIENT_STOP@@I@Z PROC ; std::allocator<D2D1_GRADIENT_STOP>::allocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 814
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BE@@std@@YAII@Z	; std::_Get_size_of_n<20>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEPAUD2D1_GRADIENT_STOP@@I@Z ENDP ; std::allocator<D2D1_GRADIENT_STOP>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEXQAUD2D1_GRADIENT_STOP@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEXQAUD2D1_GRADIENT_STOP@@I@Z PROC ; std::allocator<D2D1_GRADIENT_STOP>::deallocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 808
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 810
	imul	eax, DWORD PTR __Count$[ebp], 20
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 811
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAEXQAUD2D1_GRADIENT_STOP@@I@Z ENDP ; std::allocator<D2D1_GRADIENT_STOP>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAE@XZ PROC	; std::allocator<D2D1_GRADIENT_STOP>::allocator<D2D1_GRADIENT_STOP>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 802
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAE@XZ ENDP	; std::allocator<D2D1_GRADIENT_STOP>::allocator<D2D1_GRADIENT_STOP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEXI@Z PROC ; ATL::CComPtr<ID2D1GradientStopCollection>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEXI@Z ENDP ; ATL::CComPtr<ID2D1GradientStopCollection>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<ID2D1GradientStopCollection>::~CComPtr<ID2D1GradientStopCollection>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::~CComPtrBase<ID2D1GradientStopCollection>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<ID2D1GradientStopCollection>::~CComPtr<ID2D1GradientStopCollection>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z PROC ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 329
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _lp$[ebp]
	je	SHORT $LN2@operator
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@PAUID2D1GradientStopCollection@@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::CComPtr<ID2D1GradientStopCollection>
	mov	ecx, eax
	call	?Swap@?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<ID2D1GradientStopCollection>::Swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ
$LN2@operator:
; Line 333
	mov	ecx, DWORD PTR _this$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ENDP ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@PAUID2D1GradientStopCollection@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@PAUID2D1GradientStopCollection@@@Z PROC ; ATL::CComPtr<ID2D1GradientStopCollection>::CComPtr<ID2D1GradientStopCollection>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 320
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAE@PAUID2D1GradientStopCollection@@@Z ; ATL::CComPtrBase<ID2D1GradientStopCollection>::CComPtrBase<ID2D1GradientStopCollection>
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@PAUID2D1GradientStopCollection@@@Z ENDP ; ATL::CComPtr<ID2D1GradientStopCollection>::CComPtr<ID2D1GradientStopCollection>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ PROC ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ENDP ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ PROC ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ENDP ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<ID2D1GradientStopCollection>::~CComPtrBase<ID2D1GradientStopCollection>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<ID2D1GradientStopCollection>::~CComPtrBase<ID2D1GradientStopCollection>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Swap@?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAEXAAV12@@Z
_TEXT	SEGMENT
_pTemp$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?Swap@?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAEXAAV12@@Z PROC ; ATL::CComPtrBase<ID2D1GradientStopCollection>::Swap, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 177
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Swap@?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAEXAAV12@@Z ENDP ; ATL::CComPtrBase<ID2D1GradientStopCollection>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAE@PAUID2D1GradientStopCollection@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAE@PAUID2D1GradientStopCollection@@@Z PROC ; ATL::CComPtrBase<ID2D1GradientStopCollection>::CComPtrBase<ID2D1GradientStopCollection>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@IAE@PAUID2D1GradientStopCollection@@@Z ENDP ; ATL::CComPtrBase<ID2D1GradientStopCollection>::CComPtrBase<ID2D1GradientStopCollection>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEXI@Z PROC ; ATL::CComPtr<ID2D1LinearGradientBrush>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEXI@Z ENDP ; ATL::CComPtr<ID2D1LinearGradientBrush>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<ID2D1LinearGradientBrush>::~CComPtr<ID2D1LinearGradientBrush>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::~CComPtrBase<ID2D1LinearGradientBrush>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<ID2D1LinearGradientBrush>::~CComPtr<ID2D1LinearGradientBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z PROC ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 329
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _lp$[ebp]
	je	SHORT $LN2@operator
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@PAUID2D1LinearGradientBrush@@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>
	mov	ecx, eax
	call	?Swap@?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::Swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ
$LN2@operator:
; Line 333
	mov	ecx, DWORD PTR _this$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ENDP ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@PAUID2D1LinearGradientBrush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@PAUID2D1LinearGradientBrush@@@Z PROC ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 320
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@PAUID2D1LinearGradientBrush@@@Z ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@PAUID2D1LinearGradientBrush@@@Z ENDP ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ PROC ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ENDP ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ PROC ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ENDP ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::~CComPtrBase<ID2D1LinearGradientBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::~CComPtrBase<ID2D1LinearGradientBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Swap@?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAEXAAV12@@Z
_TEXT	SEGMENT
_pTemp$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?Swap@?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAEXAAV12@@Z PROC ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::Swap, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 177
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Swap@?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAEXAAV12@@Z ENDP ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@PAUID2D1LinearGradientBrush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@PAUID2D1LinearGradientBrush@@@Z PROC ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@PAUID2D1LinearGradientBrush@@@Z ENDP ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::CComPtrBase<ID2D1LinearGradientBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_r$ = 8							; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z PROC	; COLORPICK::InRect<float>, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 359
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	comiss	xmm0, DWORD PTR [eax]
	jb	SHORT $LN2@InRect
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR _x$[ebp]
	jb	SHORT $LN2@InRect
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR [eax+4]
	jb	SHORT $LN2@InRect
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	comiss	xmm0, DWORD PTR _y$[ebp]
	jb	SHORT $LN2@InRect
; Line 360
	mov	al, 1
	jmp	SHORT $LN1@InRect
$LN2@InRect:
; Line 361
	xor	al, al
$LN1@InRect:
; Line 362
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ENDP	; COLORPICK::InRect<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z PROC ; ATL::CComPtr<ID2D1SolidColorBrush>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z ENDP ; ATL::CComPtr<ID2D1SolidColorBrush>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ID2D1SolidColorBrush>::~CComPtr<ID2D1SolidColorBrush>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::~CComPtrBase<ID2D1SolidColorBrush>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ID2D1SolidColorBrush>::~CComPtr<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@$$QAV01@@Z PROC ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 353
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	call	?Swap@?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<ID2D1SolidColorBrush>::Swap
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@$$QAV01@@Z ENDP ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@PAUID2D1SolidColorBrush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@PAUID2D1SolidColorBrush@@@Z PROC ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 320
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@PAUID2D1SolidColorBrush@@@Z ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@PAUID2D1SolidColorBrush@@@Z ENDP ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	204					; 000000ccH
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAEPAPAUID2D1SolidColorBrush@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAEPAPAUID2D1SolidColorBrush@@XZ PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAEPAPAUID2D1SolidColorBrush@@XZ ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::~CComPtrBase<ID2D1SolidColorBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::~CComPtrBase<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Swap@?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAEXAAV12@@Z
_TEXT	SEGMENT
_pTemp$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?Swap@?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAEXAAV12@@Z PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::Swap, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 177
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Swap@?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAEXAAV12@@Z ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@PAUID2D1SolidColorBrush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@PAUID2D1SolidColorBrush@@@Z PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@PAUID2D1SolidColorBrush@@@Z ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<ID2D1SolidColorBrush>::CComPtrBase<ID2D1SolidColorBrush>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$min@M@std@@YAABMABM0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YAABMABM0@Z PROC				; std::min<float>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 68
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx]
	jbe	SHORT $LN3@min
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], edx
	jmp	SHORT $LN4@min
$LN3@min:
	mov	eax, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], eax
$LN4@min:
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR $T1[ebp]
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$min@M@std@@YAABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$max@M@std@@YAABMABM0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YAABMABM0@Z PROC				; std::max<float>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __FE2771BC_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 44
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx]
	jbe	SHORT $LN3@max
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], edx
	jmp	SHORT $LN4@max
$LN3@max:
	mov	eax, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], eax
$LN4@max:
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR $T1[ebp]
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$max@M@std@@YAABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@COLORPICK@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@COLORPICK@@QAEXI@Z PROC		; COLORPICK::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@COLORPICK@@QAEXI@Z ENDP		; COLORPICK::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1COLORPICK@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1COLORPICK@@QAE@XZ PROC				; COLORPICK::~COLORPICK, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	??1?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::~vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COLORPICK@@QAE@XZ ENDP				; COLORPICK::~COLORPICK
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0COLORPICK@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0COLORPICK@@QAE@XZ PROC				; COLORPICK::COLORPICK, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ ; ATL::CComPtr<IDWriteFactory>::CComPtr<IDWriteFactory>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1HwndRenderTarget>::CComPtr<ID2D1HwndRenderTarget>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1Factory>::CComPtr<ID2D1Factory>
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+19], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -2147467259		; 80004005H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], -1
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ ; ATL::CComPtr<IDWriteTextFormat>::CComPtr<IDWriteTextFormat>
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 344				; 00000158H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 360				; 00000168H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+392], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+396], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [edx+400], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+404], xmm0
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 432				; 000001b0H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 504				; 000001f8H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [eax+528], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+532], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	??0COLORPICKOPT@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COLORPICK@@QAE@XZ ENDP				; COLORPICK::COLORPICK
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Show@COLORPICK@@QAEJPAUHWND__@@AAU_D3DCOLORVALUE@@PAUCOLORPICKOPT@@@Z
_TEXT	SEGMENT
_msg$1 = -152						; size = 28
_MainWindow$2 = -116					; size = 4
_r$3 = -104						; size = 16
_wClass$4 = -80						; size = 48
_res$5 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_init$ = 12						; size = 4
_opt$ = 16						; size = 4
?Show@COLORPICK@@QAEJPAUHWND__@@AAU_D3DCOLORVALUE@@PAUCOLORPICKOPT@@@Z PROC ; COLORPICK::Show, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 1891
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 1892
	cmp	DWORD PTR _opt$[ebp], 0
	je	SHORT $LN4@Show
; Line 1893
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 552				; 00000228H
	mov	ecx, DWORD PTR _opt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
$LN4@Show:
; Line 1895
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	ecx, DWORD PTR _init$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
; Line 1896
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+552]
	test	ecx, ecx
	jne	SHORT $LN5@Show
; Line 1897
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+404], xmm0
	jmp	SHORT $LN6@Show
$LN5@Show:
; Line 1899
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+404]
	mov	DWORD PTR [eax+532], edx
$LN6@Show:
; Line 1901
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN7@Show
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN7@Show
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN7@Show
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+404]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN7@Show
; Line 1903
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+404], xmm0
; Line 1904
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+532], xmm0
$LN7@Show:
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+560]
	test	ecx, ecx
	je	$LN8@Show
; Line 1908
	mov	DWORD PTR _res$5[ebp], OFFSET ??_C@_0EB@OAIDDNB@?$AB?$AA?$PP?$PP?$AA?$AA?$AA?$AA?$AA?$AA?$AA?$AAH?$AI?$AI?$IA?$AA?$AA?$AA?$AA?$AA?$AA?$CB?$AC?z?$AA?$AA?$AA?$AA?$AA?$AA@
; Line 1909
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ?Main2_DP@COLORPICK@@SGJPAUHWND__@@IIJ@Z ; COLORPICK::Main2_DP
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _res$5[ebp]
	push	edx
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__DialogBoxIndirectParamW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1911
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN11@Show
; Line 1913
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	ecx, DWORD PTR _init$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1914
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+552]
	test	ecx, ecx
	jne	SHORT $LN11@Show
; Line 1915
	mov	eax, DWORD PTR _init$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+12], xmm0
$LN11@Show:
; Line 1917
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	jmp	$LN9@Show
; Line 1919
	jmp	$LN9@Show
$LN8@Show:
; Line 1922
	push	48					; 00000030H
	push	0
	lea	eax, DWORD PTR _wClass$4[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1923
	mov	DWORD PTR _wClass$4[ebp], 48		; 00000030H
; Line 1925
	mov	DWORD PTR _wClass$4[ebp+4], 139		; 0000008bH
; Line 1926
	mov	DWORD PTR _wClass$4[ebp+8], OFFSET ?Main2_DP@COLORPICK@@SGJPAUHWND__@@IIJ@Z ; COLORPICK::Main2_DP
; Line 1927
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wClass$4[ebp+20], eax
; Line 1928
	mov	DWORD PTR _wClass$4[ebp+24], 0
; Line 1929
	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wClass$4[ebp+28], eax
; Line 1930
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wClass$4[ebp+32], eax
; Line 1931
	mov	DWORD PTR _wClass$4[ebp+40], OFFSET ??_C@_1M@PBMEKDNI@?$AAC?$AAL?$AAA?$AAS?$AAS@
; Line 1932
	mov	DWORD PTR _wClass$4[ebp+44], 0
; Line 1933
	mov	esi, esp
	lea	eax, DWORD PTR _wClass$4[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1935
	mov	DWORD PTR _r$3[ebp], 0
	mov	DWORD PTR _r$3[ebp+4], 0
	mov	DWORD PTR _r$3[ebp+8], 800		; 00000320H
	mov	DWORD PTR _r$3[ebp+12], 400		; 00000190H
; Line 1936
	lea	eax, DWORD PTR _r$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CenterWindow@COLORPICK@@QAEXPAUtagRECT@@@Z ; COLORPICK::CenterWindow
; Line 1937
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$3[ebp+12]
	push	edx
	mov	eax, DWORD PTR _r$3[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _r$3[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _r$3[ebp]
	push	edx
	push	-2147483648				; 80000000H
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1M@PBMEKDNI@?$AAC?$AAL?$AAA?$AAS?$AAS@
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _MainWindow$2[ebp], eax
; Line 1942
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _MainWindow$2[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1943
	mov	esi, esp
	push	5
	mov	eax, DWORD PTR _MainWindow$2[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Show:
; Line 1945
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$1[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@Show
; Line 1947
	mov	esi, esp
	lea	eax, DWORD PTR _msg$1[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1948
	mov	esi, esp
	lea	eax, DWORD PTR _msg$1[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1949
	jmp	SHORT $LN2@Show
$LN3@Show:
; Line 1950
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN13@Show
; Line 1952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	ecx, DWORD PTR _init$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1953
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+552]
	test	ecx, ecx
	jne	SHORT $LN13@Show
; Line 1954
	mov	eax, DWORD PTR _init$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+12], xmm0
$LN13@Show:
; Line 1956
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
$LN9@Show:
; Line 1960
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@Show
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN19@Show:
	DD	3
	DD	$LN18@Show
$LN18@Show:
	DD	-80					; ffffffb0H
	DD	48					; 00000030H
	DD	$LN15@Show
	DD	-104					; ffffff98H
	DD	16					; 00000010H
	DD	$LN16@Show
	DD	-152					; ffffff68H
	DD	28					; 0000001cH
	DD	$LN17@Show
$LN17@Show:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN16@Show:
	DB	114					; 00000072H
	DB	0
$LN15@Show:
	DB	119					; 00000077H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
?Show@COLORPICK@@QAEJPAUHWND__@@AAU_D3DCOLORVALUE@@PAUCOLORPICKOPT@@@Z ENDP ; COLORPICK::Show
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CenterWindow@COLORPICK@@QAEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_y$ = -56						; size = 4
_x$ = -44						; size = 4
_yMax$ = -32						; size = 4
_xMax$ = -20						; size = 4
_this$ = -8						; size = 4
_r$ = 8							; size = 4
?CenterWindow@COLORPICK@@QAEXPAUtagRECT@@@Z PROC	; COLORPICK::CenterWindow, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 1871
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 1872
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _xMax$[ebp], eax
; Line 1873
	mov	esi, esp
	push	17					; 00000011H
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _yMax$[ebp], eax
; Line 1875
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _x$[ebp], ecx
; Line 1876
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _y$[ebp], ecx
; Line 1878
	mov	eax, DWORD PTR _xMax$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _xMax$[ebp], eax
; Line 1879
	mov	eax, DWORD PTR _yMax$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yMax$[ebp], eax
; Line 1880
	mov	eax, DWORD PTR _xMax$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xMax$[ebp], eax
; Line 1881
	mov	eax, DWORD PTR _yMax$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yMax$[ebp], eax
; Line 1883
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _xMax$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1884
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _yMax$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1885
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CenterWindow@COLORPICK@@QAEXPAUtagRECT@@@Z ENDP	; COLORPICK::CenterWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Main2_DP@COLORPICK@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_cs$1 = -20						; size = 4
_c$ = -8						; size = 4
_hh$ = 8						; size = 4
_mm$ = 12						; size = 4
_ww$ = 16						; size = 4
_ll$ = 20						; size = 4
?Main2_DP@COLORPICK@@SGJPAUHWND__@@IIJ@Z PROC		; COLORPICK::Main2_DP, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 1851
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 1852
	mov	esi, esp
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hh$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
; Line 1853
	cmp	DWORD PTR _mm$[ebp], 1
	jne	SHORT $LN2@Main2_DP
; Line 1855
	mov	eax, DWORD PTR _ll$[ebp]
	mov	DWORD PTR _cs$1[ebp], eax
; Line 1856
	mov	eax, DWORD PTR _cs$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
; Line 1857
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Main2_DP:
; Line 1859
	cmp	DWORD PTR _mm$[ebp], 272		; 00000110H
	jne	SHORT $LN3@Main2_DP
; Line 1861
	mov	eax, DWORD PTR _ll$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 1862
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _hh$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1863
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Main2_DP:
; Line 1865
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN4@Main2_DP
; Line 1866
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mm$[ebp]
	push	edx
	mov	eax, DWORD PTR _hh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	?Main_DP@COLORPICK@@QAGJPAUHWND__@@IIJ@Z ; COLORPICK::Main_DP
	jmp	SHORT $LN1@Main2_DP
$LN4@Main2_DP:
; Line 1867
	mov	esi, esp
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mm$[ebp]
	push	edx
	mov	eax, DWORD PTR _hh$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Main2_DP:
; Line 1868
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Main2_DP@COLORPICK@@SGJPAUHWND__@@IIJ@Z ENDP		; COLORPICK::Main2_DP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Main_DP@COLORPICK@@QAGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv372 = -612						; size = 4
tv327 = -612						; size = 4
tv218 = -612						; size = 4
tv64 = -612						; size = 4
$T1 = -604						; size = 16
$T2 = -580						; size = 8
$T3 = -564						; size = 16
$T4 = -540						; size = 28
$T5 = -504						; size = 8
$T6 = -488						; size = 28
_u$7 = -260						; size = 8
_rc$8 = -244						; size = 16
_props$9 = -220						; size = 28
_hp$10 = -184						; size = 16
_dpiY$11 = -160						; size = 4
_dpiX$12 = -148						; size = 4
_rc$13 = -136						; size = 16
_ps$14 = -112						; size = 64
_p$15 = -40						; size = 8
_y$16 = -24						; size = 4
_x$17 = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_hh$ = 12						; size = 4
_mm$ = 16						; size = 4
_ww$ = 20						; size = 4
_ll$ = 24						; size = 4
?Main_DP@COLORPICK@@QAGJPAUHWND__@@IIJ@Z PROC		; COLORPICK::Main_DP, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 1715
	push	ebp
	mov	ebp, esp
	sub	esp, 612				; 00000264H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-612]
	mov	ecx, 153				; 00000099H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 1716
	mov	eax, DWORD PTR _mm$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	ja	$LN28@Main_DP
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN4@Main_DP
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	ja	SHORT $LN29@Main_DP
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN7@Main_DP
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN10@Main_DP
	cmp	DWORD PTR tv64[ebp], 5
	je	$LN24@Main_DP
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN20@Main_DP
	jmp	$LN2@Main_DP
$LN29@Main_DP:
	cmp	DWORD PTR tv64[ebp], 20			; 00000014H
	je	$LN19@Main_DP
	cmp	DWORD PTR tv64[ebp], 256		; 00000100H
	je	$LN12@Main_DP
	cmp	DWORD PTR tv64[ebp], 260		; 00000104H
	je	$LN12@Main_DP
	jmp	$LN2@Main_DP
$LN28@Main_DP:
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 512				; 00000200H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 10			; 0000000aH
	ja	$LN2@Main_DP
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN30@Main_DP[edx*4]
$LN4@Main_DP:
; Line 1720
	mov	eax, DWORD PTR _ww$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN5@Main_DP
; Line 1722
	push	0
	push	0
	push	0
	push	0
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?KeyDown@COLORPICK@@QAEXIJ_N00@Z	; COLORPICK::KeyDown
$LN5@Main_DP:
; Line 1724
	mov	eax, DWORD PTR _ww$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 2
	jne	SHORT $LN6@Main_DP
; Line 1726
	push	0
	push	0
	push	0
	push	0
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?KeyDown@COLORPICK@@QAEXIJ_N00@Z	; COLORPICK::KeyDown
$LN6@Main_DP:
; Line 1728
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN7@Main_DP:
; Line 1732
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+560]
	test	ecx, ecx
	je	SHORT $LN8@Main_DP
; Line 1733
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hh$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN9@Main_DP
$LN8@Main_DP:
; Line 1735
	mov	esi, esp
	mov	eax, DWORD PTR _hh$[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@Main_DP:
; Line 1736
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN10@Main_DP:
; Line 1741
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+560]
	test	ecx, ecx
	je	SHORT $LN11@Main_DP
; Line 1742
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN11@Main_DP:
; Line 1743
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1744
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN12@Main_DP:
; Line 1750
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?KeyDown@COLORPICK@@QAEXIJ_N00@Z	; COLORPICK::KeyDown
; Line 1751
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN13@Main_DP:
; Line 1755
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MouseMove@COLORPICK@@QAEXIJ@Z		; COLORPICK::MouseMove
; Line 1756
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN14@Main_DP:
; Line 1760
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeftDown@COLORPICK@@QAE_NIJ@Z		; COLORPICK::LeftDown
; Line 1761
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN15@Main_DP:
; Line 1765
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RightDown@COLORPICK@@QAEXIJ@Z		; COLORPICK::RightDown
; Line 1766
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN16@Main_DP:
; Line 1770
	mov	eax, DWORD PTR _ll$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _x$17[ebp], ecx
; Line 1771
	mov	eax, DWORD PTR _ll$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _y$16[ebp], ecx
; Line 1772
	mov	eax, DWORD PTR _x$17[ebp]
	mov	DWORD PTR _p$15[ebp], eax
	mov	eax, DWORD PTR _y$16[ebp]
	mov	DWORD PTR _p$15[ebp+4], eax
; Line 1773
	mov	esi, esp
	lea	eax, DWORD PTR _p$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__ScreenToClient@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1774
	mov	eax, DWORD PTR _p$15[ebp]
	mov	DWORD PTR _ll$[ebp], eax
; Line 1775
	mov	eax, DWORD PTR _p$15[ebp+4]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _ll$[ebp]
	mov	DWORD PTR _ll$[ebp], eax
; Line 1776
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Wheel@COLORPICK@@QAEXIJ@Z		; COLORPICK::Wheel
; Line 1777
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN17@Main_DP:
; Line 1781
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeftUp@COLORPICK@@QAEXIJ@Z		; COLORPICK::LeftUp
; Line 1782
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN18@Main_DP:
; Line 1786
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeftDoubleClick@COLORPICK@@QAEXIJ@Z	; COLORPICK::LeftDoubleClick
; Line 1787
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN19@Main_DP:
; Line 1790
	mov	eax, 1
	jmp	$LN1@Main_DP
$LN20@Main_DP:
; Line 1795
	mov	esi, esp
	lea	eax, DWORD PTR _ps$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	call	DWORD PTR __imp__BeginPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1798
	mov	esi, esp
	lea	eax, DWORD PTR _rc$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1799
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??7?$CComPtrBase@UIDWriteFactory@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IDWriteFactory>::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@Main_DP
; Line 1800
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??I?$CComPtrBase@UIDWriteFactory@@@ATL@@QAEPAPAUIDWriteFactory@@XZ ; ATL::CComPtrBase<IDWriteFactory>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET __GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
	push	0
	call	DWORD PTR __imp__DWriteCreateFactory@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@Main_DP:
; Line 1801
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??7?$CComPtrBase@UID2D1Factory@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<ID2D1Factory>::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@Main_DP
; Line 1802
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??I?$CComPtrBase@UID2D1Factory@@@ATL@@QAEPAPAUID2D1Factory@@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator&
	push	eax
	push	1
	call	??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PAPAUID2D1Factory@@@Z ; D2D1CreateFactory<ID2D1Factory>
	add	esp, 8
$LN22@Main_DP:
; Line 1803
	xorps	xmm0, xmm0
	movss	DWORD PTR _dpiX$12[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _dpiY$11[ebp], xmm0
; Line 1805
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1Factory@@@1@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator->
	mov	DWORD PTR tv218[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _dpiY$11[ebp]
	push	eax
	lea	ecx, DWORD PTR _dpiX$12[ebp]
	push	ecx
	mov	edx, DWORD PTR tv218[ebp]
	push	edx
	mov	eax, DWORD PTR tv218[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1807
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??7?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator!
	movzx	eax, al
	test	eax, eax
	je	$LN23@Main_DP
; Line 1811
	mov	eax, DWORD PTR _hh$[ebp]
	mov	DWORD PTR _hp$10[ebp], eax
; Line 1812
	mov	eax, DWORD PTR _rc$13[ebp+8]
	mov	DWORD PTR _hp$10[ebp+4], eax
; Line 1813
	mov	eax, DWORD PTR _rc$13[ebp+12]
	mov	DWORD PTR _hp$10[ebp+8], eax
; Line 1814
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Release@?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEXXZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::Release
; Line 1816
	push	0
	push	0
	call	?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ; D2D1::PixelFormat
	add	esp, 8
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR $T5[ebp+4], edx
	push	0
	push	0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ; D2D1::RenderTargetProperties
	add	esp, 28					; 0000001cH
	mov	ecx, 7
	mov	esi, eax
	lea	edi, DWORD PTR $T6[ebp]
	rep movsd
	mov	ecx, 7
	lea	esi, DWORD PTR $T6[ebp]
	lea	edi, DWORD PTR _props$9[ebp]
	rep movsd
; Line 1817
	movss	xmm0, DWORD PTR __real@42c00000
	movss	DWORD PTR _props$9[ebp+12], xmm0
; Line 1818
	movss	xmm0, DWORD PTR __real@42c00000
	movss	DWORD PTR _props$9[ebp+16], xmm0
; Line 1819
	mov	eax, DWORD PTR _rc$13[ebp+12]
	sub	eax, DWORD PTR _rc$13[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rc$13[ebp+8]
	sub	ecx, DWORD PTR _rc$13[ebp]
	push	ecx
	call	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::SizeU
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR $T2[ebp+4], edx
	push	0
	mov	edx, DWORD PTR $T2[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ; D2D1::HwndRenderTargetProperties
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T3[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T3[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T3[ebp+12], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??I?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEPAPAUID2D1HwndRenderTarget@@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator&
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _props$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1Factory@@@1@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator->
	mov	ecx, eax
	call	?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z ; ID2D1Factory::CreateHwndRenderTarget
$LN23@Main_DP:
; Line 1821
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator->
	mov	DWORD PTR tv327[ebp], eax
	mov	eax, DWORD PTR tv327[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv327[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+192]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1823
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _rc$13[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rc$13[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rc$13[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rc$13[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAUID2D1HwndRenderTarget@@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator ID2D1HwndRenderTarget *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??B?$CComPtrBase@UIDWriteFactory@@@ATL@@QBEPAUIDWriteFactory@@XZ ; ATL::CComPtrBase<IDWriteFactory>::operator IDWriteFactory *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??B?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAUID2D1Factory@@XZ ; ATL::CComPtrBase<ID2D1Factory>::operator ID2D1Factory *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UtagRECT@@@Z ; COLORPICK::Paint
; Line 1824
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator->
	mov	DWORD PTR tv372[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR tv372[ebp]
	push	eax
	mov	ecx, DWORD PTR tv372[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+196]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1825
	mov	esi, esp
	lea	eax, DWORD PTR _ps$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1826
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN24@Main_DP:
; Line 1831
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??7?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@Main_DP
; Line 1832
	xor	eax, eax
	jmp	$LN1@Main_DP
$LN25@Main_DP:
; Line 1835
	mov	esi, esp
	lea	eax, DWORD PTR _rc$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _hh$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1837
	mov	eax, DWORD PTR _rc$8[ebp+8]
	mov	DWORD PTR _u$7[ebp], eax
; Line 1838
	mov	eax, DWORD PTR _rc$8[ebp+12]
	mov	DWORD PTR _u$7[ebp+4], eax
; Line 1839
	lea	eax, DWORD PTR _u$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator->
	mov	ecx, eax
	call	?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z ; ID2D1HwndRenderTarget::Resize
; Line 1840
	xor	eax, eax
	jmp	SHORT $LN1@Main_DP
$LN2@Main_DP:
; Line 1844
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+560]
	test	ecx, ecx
	je	SHORT $LN26@Main_DP
; Line 1845
	xor	eax, eax
	jmp	SHORT $LN1@Main_DP
$LN26@Main_DP:
; Line 1846
	mov	esi, esp
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mm$[ebp]
	push	edx
	mov	eax, DWORD PTR _hh$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Main_DP:
; Line 1847
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@Main_DP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 612				; 00000264H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN41@Main_DP:
	DD	9
	DD	$LN40@Main_DP
$LN40@Main_DP:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN31@Main_DP
	DD	-112					; ffffff90H
	DD	64					; 00000040H
	DD	$LN32@Main_DP
	DD	-136					; ffffff78H
	DD	16					; 00000010H
	DD	$LN33@Main_DP
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN34@Main_DP
	DD	-160					; ffffff60H
	DD	4
	DD	$LN35@Main_DP
	DD	-184					; ffffff48H
	DD	16					; 00000010H
	DD	$LN36@Main_DP
	DD	-220					; ffffff24H
	DD	28					; 0000001cH
	DD	$LN37@Main_DP
	DD	-244					; ffffff0cH
	DD	16					; 00000010H
	DD	$LN38@Main_DP
	DD	-260					; fffffefcH
	DD	8
	DD	$LN39@Main_DP
$LN39@Main_DP:
	DB	117					; 00000075H
	DB	0
$LN38@Main_DP:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN37@Main_DP:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN36@Main_DP:
	DB	104					; 00000068H
	DB	112					; 00000070H
	DB	0
$LN35@Main_DP:
	DB	100					; 00000064H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	89					; 00000059H
	DB	0
$LN34@Main_DP:
	DB	100					; 00000064H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	88					; 00000058H
	DB	0
$LN33@Main_DP:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN32@Main_DP:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN31@Main_DP:
	DB	112					; 00000070H
	DB	0
$LN30@Main_DP:
	DD	$LN13@Main_DP
	DD	$LN14@Main_DP
	DD	$LN17@Main_DP
	DD	$LN18@Main_DP
	DD	$LN15@Main_DP
	DD	$LN2@Main_DP
	DD	$LN2@Main_DP
	DD	$LN2@Main_DP
	DD	$LN2@Main_DP
	DD	$LN2@Main_DP
	DD	$LN16@Main_DP
?Main_DP@COLORPICK@@QAGJPAUHWND__@@IIJ@Z ENDP		; COLORPICK::Main_DP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QBEABV?$allocator@UPT@COLORPICK@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QBEABV?$allocator@UPT@COLORPICK@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1350
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1351
	mov	eax, DWORD PTR _this$[ebp]
; Line 1352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QBEABV?$allocator@UPT@COLORPICK@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAEAAV?$allocator@UPT@COLORPICK@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAEAAV?$allocator@UPT@COLORPICK@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1347
	mov	eax, DWORD PTR _this$[ebp]
; Line 1348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<COLORPICK::PT> >::_Vector_val<std::_Simple_types<COLORPICK::PT> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<COLORPICK::PT> >::_Vector_val<std::_Simple_types<COLORPICK::PT> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEABV?$allocator@UPT@COLORPICK@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEABV?$allocator@UPT@COLORPICK@@@2@XZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1736
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1737
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QBEABV?$allocator@UPT@COLORPICK@@@2@XZ ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first
; Line 1738
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEABV?$allocator@UPT@COLORPICK@@@2@XZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1732
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1733
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Get_first
; Line 1734
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEXPAUPT@COLORPICK@@0@Z
_TEXT	SEGMENT
__Pnextptr$1 = -48					; size = 4
__Pnext$ = -36						; size = 4
__Lock$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEXPAUPT@COLORPICK@@0@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Orphan_range, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1712
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1714
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1716
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx
$LN2@Orphan_ran:
; Line 1717
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_ran
; Line 1718
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextptr$1[ebp], edx
; Line 1719
	mov	eax, DWORD PTR __Pnextptr$1[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN6@Orphan_ran
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR __Pnextptr$1[ebp]
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:
; Line 1720
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx
; Line 1721
	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:
; Line 1722
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
; Line 1723
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN5@Orphan_ran:
; Line 1725
	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:
; Line 1730
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN11@Orphan_ran:
	DD	1
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@Orphan_ran
$LN9@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_range@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEXPAUPT@COLORPICK@@0@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlength@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@CAXXZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Xlength, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1704
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1705
	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlength:
; Line 1706
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlength@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@CAXXZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__Myend$ = -68						; size = 4
__Mylast$ = -56						; size = 4
__Myfirst$ = -44					; size = 4
__My_data$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Tidy, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1686
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1687
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1688
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 1689
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 1690
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax
; Line 1692
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1694
	mov	eax, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Tidy
; Line 1695
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy
; Line 1696
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 5
	push	edx
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::deallocate
; Line 1698
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1699
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1700
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@Tidy:
; Line 1702
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Change_array@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXQAUPT@COLORPICK@@II@Z
_TEXT	SEGMENT
__Myend$ = -56						; size = 4
__Mylast$ = -44						; size = 4
__Myfirst$ = -32					; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXQAUPT@COLORPICK@@II@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Change_array, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1667
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1669
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1670
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 1671
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 1672
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax
; Line 1674
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1676
	mov	eax, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Change_arr
; Line 1677
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy
; Line 1678
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 5
	push	edx
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::deallocate
$LN2@Change_arr:
; Line 1681
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1682
	mov	eax, DWORD PTR __Newsize$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR __Newvec$[ebp]
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1683
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR __Newvec$[ebp]
	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1684
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXQAUPT@COLORPICK@@II@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
__Geometric$ = -44					; size = 4
__Max$ = -32						; size = 4
__Oldcapacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEII@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Calculate_growth, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1615
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::capacity
	mov	DWORD PTR __Oldcapacity$[ebp], eax
; Line 1618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::max_size
	mov	DWORD PTR __Max$[ebp], eax
; Line 1620
	mov	eax, DWORD PTR __Oldcapacity$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Oldcapacity$[ebp], ecx
	jbe	SHORT $LN2@Calculate_
; Line 1621
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:
; Line 1624
	mov	eax, DWORD PTR __Oldcapacity$[ebp]
	shr	eax, 1
	add	eax, DWORD PTR __Oldcapacity$[ebp]
	mov	DWORD PTR __Geometric$[ebp], eax
; Line 1626
	mov	eax, DWORD PTR __Geometric$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@Calculate_
; Line 1627
	mov	eax, DWORD PTR __Newsize$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:
; Line 1630
	mov	eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:
; Line 1631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEII@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1611
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1612
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAXPAUPT@COLORPICK@@QAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ; std::_Destroy_range<std::allocator<COLORPICK::PT> >
	add	esp, 12					; 0000000cH
; Line 1613
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Umove_if_noexcept@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1605
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1607
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Umove_if_noexcept1@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00U?$integral_constant@_N$00@2@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept1
; Line 1609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Umove_if_noexcept1@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1595
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ; std::_Uninitialized_move<COLORPICK::PT *,std::allocator<COLORPICK::PT> >
	add	esp, 16					; 00000010H
; Line 1598
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Umove@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEPAUPT@COLORPICK@@PAU34@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEPAUPT@COLORPICK@@PAU34@00@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1592
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninitialized_move@PAUPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@YAPAUPT@COLORPICK@@QAU12@0PAU12@AAV?$allocator@UPT@COLORPICK@@@0@@Z ; std::_Uninitialized_move<COLORPICK::PT *,std::allocator<COLORPICK::PT> >
	add	esp, 16					; 00000010H
; Line 1593
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Umove@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEPAUPT@COLORPICK@@PAU34@00@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
?capacity@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::capacity, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1492
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1493
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1494
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 5
; Line 1495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::max_size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1487
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@ABEABV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAIABV?$allocator@UPT@COLORPICK@@@2@@Z ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 1490
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -220						; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
?empty@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBE_NXZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::empty, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1477
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1478
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1479
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv69[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv69[ebp]
; Line 1480
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBE_NXZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unchecked_end@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unchecked_end@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1469
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1470
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 1471
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked_end@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unchecked_begin@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unchecked_begin@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_begin, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1461
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1462
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 1463
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked_begin@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Mylast$ = -56						; size = 4
__Myfirst$ = -44					; size = 4
__My_data$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1383
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1384
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1385
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 1386
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 1388
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1389
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@0@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Destroy
; Line 1390
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 1391
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newcapacity$ = 8					; size = 4
?reserve@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::reserve, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1304
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1306
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::capacity
	cmp	DWORD PTR __Newcapacity$[ebp], eax
	jbe	SHORT $LN4@reserve
; Line 1307
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBEIXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::max_size
	cmp	DWORD PTR __Newcapacity$[ebp], eax
	jbe	SHORT $LN3@reserve
; Line 1308
	call	?_Xlength@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@CAXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Xlength
$LN3@reserve:
; Line 1311
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Reallocate_exactly
$LN4@reserve:
; Line 1313
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Newvec$ = -84						; size = 4
__Size$ = -72						; size = 4
__Mylast$ = -60						; size = 4
__Myfirst$ = -48					; size = 4
__My_data$ = -36					; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Reallocate_exactly, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 1251
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 1253
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 1254
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Myfirst$[ebp], eax
; Line 1255
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mylast$[ebp], eax
; Line 1257
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 5
	mov	DWORD PTR __Size$[ebp], edx
; Line 1259
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	mov	ecx, eax
	call	?allocate@?$allocator@UPT@COLORPICK@@@std@@QAEPAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax
; Line 1261
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1262
	mov	eax, DWORD PTR __Newvec$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Umove_if_noexcept@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXPAUPT@COLORPICK@@00@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Umove_if_noexcept
	jmp	SHORT $LN4@Reallocate
__catch$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z$0:
; Line 1264
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z ; std::allocator<COLORPICK::PT>::deallocate
; Line 1265
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1266
	mov	eax, $LN7@Reallocate
	ret	0
$LN4@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z$1
$LN7@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z$1:
; Line 1268
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_array@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXQAUPT@COLORPICK@@II@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Change_array
$LN3@Reallocate:
; Line 1269
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate_exactly@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXI@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Reallocate_exactly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXABUPT@COLORPICK@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXABUPT@COLORPICK@@@Z PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::push_back, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 716
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 717
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@ABUPT@COLORPICK@@@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@ABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::emplace_back<COLORPICK::PT const &>
; Line 718
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXABUPT@COLORPICK@@@Z ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -240						; size = 4
_$S16$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::~vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
; Line 673
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Tidy
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S16$[ebp]
	call	??$?0UPT@COLORPICK@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UPT@COLORPICK@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><COLORPICK::PT>
	lea	eax, DWORD PTR _$S16$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 676
	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 678
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@vector
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@vector:
	DD	1
	DD	$LN4@vector
$LN4@vector:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@vector
$LN3@vector:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	54					; 00000036H
	DB	0
??1?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::~vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ PROC ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; Line 445
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EACF1662_vector
	call	@__CheckForDebuggerJustMyCode@4
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@UPT@COLORPICK@@@std@@V?$_Vector_val@U?$_Simple_types@UPT@COLORPICK@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1>::_Compressed_pair<std::allocator<COLORPICK::PT>,std::_Vector_val<std::_Simple_types<COLORPICK::PT> >,1><>
; Line 446
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@AAEAAV?$allocator@UPT@COLORPICK@@@2@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0UPT@COLORPICK@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UPT@COLORPICK@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><COLORPICK::PT>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 447
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAE@XZ ENDP ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAIABV?$allocator@UPT@COLORPICK@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAIABV?$allocator@UPT@COLORPICK@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::max_size, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 709
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 710
	mov	eax, 134217727				; 07ffffffH
; Line 711
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPT@COLORPICK@@@std@@@std@@SAIABV?$allocator@UPT@COLORPICK@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<COLORPICK::PT> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@UPT@COLORPICK@@@std@@QAEPAUPT@COLORPICK@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UPT@COLORPICK@@@std@@QAEPAUPT@COLORPICK@@I@Z PROC ; std::allocator<COLORPICK::PT>::allocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 814
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0CA@@std@@YAII@Z	; std::_Get_size_of_n<32>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UPT@COLORPICK@@@std@@QAEPAUPT@COLORPICK@@I@Z ENDP ; std::allocator<COLORPICK::PT>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z PROC ; std::allocator<COLORPICK::PT>::deallocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 808
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 810
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 5
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 811
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UPT@COLORPICK@@@std@@QAEXQAUPT@COLORPICK@@I@Z ENDP ; std::allocator<COLORPICK::PT>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@UPT@COLORPICK@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@UPT@COLORPICK@@@std@@QAE@XZ PROC		; std::allocator<COLORPICK::PT>::allocator<COLORPICK::PT>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 802
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UPT@COLORPICK@@@std@@QAE@XZ ENDP		; std::allocator<COLORPICK::PT>::allocator<COLORPICK::PT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PT@COLORPICK@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PT@COLORPICK@@QAE@XZ PROC				; COLORPICK::PT::PT, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PT@COLORPICK@@QAE@XZ ENDP				; COLORPICK::PT::PT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z
_TEXT	SEGMENT
tv4836 = -4576						; size = 4
tv7067 = -4572						; size = 4
tv7065 = -4572						; size = 4
tv4828 = -4572						; size = 4
tv3375 = -4572						; size = 4
tv3359 = -4572						; size = 4
tv3185 = -4572						; size = 4
tv3169 = -4572						; size = 4
tv3095 = -4572						; size = 4
tv3079 = -4572						; size = 4
tv2888 = -4572						; size = 4
tv2872 = -4572						; size = 4
tv2762 = -4572						; size = 4
tv2746 = -4572						; size = 4
tv2614 = -4572						; size = 4
tv2598 = -4572						; size = 4
tv2370 = -4572						; size = 4
tv2354 = -4572						; size = 4
tv2009 = -4572						; size = 4
tv1993 = -4572						; size = 4
tv1809 = -4572						; size = 4
tv1793 = -4572						; size = 4
tv1570 = -4572						; size = 4
tv1554 = -4572						; size = 4
tv1370 = -4572						; size = 4
tv1354 = -4572						; size = 4
tv1137 = -4572						; size = 4
tv1121 = -4572						; size = 4
tv937 = -4572						; size = 4
tv921 = -4572						; size = 4
tv529 = -4572						; size = 4
$T2 = -4564						; size = 16
$T3 = -4540						; size = 16
$T4 = -4516						; size = 16
$T5 = -4492						; size = 8
$T6 = -4476						; size = 8
$T7 = -4460						; size = 8
$T8 = -4444						; size = 8
$T9 = -4428						; size = 8
$T10 = -4412						; size = 8
$T11 = -4396						; size = 16
$T12 = -4372						; size = 8
$T13 = -4356						; size = 8
$T14 = -4340						; size = 16
$T15 = -4316						; size = 16
$T16 = -4292						; size = 16
$T17 = -4268						; size = 8
$T18 = -4252						; size = 8
$T19 = -4236						; size = 8
$T20 = -4220						; size = 8
$T21 = -4204						; size = 8
$T22 = -4188						; size = 8
$T23 = -4172						; size = 16
$T24 = -4148						; size = 8
$T25 = -4132						; size = 8
$T26 = -4116						; size = 16
$T27 = -4092						; size = 16
$T28 = -4068						; size = 16
$T29 = -4044						; size = 16
$T30 = -4020						; size = 8
$T31 = -4004						; size = 8
$T32 = -3988						; size = 16
$T33 = -3961						; size = 1
$T34 = -3952						; size = 16
$T35 = -3928						; size = 8
$T36 = -3912						; size = 8
$T37 = -3896						; size = 16
$T38 = -3872						; size = 16
$T39 = -3848						; size = 16
$T40 = -3824						; size = 16
$T41 = -3800						; size = 8
$T42 = -3784						; size = 8
$T43 = -3768						; size = 16
$T44 = -3744						; size = 16
$T45 = -3720						; size = 16
$T46 = -3696						; size = 16
$T47 = -3672						; size = 8
$T48 = -3656						; size = 8
$T49 = -3640						; size = 16
$T50 = -3616						; size = 16
$T51 = -3592						; size = 16
$T52 = -3568						; size = 16
$T53 = -3544						; size = 8
$T54 = -3528						; size = 8
$T55 = -3512						; size = 16
$T56 = -3488						; size = 16
$T57 = -3464						; size = 16
$T58 = -3440						; size = 16
$T59 = -3416						; size = 16
$T60 = -3392						; size = 16
$T61 = -3368						; size = 16
$T62 = -3344						; size = 16
_r2$ = -1976						; size = 16
_t$ = -1952						; size = 200
_b2$ = -1744						; size = 4
_m2$63 = -1732						; size = 4
_m1$64 = -1720						; size = 4
_r2$65 = -1708						; size = 24
_r1$66 = -1676						; size = 24
_r2$67 = -1644						; size = 24
_r1$68 = -1612						; size = 24
_h2$69 = -1580						; size = 4
_he$70 = -1568						; size = 4
_r2$71 = -1556						; size = 16
_h2$72 = -1532						; size = 4
_he$73 = -1520						; size = 4
_h2$74 = -1508						; size = 4
_he$75 = -1496						; size = 4
_h2$76 = -1484						; size = 4
_he$77 = -1472						; size = 4
_hsl$ = -1460						; size = 12
_rgb$ = -1440						; size = 12
_r2$78 = -1420						; size = 16
_r2$79 = -1396						; size = 16
_rgb$80 = -1372						; size = 12
_hsl$81 = -1352						; size = 12
_i$82 = -1332						; size = 4
_gst$83 = -1320						; size = 16
_r2$84 = -1296						; size = 16
_r2$85 = -1272						; size = 16
_rgb3$86 = -1248					; size = 12
_rgb2$87 = -1228					; size = 12
_hsl2$88 = -1208					; size = 12
_r2$89 = -1188						; size = 16
_r2$90 = -1164						; size = 16
_rgb3$91 = -1140					; size = 12
_rgb2$92 = -1120					; size = 12
_hsl2$93 = -1100					; size = 12
_gradientStops$ = -1080					; size = 40
_pGradientStops$ = -1032				; size = 4
_lbr$ = -1020						; size = 4
_pt$94 = -1008						; size = 32
_r3$95 = -968						; size = 16
_p2$96 = -944						; size = 8
_nY$97 = -928						; size = 4
_nX$98 = -916						; size = 4
_xPoint$99 = -904					; size = 4
_hue2$100 = -892					; size = 4
_col$101 = -880						; size = 16
_rgb$102 = -856						; size = 12
_hsl$103 = -836						; size = 12
_H$104 = -816						; size = 4
_S$105 = -804						; size = 4
_sat$106 = -792						; size = 4
_hue$107 = -780						; size = 4
_Radius$108 = -768					; size = 4
_r2$109 = -756						; size = 24
_pt$110 = -724						; size = 32
_cc$111 = -684						; size = 16
_r$112 = -660						; size = 16
_y$113 = -636						; size = 4
_x$114 = -624						; size = 4
_ItemH$115 = -612					; size = 4
_ItemW$116 = -600					; size = 4
_ni$117 = -588						; size = 4
_col$118 = -576						; size = 468
_Y$119 = -100						; size = 4
_X$120 = -88						; size = 4
_Center$ = -76						; size = 8
_br$ = -60						; size = 4
_white$ = -48						; size = 4
_black$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_WriteFa$ = 12						; size = 4
_p$ = 16						; size = 4
_rc$ = 20						; size = 16
?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z PROC ; COLORPICK::Paint, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 824
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 4564				; 000011d4H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-4576]
	mov	ecx, 1141				; 00000475H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 825
	mov	eax, DWORD PTR _WriteFa$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBrushes@COLORPICK@@QAEXPAUIDWriteFactory@@@Z ; COLORPICK::CreateBrushes
; Line 826
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 280				; 00000118H
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rc$[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 827
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+284]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+284], xmm0
; Line 828
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+280]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+280], xmm0
; Line 829
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+292]
	subss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+292], xmm0
; Line 830
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+292]
	subss	xmm0, DWORD PTR [ecx+284]
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+280]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+288], xmm0
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 280				; 00000118H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+308]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+308], xmm0
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+288]
	addss	xmm0, DWORD PTR __real@41200000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+296], xmm0
; Line 836
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+296]
	addss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+304], xmm0
; Line 838
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 839
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+304]
	addss	xmm0, DWORD PTR __real@41200000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+312], xmm0
; Line 840
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+312]
	addss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+320], xmm0
; Line 842
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 843
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+320]
	addss	xmm0, DWORD PTR __real@41200000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+328], xmm0
; Line 844
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+328]
	addss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+336], xmm0
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 344				; 00000158H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 847
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+352]
	addss	xmm0, DWORD PTR __real@41200000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+344], xmm0
; Line 848
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+344]
	addss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+352], xmm0
; Line 850
	push	4
	lea	ecx, DWORD PTR _black$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z
	xorps	xmm0, xmm0
	movss	DWORD PTR $T62[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T62[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T62[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T62[ebp+12], xmm0
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR $T62[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T62[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T62[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T62[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _black$[ebp]
	push	ecx
	call	?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z ; COLORPICK::GetD2SolidBrush
	add	esp, 24					; 00000018H
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 851
	push	4
	lea	ecx, DWORD PTR _white$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T61[ebp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T61[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T61[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T61[ebp+12], xmm0
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR $T61[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T61[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T61[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T61[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _white$[ebp]
	push	ecx
	call	?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z ; COLORPICK::GetD2SolidBrush
	add	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 852
	push	4
	lea	ecx, DWORD PTR _br$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T60[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T60[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T60[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T60[ebp+12], xmm0
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR $T60[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T60[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T60[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T60[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _br$[ebp]
	push	ecx
	call	?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z ; COLORPICK::GetD2SolidBrush
	add	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 857
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+288]
	subss	xmm0, DWORD PTR [ecx+280]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+280]
	movss	DWORD PTR _Center$[ebp], xmm0
; Line 858
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+292]
	subss	xmm0, DWORD PTR [ecx+284]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+284]
	movss	DWORD PTR _Center$[ebp+4], xmm0
; Line 859
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?empty@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QBE_NXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::empty
	movzx	eax, al
	test	eax, eax
	je	$LN9@Paint
; Line 861
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	$LN18@Paint
; Line 864
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+188]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 865
	push	1000000					; 000f4240H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?reserve@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::reserve
; Line 866
	mov	DWORD PTR _X$120[ebp], 9
; Line 867
	mov	DWORD PTR _Y$119[ebp], 13		; 0000000dH
; Line 870
	mov	DWORD PTR _col$118[ebp], 51		; 00000033H
; Line 871
	mov	DWORD PTR _col$118[ebp+4], 6451		; 00001933H
; Line 872
	mov	DWORD PTR _col$118[ebp+8], 13107	; 00003333H
; Line 873
	mov	DWORD PTR _col$118[ebp+12], 13081	; 00003319H
; Line 874
	mov	DWORD PTR _col$118[ebp+16], 13056	; 00003300H
; Line 875
	mov	DWORD PTR _col$118[ebp+20], 1651456	; 00193300H
; Line 876
	mov	DWORD PTR _col$118[ebp+24], 3355392	; 00333300H
; Line 877
	mov	DWORD PTR _col$118[ebp+28], 3348736	; 00331900H
; Line 878
	mov	DWORD PTR _col$118[ebp+32], 3342336	; 00330000H
; Line 879
	mov	DWORD PTR _col$118[ebp+36], 3342361	; 00330019H
; Line 880
	mov	DWORD PTR _col$118[ebp+40], 3342387	; 00330033H
; Line 881
	mov	DWORD PTR _col$118[ebp+44], 1638451	; 00190033H
; Line 882
	mov	DWORD PTR _col$118[ebp+48], 0
; Line 884
	mov	DWORD PTR _col$118[ebp+52], 102		; 00000066H
; Line 885
	mov	DWORD PTR _col$118[ebp+56], 13158	; 00003366H
; Line 886
	mov	DWORD PTR _col$118[ebp+60], 26214	; 00006666H
; Line 887
	mov	DWORD PTR _col$118[ebp+64], 26163	; 00006633H
; Line 888
	mov	DWORD PTR _col$118[ebp+68], 26112	; 00006600H
; Line 889
	mov	DWORD PTR _col$118[ebp+72], 3368448	; 00336600H
; Line 890
	mov	DWORD PTR _col$118[ebp+76], 6710784	; 00666600H
; Line 891
	mov	DWORD PTR _col$118[ebp+80], 6697728	; 00663300H
; Line 892
	mov	DWORD PTR _col$118[ebp+84], 6684672	; 00660000H
; Line 893
	mov	DWORD PTR _col$118[ebp+88], 6684723	; 00660033H
; Line 894
	mov	DWORD PTR _col$118[ebp+92], 6684774	; 00660066H
; Line 895
	mov	DWORD PTR _col$118[ebp+96], 3342438	; 00330066H
; Line 896
	mov	DWORD PTR _col$118[ebp+100], 2105376	; 00202020H
; Line 898
	mov	DWORD PTR _col$118[ebp+104], 153	; 00000099H
; Line 899
	mov	DWORD PTR _col$118[ebp+108], 19609	; 00004c99H
; Line 900
	mov	DWORD PTR _col$118[ebp+112], 39321	; 00009999H
; Line 901
	mov	DWORD PTR _col$118[ebp+116], 39244	; 0000994cH
; Line 902
	mov	DWORD PTR _col$118[ebp+120], 39168	; 00009900H
; Line 903
	mov	DWORD PTR _col$118[ebp+124], 5019904	; 004c9900H
; Line 904
	mov	DWORD PTR _col$118[ebp+128], 10066176	; 00999900H
; Line 905
	mov	DWORD PTR _col$118[ebp+132], 10046464	; 00994c00H
; Line 906
	mov	DWORD PTR _col$118[ebp+136], 10027008	; 00990000H
; Line 907
	mov	DWORD PTR _col$118[ebp+140], 10027084	; 0099004cH
; Line 908
	mov	DWORD PTR _col$118[ebp+144], 10027161	; 00990099H
; Line 909
	mov	DWORD PTR _col$118[ebp+148], 4980889	; 004c0099H
; Line 910
	mov	DWORD PTR _col$118[ebp+152], 4210752	; 00404040H
; Line 912
	mov	DWORD PTR _col$118[ebp+156], 204	; 000000ccH
; Line 913
	mov	DWORD PTR _col$118[ebp+160], 26316	; 000066ccH
; Line 914
	mov	DWORD PTR _col$118[ebp+164], 52428	; 0000ccccH
; Line 915
	mov	DWORD PTR _col$118[ebp+168], 52326	; 0000cc66H
; Line 916
	mov	DWORD PTR _col$118[ebp+172], 52224	; 0000cc00H
; Line 917
	mov	DWORD PTR _col$118[ebp+176], 6736896	; 0066cc00H
; Line 918
	mov	DWORD PTR _col$118[ebp+180], 13421568	; 00cccc00H
; Line 919
	mov	DWORD PTR _col$118[ebp+184], 13395456	; 00cc6600H
; Line 920
	mov	DWORD PTR _col$118[ebp+188], 13369344	; 00cc0000H
; Line 921
	mov	DWORD PTR _col$118[ebp+192], 13369446	; 00cc0066H
; Line 922
	mov	DWORD PTR _col$118[ebp+196], 13369548	; 00cc00ccH
; Line 923
	mov	DWORD PTR _col$118[ebp+200], 6684876	; 006600ccH
; Line 924
	mov	DWORD PTR _col$118[ebp+204], 6316128	; 00606060H
; Line 926
	mov	DWORD PTR _col$118[ebp+208], 255	; 000000ffH
; Line 927
	mov	DWORD PTR _col$118[ebp+212], 33023	; 000080ffH
; Line 928
	mov	DWORD PTR _col$118[ebp+216], 65535	; 0000ffffH
; Line 929
	mov	DWORD PTR _col$118[ebp+220], 65408	; 0000ff80H
; Line 930
	mov	DWORD PTR _col$118[ebp+224], 65280	; 0000ff00H
; Line 931
	mov	DWORD PTR _col$118[ebp+228], 8453888	; 0080ff00H
; Line 932
	mov	DWORD PTR _col$118[ebp+232], 16776960	; 00ffff00H
; Line 933
	mov	DWORD PTR _col$118[ebp+236], 16744448	; 00ff8000H
; Line 934
	mov	DWORD PTR _col$118[ebp+240], 16711680	; 00ff0000H
; Line 935
	mov	DWORD PTR _col$118[ebp+244], 16711808	; 00ff0080H
; Line 936
	mov	DWORD PTR _col$118[ebp+248], 16711935	; 00ff00ffH
; Line 937
	mov	DWORD PTR _col$118[ebp+252], 8388863	; 008000ffH
; Line 938
	mov	DWORD PTR _col$118[ebp+256], 8421504	; 00808080H
; Line 941
	mov	DWORD PTR _col$118[ebp+260], 3355647	; 003333ffH
; Line 942
	mov	DWORD PTR _col$118[ebp+264], 3381759	; 003399ffH
; Line 943
	mov	DWORD PTR _col$118[ebp+268], 3407871	; 0033ffffH
; Line 944
	mov	DWORD PTR _col$118[ebp+272], 3407769	; 0033ff99H
; Line 945
	mov	DWORD PTR _col$118[ebp+276], 3407667	; 0033ff33H
; Line 946
	mov	DWORD PTR _col$118[ebp+280], 10092339	; 0099ff33H
; Line 947
	mov	DWORD PTR _col$118[ebp+284], 16777011	; 00ffff33H
; Line 948
	mov	DWORD PTR _col$118[ebp+288], 16750899	; 00ff9933H
; Line 949
	mov	DWORD PTR _col$118[ebp+292], 16724787	; 00ff3333H
; Line 950
	mov	DWORD PTR _col$118[ebp+296], 16724889	; 00ff3399H
; Line 951
	mov	DWORD PTR _col$118[ebp+300], 16724991	; 00ff33ffH
; Line 952
	mov	DWORD PTR _col$118[ebp+304], 10040319	; 009933ffH
; Line 953
	mov	DWORD PTR _col$118[ebp+308], 10526880	; 00a0a0a0H
; Line 956
	mov	DWORD PTR _col$118[ebp+312], 6711039	; 006666ffH
; Line 957
	mov	DWORD PTR _col$118[ebp+316], 6730495	; 0066b2ffH
; Line 958
	mov	DWORD PTR _col$118[ebp+320], 6750207	; 0066ffffH
; Line 959
	mov	DWORD PTR _col$118[ebp+324], 6750130	; 0066ffb2H
; Line 960
	mov	DWORD PTR _col$118[ebp+328], 6750054	; 0066ff66H
; Line 961
	mov	DWORD PTR _col$118[ebp+332], 11730790	; 00b2ff66H
; Line 962
	mov	DWORD PTR _col$118[ebp+336], 16777062	; 00ffff66H
; Line 963
	mov	DWORD PTR _col$118[ebp+340], 16757350	; 00ffb266H
; Line 964
	mov	DWORD PTR _col$118[ebp+344], 16737894	; 00ff6666H
; Line 965
	mov	DWORD PTR _col$118[ebp+348], 16737970	; 00ff66b2H
; Line 966
	mov	DWORD PTR _col$118[ebp+352], 16738047	; 00ff66ffH
; Line 967
	mov	DWORD PTR _col$118[ebp+356], 11691775	; 00b266ffH
; Line 968
	mov	DWORD PTR _col$118[ebp+360], 12632256	; 00c0c0c0H
; Line 970
	mov	DWORD PTR _col$118[ebp+364], 10066431	; 009999ffH
; Line 971
	mov	DWORD PTR _col$118[ebp+368], 10079487	; 0099ccffH
; Line 972
	mov	DWORD PTR _col$118[ebp+372], 10092543	; 0099ffffH
; Line 973
	mov	DWORD PTR _col$118[ebp+376], 10092492	; 0099ffccH
; Line 974
	mov	DWORD PTR _col$118[ebp+380], 10092441	; 0099ff99H
; Line 975
	mov	DWORD PTR _col$118[ebp+384], 13434777	; 00ccff99H
; Line 976
	mov	DWORD PTR _col$118[ebp+388], 16777113	; 00ffff99H
; Line 977
	mov	DWORD PTR _col$118[ebp+392], 16764057	; 00ffcc99H
; Line 978
	mov	DWORD PTR _col$118[ebp+396], 16751001	; 00ff9999H
; Line 979
	mov	DWORD PTR _col$118[ebp+400], 16751052	; 00ff99ccH
; Line 980
	mov	DWORD PTR _col$118[ebp+404], 16751103	; 00ff99ffH
; Line 981
	mov	DWORD PTR _col$118[ebp+408], 13408767	; 00cc99ffH
; Line 982
	mov	DWORD PTR _col$118[ebp+412], 14737632	; 00e0e0e0H
; Line 985
	mov	DWORD PTR _col$118[ebp+416], 13421823	; 00ccccffH
; Line 986
	mov	DWORD PTR _col$118[ebp+420], 13428223	; 00cce5ffH
; Line 987
	mov	DWORD PTR _col$118[ebp+424], 13434879	; 00ccffffH
; Line 988
	mov	DWORD PTR _col$118[ebp+428], 13434853	; 00ccffe5H
; Line 989
	mov	DWORD PTR _col$118[ebp+432], 13434828	; 00ccffccH
; Line 990
	mov	DWORD PTR _col$118[ebp+436], 15073228	; 00e5ffccH
; Line 991
	mov	DWORD PTR _col$118[ebp+440], 16777164	; 00ffffccH
; Line 992
	mov	DWORD PTR _col$118[ebp+444], 16770508	; 00ffe5ccH
; Line 993
	mov	DWORD PTR _col$118[ebp+448], 16764108	; 00ffccccH
; Line 994
	mov	DWORD PTR _col$118[ebp+452], 16764133	; 00ffcce5H
; Line 995
	mov	DWORD PTR _col$118[ebp+456], 16764159	; 00ffccffH
; Line 996
	mov	DWORD PTR _col$118[ebp+460], 15060223	; 00e5ccffH
; Line 997
	mov	DWORD PTR _col$118[ebp+464], 16777215	; 00ffffffH
; Line 1001
	mov	DWORD PTR _ni$117[ebp], 0
; Line 1003
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+288]
	subss	xmm0, DWORD PTR [ecx+280]
	cvtsi2ss xmm1, DWORD PTR _Y$119[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _ItemW$116[ebp], xmm0
; Line 1004
	movss	xmm0, DWORD PTR _ItemW$116[ebp]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _ItemW$116[ebp], xmm0
; Line 1005
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+292]
	subss	xmm0, DWORD PTR [ecx+284]
	cvtsi2ss xmm1, DWORD PTR _X$120[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _ItemH$115[ebp], xmm0
; Line 1006
	movss	xmm0, DWORD PTR _ItemH$115[ebp]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _ItemH$115[ebp], xmm0
; Line 1007
	mov	DWORD PTR _x$114[ebp], 0
	jmp	SHORT $LN4@Paint
$LN2@Paint:
	mov	eax, DWORD PTR _x$114[ebp]
	add	eax, 1
	mov	DWORD PTR _x$114[ebp], eax
$LN4@Paint:
	mov	eax, DWORD PTR _x$114[ebp]
	cmp	eax, DWORD PTR _X$120[ebp]
	jge	$LN3@Paint
; Line 1009
	mov	DWORD PTR _y$113[ebp], 0
	jmp	SHORT $LN7@Paint
$LN5@Paint:
	mov	eax, DWORD PTR _y$113[ebp]
	add	eax, 1
	mov	DWORD PTR _y$113[ebp], eax
$LN7@Paint:
	mov	eax, DWORD PTR _y$113[ebp]
	cmp	eax, DWORD PTR _Y$119[ebp]
	jge	$LN6@Paint
; Line 1011
	xor	eax, eax
	mov	DWORD PTR _r$112[ebp], eax
	mov	DWORD PTR _r$112[ebp+4], eax
	mov	DWORD PTR _r$112[ebp+8], eax
	mov	DWORD PTR _r$112[ebp+12], eax
; Line 1012
	cvtsi2ss xmm0, DWORD PTR _y$113[ebp]
	mulss	xmm0, DWORD PTR _ItemW$116[ebp]
	addss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR _r$112[ebp], xmm0
; Line 1013
	movss	xmm0, DWORD PTR _r$112[ebp]
	addss	xmm0, DWORD PTR _ItemW$116[ebp]
	subss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r$112[ebp+8], xmm0
; Line 1014
	cvtsi2ss xmm0, DWORD PTR _x$114[ebp]
	mulss	xmm0, DWORD PTR _ItemH$115[ebp]
	addss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR _r$112[ebp+4], xmm0
; Line 1015
	movss	xmm0, DWORD PTR _r$112[ebp+4]
	addss	xmm0, DWORD PTR _ItemH$115[ebp]
	subss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r$112[ebp+12], xmm0
; Line 1017
	mov	eax, DWORD PTR _ni$117[ebp]
	mov	ecx, DWORD PTR _col$118[ebp+eax*4]
	mov	DWORD PTR tv529[ebp], ecx
	mov	edx, DWORD PTR _ni$117[ebp]
	add	edx, 1
	mov	DWORD PTR _ni$117[ebp], edx
	push	0
	mov	eax, DWORD PTR tv529[ebp]
	push	eax
	lea	ecx, DWORD PTR $T58[ebp]
	push	ecx
	call	?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z ; COLORPICK::FromRGB
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T59[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T59[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T59[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR $T59[ebp+12], eax
	mov	ecx, DWORD PTR $T59[ebp]
	mov	DWORD PTR _cc$111[ebp], ecx
	mov	edx, DWORD PTR $T59[ebp+4]
	mov	DWORD PTR _cc$111[ebp+4], edx
	mov	eax, DWORD PTR $T59[ebp+8]
	mov	DWORD PTR _cc$111[ebp+8], eax
	mov	ecx, DWORD PTR $T59[ebp+12]
	mov	DWORD PTR _cc$111[ebp+12], ecx
; Line 1018
	lea	eax, DWORD PTR _cc$111[ebp]
	push	eax
	lea	ecx, DWORD PTR _br$[ebp]
	call	??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
	mov	ecx, eax
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 1019
	lea	ecx, DWORD PTR _br$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r$112[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1021
	lea	ecx, DWORD PTR _pt$110[ebp]
	call	??0PT@COLORPICK@@QAE@XZ
; Line 1022
	mov	eax, DWORD PTR _r$112[ebp]
	mov	DWORD PTR _pt$110[ebp], eax
	mov	ecx, DWORD PTR _r$112[ebp+4]
	mov	DWORD PTR _pt$110[ebp+4], ecx
	mov	edx, DWORD PTR _r$112[ebp+8]
	mov	DWORD PTR _pt$110[ebp+8], edx
	mov	eax, DWORD PTR _r$112[ebp+12]
	mov	DWORD PTR _pt$110[ebp+12], eax
; Line 1023
	mov	eax, DWORD PTR _cc$111[ebp]
	mov	DWORD PTR _pt$110[ebp+16], eax
	mov	ecx, DWORD PTR _cc$111[ebp+4]
	mov	DWORD PTR _pt$110[ebp+20], ecx
	mov	edx, DWORD PTR _cc$111[ebp+8]
	mov	DWORD PTR _pt$110[ebp+24], edx
	mov	eax, DWORD PTR _cc$111[ebp+12]
	mov	DWORD PTR _pt$110[ebp+28], eax
; Line 1024
	lea	eax, DWORD PTR _pt$110[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?push_back@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::push_back
; Line 1026
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r$112[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
; Line 1028
	jmp	$LN5@Paint
$LN6@Paint:
; Line 1029
	jmp	$LN2@Paint
$LN3@Paint:
; Line 1031
	jmp	$LN9@Paint
$LN18@Paint:
; Line 1034
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+188]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1035
	push	1000000					; 000f4240H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?reserve@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXI@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::reserve
; Line 1036
	mov	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _r2$109[ebp], eax
	mov	ecx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR _r2$109[ebp+4], ecx
	mov	edx, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR _r2$109[ebp+8], edx
	mov	eax, DWORD PTR _rc$[ebp+12]
	mov	DWORD PTR _r2$109[ebp+12], eax
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r2$109[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r2$109[ebp+20], xmm0
; Line 1037
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$109[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRoundedRectangle
; Line 1039
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+288]
	subss	xmm0, DWORD PTR [ecx+280]
	divss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _Radius$108[ebp], xmm0
; Line 1041
	xorps	xmm0, xmm0
	movss	DWORD PTR _hue$107[ebp], xmm0
	jmp	SHORT $LN10@Paint
$LN8@Paint:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _hue$107[ebp]
	addss	xmm0, DWORD PTR [eax+564]
	movss	DWORD PTR _hue$107[ebp], xmm0
$LN10@Paint:
	movss	xmm0, DWORD PTR __real@43b40000
	comiss	xmm0, DWORD PTR _hue$107[ebp]
	jbe	$LN9@Paint
; Line 1043
	mov	DWORD PTR _sat$106[ebp], 0
	jmp	SHORT $LN13@Paint
$LN11@Paint:
	mov	eax, DWORD PTR _sat$106[ebp]
	add	eax, 1
	mov	DWORD PTR _sat$106[ebp], eax
$LN13@Paint:
	cvttss2si eax, DWORD PTR _Radius$108[ebp]
	cmp	DWORD PTR _sat$106[ebp], eax
	jge	$LN12@Paint
; Line 1046
	cvtsi2ss xmm0, DWORD PTR _sat$106[ebp]
	divss	xmm0, DWORD PTR _Radius$108[ebp]
	movss	DWORD PTR _S$105[ebp], xmm0
; Line 1048
	movss	xmm0, DWORD PTR _hue$107[ebp]
	mulss	xmm0, DWORD PTR __real@40c00000
	divss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR _H$104[ebp], xmm0
; Line 1050
	movss	xmm0, DWORD PTR _H$104[ebp]
	movss	DWORD PTR _hsl$103[ebp], xmm0
	movss	xmm0, DWORD PTR _S$105[ebp]
	movss	DWORD PTR _hsl$103[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+528]
	movss	DWORD PTR _hsl$103[ebp+8], xmm0
; Line 1051
	xor	eax, eax
	mov	DWORD PTR _rgb$102[ebp], eax
	mov	DWORD PTR _rgb$102[ebp+4], eax
	mov	DWORD PTR _rgb$102[ebp+8], eax
; Line 1052
	lea	eax, DWORD PTR _rgb$102[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl$103[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 1054
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb$102[ebp+ecx]
	movss	DWORD PTR _col$101[ebp], xmm0
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _rgb$102[ebp+eax]
	movss	DWORD PTR _col$101[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb$102[ebp+eax]
	movss	DWORD PTR _col$101[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _col$101[ebp+12], xmm0
; Line 1055
	lea	eax, DWORD PTR _col$101[ebp]
	push	eax
	lea	ecx, DWORD PTR _br$[ebp]
	call	??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
	mov	ecx, eax
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 1059
	movss	xmm0, DWORD PTR __real@40c90e56
	mulss	xmm0, DWORD PTR _hue$107[ebp]
	divss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR _hue2$100[ebp], xmm0
; Line 1060
	cvtsi2ss xmm0, DWORD PTR _sat$106[ebp]
	movss	DWORD PTR _xPoint$99[ebp], xmm0
; Line 1061
	push	ecx
	movss	xmm0, DWORD PTR _hue2$100[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv4828[ebp]
	movss	xmm0, DWORD PTR tv4828[ebp]
	mulss	xmm0, DWORD PTR _xPoint$99[ebp]
	movss	DWORD PTR _nX$98[ebp], xmm0
; Line 1062
	movss	xmm0, DWORD PTR _xPoint$99[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	xmm1, DWORD PTR _hue2$100[ebp]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv7065[ebp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv4836[ebp]
	movss	xmm0, DWORD PTR tv7065[ebp]
	mulss	xmm0, DWORD PTR tv4836[ebp]
	movss	DWORD PTR _nY$97[ebp], xmm0
; Line 1067
	movss	xmm0, DWORD PTR _nX$98[ebp]
	movss	DWORD PTR _p2$96[ebp], xmm0
	movss	xmm0, DWORD PTR _nY$97[ebp]
	movss	DWORD PTR _p2$96[ebp+4], xmm0
; Line 1068
	movss	xmm0, DWORD PTR _p2$96[ebp]
	addss	xmm0, DWORD PTR _Center$[ebp]
	movss	DWORD PTR _p2$96[ebp], xmm0
; Line 1069
	movss	xmm0, DWORD PTR _p2$96[ebp+4]
	addss	xmm0, DWORD PTR _Center$[ebp+4]
	movss	DWORD PTR _p2$96[ebp+4], xmm0
; Line 1071
	xor	eax, eax
	mov	DWORD PTR _r3$95[ebp], eax
	mov	DWORD PTR _r3$95[ebp+4], eax
	mov	DWORD PTR _r3$95[ebp+8], eax
	mov	DWORD PTR _r3$95[ebp+12], eax
; Line 1072
	movss	xmm0, DWORD PTR _p2$96[ebp]
	movss	DWORD PTR _r3$95[ebp], xmm0
; Line 1073
	movss	xmm0, DWORD PTR _p2$96[ebp+4]
	movss	DWORD PTR _r3$95[ebp+4], xmm0
; Line 1074
	movss	xmm0, DWORD PTR _p2$96[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _r3$95[ebp+8], xmm0
; Line 1075
	movss	xmm0, DWORD PTR _p2$96[ebp+4]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _r3$95[ebp+12], xmm0
; Line 1076
	lea	ecx, DWORD PTR _br$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r3$95[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1078
	lea	ecx, DWORD PTR _pt$94[ebp]
	call	??0PT@COLORPICK@@QAE@XZ
; Line 1079
	movss	xmm0, DWORD PTR _p2$96[ebp]
	movss	DWORD PTR _pt$94[ebp], xmm0
; Line 1080
	movss	xmm0, DWORD PTR _p2$96[ebp+4]
	movss	DWORD PTR _pt$94[ebp+4], xmm0
; Line 1081
	movss	xmm0, DWORD PTR _pt$94[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _pt$94[ebp+8], xmm0
; Line 1082
	movss	xmm0, DWORD PTR _pt$94[ebp+4]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _pt$94[ebp+12], xmm0
; Line 1083
	mov	eax, DWORD PTR _col$101[ebp]
	mov	DWORD PTR _pt$94[ebp+16], eax
	mov	ecx, DWORD PTR _col$101[ebp+4]
	mov	DWORD PTR _pt$94[ebp+20], ecx
	mov	edx, DWORD PTR _col$101[ebp+8]
	mov	DWORD PTR _pt$94[ebp+24], edx
	mov	eax, DWORD PTR _col$101[ebp+12]
	mov	DWORD PTR _pt$94[ebp+28], eax
; Line 1084
	lea	eax, DWORD PTR _pt$94[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?push_back@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXABUPT@COLORPICK@@@Z ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::push_back
; Line 1085
	jmp	$LN11@Paint
$LN12@Paint:
; Line 1087
	jmp	$LN8@Paint
$LN9@Paint:
; Line 1092
	push	4
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEXI@Z
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??0?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ ; ATL::CComPtr<ID2D1LinearGradientBrush>::CComPtr<ID2D1LinearGradientBrush>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1093
	push	4
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEXI@Z
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??0?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@PAUID2D1GradientStopCollection@@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::CComPtr<ID2D1GradientStopCollection>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1099
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 0
	jne	$LN20@Paint
; Line 1101
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1102
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1103
	xor	eax, eax
	mov	DWORD PTR _hsl2$93[ebp], eax
	mov	DWORD PTR _hsl2$93[ebp+4], eax
	mov	DWORD PTR _hsl2$93[ebp+8], eax
; Line 1104
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb2$92[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb2$92[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb2$92[ebp+8], xmm0
; Line 1105
	lea	eax, DWORD PTR _hsl2$93[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb2$92[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 1106
	mov	eax, 4
	shl	eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _hsl2$93[ebp+eax], xmm0
; Line 1107
	lea	eax, DWORD PTR _rgb2$92[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$93[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 1108
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb2$92[ebp+ecx]
	movss	DWORD PTR $T57[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb2$92[ebp+edx]
	movss	DWORD PTR $T57[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb2$92[ebp+eax]
	movss	DWORD PTR $T57[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T57[ebp+12], xmm0
	mov	ecx, 20					; 00000014H
	shl	ecx, 0
	lea	edx, DWORD PTR _gradientStops$[ebp+ecx+4]
	mov	eax, DWORD PTR $T57[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T57[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T57[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T57[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1109
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _gradientStops$[ebp+ecx], xmm0
; Line 1111
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb3$91[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb3$91[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb3$91[ebp+8], xmm0
; Line 1112
	lea	eax, DWORD PTR _hsl2$93[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb3$91[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 1113
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _hsl2$93[ebp+eax], xmm0
; Line 1114
	lea	eax, DWORD PTR _rgb3$91[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$93[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 1115
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb3$91[ebp+ecx]
	movss	DWORD PTR $T56[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb3$91[ebp+edx]
	movss	DWORD PTR $T56[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb3$91[ebp+eax]
	movss	DWORD PTR $T56[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T56[ebp+12], xmm0
	mov	ecx, 20					; 00000014H
	imul	edx, ecx, 0
	lea	eax, DWORD PTR _gradientStops$[ebp+edx+4]
	mov	ecx, DWORD PTR $T56[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T56[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T56[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T56[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 1116
	mov	eax, 20					; 00000014H
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _gradientStops$[ebp+eax], xmm0
; Line 1119
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	2
	lea	eax, DWORD PTR _gradientStops$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1126
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+324]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+320]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T54[ebp], eax
	mov	DWORD PTR $T54[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+316]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+312]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T53[ebp], eax
	mov	DWORD PTR $T53[ebp+4], edx
	lea	ecx, DWORD PTR $T54[ebp]
	push	ecx
	lea	edx, DWORD PTR $T53[ebp]
	push	edx
	lea	eax, DWORD PTR $T52[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T55[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T55[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T55[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T55[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T55[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1133
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1136
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv921[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv921[ebp]
	push	eax
	mov	ecx, DWORD PTR tv921[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1137
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv937[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv937[ebp]
	push	eax
	mov	ecx, DWORD PTR tv937[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1138
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$90[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$90[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$90[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$90[ebp+12], edx
; Line 1139
	movss	xmm0, DWORD PTR _r2$90[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$90[ebp+4], xmm0
; Line 1140
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+316]
	movss	DWORD PTR _r2$90[ebp+12], xmm0
; Line 1141
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$90[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1142
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$90[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13HADIAKP@?$AAS@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1143
	jmp	$LN21@Paint
$LN20@Paint:
; Line 1146
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1148
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1149
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1150
	xorps	xmm0, xmm0
	movss	DWORD PTR $T51[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T51[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T51[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T51[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _gradientStops$[ebp+ecx+4]
	mov	eax, DWORD PTR $T51[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T51[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T51[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T51[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1151
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _gradientStops$[ebp+ecx], xmm0
; Line 1152
	xorps	xmm0, xmm0
	movss	DWORD PTR $T50[ebp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T50[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T50[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T50[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	shl	eax, 0
	lea	ecx, DWORD PTR _gradientStops$[ebp+eax+4]
	mov	edx, DWORD PTR $T50[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T50[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T50[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T50[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1153
	mov	eax, 20					; 00000014H
	shl	eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _gradientStops$[ebp+eax], xmm0
; Line 1154
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	2
	lea	eax, DWORD PTR _gradientStops$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1161
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+324]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+320]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T48[ebp], eax
	mov	DWORD PTR $T48[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+316]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+312]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T47[ebp], eax
	mov	DWORD PTR $T47[ebp+4], edx
	lea	ecx, DWORD PTR $T48[ebp]
	push	ecx
	lea	edx, DWORD PTR $T47[ebp]
	push	edx
	lea	eax, DWORD PTR $T46[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T49[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T49[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T49[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T49[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T49[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1169
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1172
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1121[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1121[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1121[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1173
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1137[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1137[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1137[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1174
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$89[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$89[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$89[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$89[ebp+12], edx
; Line 1175
	movss	xmm0, DWORD PTR _r2$89[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$89[ebp+4], xmm0
; Line 1176
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+316]
	movss	DWORD PTR _r2$89[ebp+12], xmm0
; Line 1177
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$89[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1178
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$89[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13NIHIEAGH@?$AAG@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
$LN21@Paint:
; Line 1182
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 0
	jne	$LN22@Paint
; Line 1184
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1185
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1186
	xor	eax, eax
	mov	DWORD PTR _hsl2$88[ebp], eax
	mov	DWORD PTR _hsl2$88[ebp+4], eax
	mov	DWORD PTR _hsl2$88[ebp+8], eax
; Line 1187
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb2$87[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb2$87[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb2$87[ebp+8], xmm0
; Line 1188
	lea	eax, DWORD PTR _hsl2$88[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb2$87[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 1189
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+528]
	mov	DWORD PTR _hsl2$88[ebp+eax], edx
; Line 1190
	lea	eax, DWORD PTR _rgb2$87[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$88[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 1191
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb2$87[ebp+ecx]
	movss	DWORD PTR $T45[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb2$87[ebp+edx]
	movss	DWORD PTR $T45[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb2$87[ebp+eax]
	movss	DWORD PTR $T45[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T45[ebp+12], xmm0
	mov	ecx, 20					; 00000014H
	shl	ecx, 0
	lea	edx, DWORD PTR _gradientStops$[ebp+ecx+4]
	mov	eax, DWORD PTR $T45[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T45[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T45[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T45[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1192
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _gradientStops$[ebp+ecx], xmm0
; Line 1194
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb3$86[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb3$86[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb3$86[ebp+8], xmm0
; Line 1195
	lea	eax, DWORD PTR _hsl2$88[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb3$86[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 1196
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _hsl2$88[ebp+eax], xmm0
; Line 1197
	lea	eax, DWORD PTR _rgb3$86[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$88[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 1198
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb3$86[ebp+ecx]
	movss	DWORD PTR $T44[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb3$86[ebp+edx]
	movss	DWORD PTR $T44[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb3$86[ebp+eax]
	movss	DWORD PTR $T44[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T44[ebp+12], xmm0
	mov	ecx, 20					; 00000014H
	imul	edx, ecx, 0
	lea	eax, DWORD PTR _gradientStops$[ebp+edx+4]
	mov	ecx, DWORD PTR $T44[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T44[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T44[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T44[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 1199
	mov	eax, 20					; 00000014H
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _gradientStops$[ebp+eax], xmm0
; Line 1202
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	2
	lea	eax, DWORD PTR _gradientStops$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+340]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+336]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T42[ebp], eax
	mov	DWORD PTR $T42[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+332]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+328]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T41[ebp], eax
	mov	DWORD PTR $T41[ebp+4], edx
	lea	ecx, DWORD PTR $T42[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41[ebp]
	push	edx
	lea	eax, DWORD PTR $T40[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T43[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T43[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T43[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T43[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T43[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1216
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1219
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1354[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1354[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1354[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1220
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1370[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1370[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1370[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1221
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$85[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$85[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$85[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$85[ebp+12], edx
; Line 1222
	movss	xmm0, DWORD PTR _r2$85[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$85[ebp+4], xmm0
; Line 1223
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+332]
	movss	DWORD PTR _r2$85[ebp+12], xmm0
; Line 1224
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$85[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1225
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$85[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13PHJMHGG@?$AAL@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1226
	jmp	$LN23@Paint
$LN22@Paint:
; Line 1229
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1231
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1232
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1233
	xorps	xmm0, xmm0
	movss	DWORD PTR $T39[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T39[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T39[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T39[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _gradientStops$[ebp+ecx+4]
	mov	eax, DWORD PTR $T39[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T39[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T39[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T39[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1234
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _gradientStops$[ebp+ecx], xmm0
; Line 1235
	xorps	xmm0, xmm0
	movss	DWORD PTR $T38[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T38[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T38[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T38[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	shl	eax, 0
	lea	ecx, DWORD PTR _gradientStops$[ebp+eax+4]
	mov	edx, DWORD PTR $T38[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T38[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T38[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T38[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1236
	mov	eax, 20					; 00000014H
	shl	eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _gradientStops$[ebp+eax], xmm0
; Line 1237
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	2
	lea	eax, DWORD PTR _gradientStops$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1244
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+340]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+336]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T36[ebp], eax
	mov	DWORD PTR $T36[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+332]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+328]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T35[ebp], eax
	mov	DWORD PTR $T35[ebp+4], edx
	lea	ecx, DWORD PTR $T36[ebp]
	push	ecx
	lea	edx, DWORD PTR $T35[ebp]
	push	edx
	lea	eax, DWORD PTR $T34[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T37[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T37[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T37[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T37[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T37[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1252
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1255
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1554[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1554[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1554[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1256
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1570[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1570[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1570[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1257
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$84[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$84[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$84[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$84[ebp+12], edx
; Line 1258
	movss	xmm0, DWORD PTR _r2$84[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$84[ebp+4], xmm0
; Line 1259
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+332]
	movss	DWORD PTR _r2$84[ebp+12], xmm0
; Line 1260
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$84[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1261
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$84[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13OPKGLAFF@?$AAB@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
$LN23@Paint:
; Line 1265
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 0
	jne	$LN24@Paint
; Line 1268
	push	16					; 00000010H
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	?__autoclassinit2@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEXI@Z
	lea	ecx, DWORD PTR $T33[ebp]
	call	??0?$allocator@UD2D1_GRADIENT_STOP@@@std@@QAE@XZ ; std::allocator<D2D1_GRADIENT_STOP>::allocator<D2D1_GRADIENT_STOP>
	push	eax
	push	360					; 00000168H
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	??0?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@IABV?$allocator@UD2D1_GRADIENT_STOP@@@1@@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1269
	mov	DWORD PTR _i$82[ebp], 0
	jmp	SHORT $LN16@Paint
$LN14@Paint:
	mov	eax, DWORD PTR _i$82[ebp]
	add	eax, 1
	mov	DWORD PTR _i$82[ebp], eax
$LN16@Paint:
	cmp	DWORD PTR _i$82[ebp], 360		; 00000168H
	jge	$LN15@Paint
; Line 1271
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _hsl$81[ebp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _hsl$81[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+528]
	movss	DWORD PTR _hsl$81[ebp+8], xmm0
; Line 1272
	mov	eax, 360				; 00000168H
	sub	eax, DWORD PTR _i$82[ebp]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@43b40000
	mov	ecx, 4
	imul	edx, ecx, 0
	movss	DWORD PTR _hsl$81[ebp+edx], xmm0
; Line 1273
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl$81[ebp+ecx]
	mulss	xmm0, DWORD PTR __real@40c00000
	mov	edx, 4
	imul	eax, edx, 0
	movss	DWORD PTR _hsl$81[ebp+eax], xmm0
; Line 1274
	xor	eax, eax
	mov	DWORD PTR _rgb$80[ebp], eax
	mov	DWORD PTR _rgb$80[ebp+4], eax
	mov	DWORD PTR _rgb$80[ebp+8], eax
; Line 1275
	lea	eax, DWORD PTR _rgb$80[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl$81[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 1276
	cvtsi2ss xmm0, DWORD PTR _i$82[ebp]
	divss	xmm0, DWORD PTR __real@43b40000
	mov	eax, DWORD PTR _i$82[ebp]
	push	eax
	lea	ecx, DWORD PTR _gst$83[ebp]
	movss	DWORD PTR tv7067[ebp], xmm0
	call	??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
	movss	xmm0, DWORD PTR tv7067[ebp]
	movss	DWORD PTR [eax], xmm0
; Line 1277
	mov	eax, 4
	imul	esi, eax, 0
	mov	ecx, DWORD PTR _i$82[ebp]
	push	ecx
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
	mov	edx, DWORD PTR _rgb$80[ebp+esi]
	mov	DWORD PTR [eax+4], edx
; Line 1278
	mov	esi, 4
	shl	esi, 0
	mov	eax, DWORD PTR _i$82[ebp]
	push	eax
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
	mov	ecx, DWORD PTR _rgb$80[ebp+esi]
	mov	DWORD PTR [eax+8], ecx
; Line 1279
	mov	esi, 4
	shl	esi, 1
	mov	eax, DWORD PTR _i$82[ebp]
	push	eax
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
	mov	ecx, DWORD PTR _rgb$80[ebp+esi]
	mov	DWORD PTR [eax+12], ecx
; Line 1280
	mov	eax, DWORD PTR _i$82[ebp]
	push	eax
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	??A?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEAAUD2D1_GRADIENT_STOP@@I@Z ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::operator[]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+16], xmm0
; Line 1283
	jmp	$LN14@Paint
$LN15@Paint:
; Line 1284
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1285
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1286
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	360					; 00000168H
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	?data@?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAEPAUD2D1_GRADIENT_STOP@@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::data
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1293
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+340]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+336]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T31[ebp], eax
	mov	DWORD PTR $T31[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+332]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+328]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T30[ebp], eax
	mov	DWORD PTR $T30[ebp+4], edx
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T32[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T32[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T32[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T32[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1301
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1793[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1793[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1793[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1809[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1809[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1809[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1306
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$79[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$79[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$79[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$79[ebp+12], edx
; Line 1307
	movss	xmm0, DWORD PTR _r2$79[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$79[ebp+4], xmm0
; Line 1308
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+300]
	movss	DWORD PTR _r2$79[ebp+12], xmm0
; Line 1309
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$79[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1310
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$79[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13IABLFADB@?$AAH@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1311
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _gst$83[ebp]
	call	??1?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::~vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
	jmp	$LN25@Paint
$LN24@Paint:
; Line 1314
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1317
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1318
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1319
	xorps	xmm0, xmm0
	movss	DWORD PTR $T28[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T28[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T28[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T28[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _gradientStops$[ebp+ecx+4]
	mov	eax, DWORD PTR $T28[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T28[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T28[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T28[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1320
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _gradientStops$[ebp+ecx], xmm0
; Line 1321
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T27[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T27[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T27[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T27[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	shl	eax, 0
	lea	ecx, DWORD PTR _gradientStops$[ebp+eax+4]
	mov	edx, DWORD PTR $T27[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T27[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T27[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T27[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1322
	mov	eax, 20					; 00000014H
	shl	eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _gradientStops$[ebp+eax], xmm0
; Line 1323
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	2
	lea	eax, DWORD PTR _gradientStops$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1330
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+340]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+336]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T25[ebp], eax
	mov	DWORD PTR $T25[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+332]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+328]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR $T24[ebp+4], edx
	lea	ecx, DWORD PTR $T25[ebp]
	push	ecx
	lea	edx, DWORD PTR $T24[ebp]
	push	edx
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T26[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T26[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T26[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T26[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1338
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1341
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv1993[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv1993[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1993[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1342
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2009[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2009[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2009[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$78[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$78[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$78[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$78[ebp+12], edx
; Line 1344
	movss	xmm0, DWORD PTR _r2$78[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$78[ebp+4], xmm0
; Line 1345
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+300]
	movss	DWORD PTR _r2$78[ebp+12], xmm0
; Line 1346
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$78[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1347
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$78[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13LPLPOHMK@?$AAR@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
$LN25@Paint:
; Line 1352
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb$[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb$[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb$[ebp+8], xmm0
; Line 1353
	xor	eax, eax
	mov	DWORD PTR _hsl$[ebp], eax
	mov	DWORD PTR _hsl$[ebp+4], eax
	mov	DWORD PTR _hsl$[ebp+8], eax
; Line 1354
	lea	eax, DWORD PTR _hsl$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 1356
	mov	eax, 1
	test	eax, eax
	je	$LN26@Paint
; Line 1359
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+340]
	subss	xmm0, DWORD PTR [ecx+332]
	movss	DWORD PTR _he$77[ebp], xmm0
; Line 1362
	xorps	xmm0, xmm0
	movss	DWORD PTR _h2$76[ebp], xmm0
; Line 1363
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN27@Paint
; Line 1364
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR [eax+400]
	mulss	xmm0, DWORD PTR _he$77[ebp]
	movss	DWORD PTR _h2$76[ebp], xmm0
	jmp	SHORT $LN28@Paint
$LN27@Paint:
; Line 1366
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _hsl$[ebp+eax]
	mulss	xmm0, DWORD PTR _he$77[ebp]
	movss	DWORD PTR _h2$76[ebp], xmm0
$LN28@Paint:
; Line 1367
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _h2$76[ebp]
	addss	xmm0, DWORD PTR [eax+332]
	movss	DWORD PTR _h2$76[ebp], xmm0
; Line 1368
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+336]
	addss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T22[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$76[ebp]
	movss	DWORD PTR $T22[ebp+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+328]
	subss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T21[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$76[ebp]
	movss	DWORD PTR $T21[ebp+4], xmm0
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	edx, DWORD PTR $T22[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T22[ebp]
	push	eax
	mov	ecx, DWORD PTR $T21[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T21[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@Paint:
; Line 1371
	mov	eax, 1
	test	eax, eax
	je	$LN29@Paint
; Line 1374
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+324]
	subss	xmm0, DWORD PTR [ecx+316]
	movss	DWORD PTR _he$75[ebp], xmm0
; Line 1377
	xorps	xmm0, xmm0
	movss	DWORD PTR _h2$74[ebp], xmm0
; Line 1378
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN30@Paint
; Line 1379
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR [eax+396]
	mulss	xmm0, DWORD PTR _he$75[ebp]
	movss	DWORD PTR _h2$74[ebp], xmm0
	jmp	SHORT $LN31@Paint
$LN30@Paint:
; Line 1381
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _hsl$[ebp+eax]
	mulss	xmm0, DWORD PTR _he$75[ebp]
	movss	DWORD PTR _h2$74[ebp], xmm0
$LN31@Paint:
; Line 1382
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _h2$74[ebp]
	addss	xmm0, DWORD PTR [eax+316]
	movss	DWORD PTR _h2$74[ebp], xmm0
; Line 1383
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+320]
	addss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T20[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$74[ebp]
	movss	DWORD PTR $T20[ebp+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+312]
	subss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T19[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$74[ebp]
	movss	DWORD PTR $T19[ebp+4], xmm0
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	edx, DWORD PTR $T20[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	mov	ecx, DWORD PTR $T19[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T19[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN29@Paint:
; Line 1386
	mov	eax, 1
	test	eax, eax
	je	$LN32@Paint
; Line 1389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+308]
	subss	xmm0, DWORD PTR [ecx+300]
	movss	DWORD PTR _he$73[ebp], xmm0
; Line 1392
	xorps	xmm0, xmm0
	movss	DWORD PTR _h2$72[ebp], xmm0
; Line 1393
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN33@Paint
; Line 1394
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR [eax+392]
	mulss	xmm0, DWORD PTR _he$73[ebp]
	movss	DWORD PTR _h2$72[ebp], xmm0
	jmp	SHORT $LN34@Paint
$LN33@Paint:
; Line 1396
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl$[ebp+ecx]
	divss	xmm0, DWORD PTR __real@40c00000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _he$73[ebp]
	movss	DWORD PTR _h2$72[ebp], xmm1
$LN34@Paint:
; Line 1397
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _h2$72[ebp]
	addss	xmm0, DWORD PTR [eax+316]
	movss	DWORD PTR _h2$72[ebp], xmm0
; Line 1398
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+304]
	addss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T18[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$72[ebp]
	movss	DWORD PTR $T18[ebp+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+296]
	subss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T17[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$72[ebp]
	movss	DWORD PTR $T17[ebp+4], xmm0
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	edx, DWORD PTR $T18[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T18[ebp]
	push	eax
	mov	ecx, DWORD PTR $T17[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T17[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@Paint:
; Line 1401
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+552]
	test	ecx, ecx
	je	$LN35@Paint
; Line 1403
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1406
	push	0
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??4?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAEPAUID2D1LinearGradientBrush@@PAU2@@Z ; ATL::CComPtr<ID2D1LinearGradientBrush>::operator=
; Line 1407
	push	0
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??4?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAEPAUID2D1GradientStopCollection@@PAU2@@Z ; ATL::CComPtr<ID2D1GradientStopCollection>::operator=
; Line 1408
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR $T16[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+396]
	movss	DWORD PTR $T16[ebp+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+400]
	movss	DWORD PTR $T16[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T16[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _gradientStops$[ebp+ecx+4]
	mov	eax, DWORD PTR $T16[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T16[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T16[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T16[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1409
	mov	eax, 20					; 00000014H
	imul	ecx, eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _gradientStops$[ebp+ecx], xmm0
; Line 1410
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR $T15[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+396]
	movss	DWORD PTR $T15[ebp+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+400]
	movss	DWORD PTR $T15[ebp+8], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T15[ebp+12], xmm0
	mov	eax, 20					; 00000014H
	shl	eax, 0
	lea	ecx, DWORD PTR _gradientStops$[ebp+eax+4]
	mov	edx, DWORD PTR $T15[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T15[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T15[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T15[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1411
	mov	eax, 20					; 00000014H
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _gradientStops$[ebp+eax], xmm0
; Line 1414
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??I?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QAEPAPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator&
	mov	esi, esp
	push	eax
	push	0
	push	0
	push	2
	lea	eax, DWORD PTR _gradientStops$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1421
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+340]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+336]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR $T13[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+332]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+328]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR $T12[ebp+4], edx
	lea	ecx, DWORD PTR $T13[ebp]
	push	ecx
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ; D2D1::LinearGradientBrushProperties
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T14[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T14[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T14[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T14[ebp+12], edx
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??I?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QAEPAPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator&
	push	eax
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??B?$CComPtrBase@UID2D1GradientStopCollection@@@ATL@@QBEPAUID2D1GradientStopCollection@@XZ ; ATL::CComPtrBase<ID2D1GradientStopCollection>::operator ID2D1GradientStopCollection *
	push	eax
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ; ID2D1RenderTarget::CreateLinearGradientBrush
; Line 1429
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??B?$CComPtrBase@UID2D1LinearGradientBrush@@@ATL@@QBEPAUID2D1LinearGradientBrush@@XZ ; ATL::CComPtrBase<ID2D1LinearGradientBrush>::operator ID2D1LinearGradientBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1432
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2354[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2354[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2354[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1433
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2370[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2370[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2370[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1434
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$71[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$71[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$71[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$71[ebp+12], edx
; Line 1435
	movss	xmm0, DWORD PTR _r2$71[ebp+4]
	subss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR _r2$71[ebp+4], xmm0
; Line 1436
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+348]
	movss	DWORD PTR _r2$71[ebp+12], xmm0
; Line 1437
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$71[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1438
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$71[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13PNBDBPLL@?$AAA@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
$LN35@Paint:
; Line 1441
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+552]
	test	ecx, ecx
	je	$LN36@Paint
; Line 1444
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+356]
	subss	xmm0, DWORD PTR [ecx+348]
	movss	DWORD PTR _he$70[ebp], xmm0
; Line 1445
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR [eax+404]
	mulss	xmm0, DWORD PTR _he$70[ebp]
	movss	DWORD PTR _h2$69[ebp], xmm0
; Line 1446
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _h2$69[ebp]
	addss	xmm0, DWORD PTR [eax+348]
	movss	DWORD PTR _h2$69[ebp], xmm0
; Line 1447
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+352]
	addss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T10[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$69[ebp]
	movss	DWORD PTR $T10[ebp+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+344]
	subss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T9[ebp], xmm0
	movss	xmm0, DWORD PTR _h2$69[ebp]
	movss	DWORD PTR $T9[ebp+4], xmm0
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	edx, DWORD PTR $T10[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, DWORD PTR $T9[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T9[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@Paint:
; Line 1451
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 360				; 00000168H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1452
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [eax+368], edx
; Line 1453
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+324]
	addss	xmm0, DWORD PTR __real@41200000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+364], xmm0
; Line 1454
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+324]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+372], xmm0
; Line 1455
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	DWORD PTR [eax+384], edx
; Line 1457
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+340]
	addss	xmm0, DWORD PTR __real@41200000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+380], xmm0
; Line 1458
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+340]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+388], xmm0
; Line 1459
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1460
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1461
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 0
	jne	$LN37@Paint
; Line 1463
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r1$68[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r1$68[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r1$68[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r1$68[ebp+12], edx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r1$68[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r1$68[ebp+20], xmm0
; Line 1464
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$67[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$67[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$67[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$67[ebp+12], edx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r2$67[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r2$67[ebp+20], xmm0
; Line 1465
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r1$68[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1466
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$67[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRoundedRectangle
; Line 1467
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2598[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2598[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2598[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1468
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2614[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2614[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2614[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1469
	push	0
	push	0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	3
	push	OFFSET ??_C@_17DLHNGEBC@?$AAH?$AAS?$AAL@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1470
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	3
	push	OFFSET ??_C@_17KOJOHOEP@?$AAR?$AAG?$AAB@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1471
	jmp	$LN38@Paint
$LN37@Paint:
; Line 1474
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r1$66[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r1$66[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r1$66[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r1$66[ebp+12], edx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r1$66[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r1$66[ebp+20], xmm0
; Line 1475
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$65[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$65[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$65[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$65[ebp+12], edx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r2$65[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _r2$65[ebp+20], xmm0
; Line 1476
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r1$66[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1477
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$65[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRoundedRectangle
; Line 1478
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2746[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2746[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2746[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1479
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2762[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2762[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2762[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1480
	push	0
	push	0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	3
	push	OFFSET ??_C@_17KOJOHOEP@?$AAR?$AAG?$AAB@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1481
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	3
	push	OFFSET ??_C@_17DLHNGEBC@?$AAH?$AAS?$AAL@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
$LN38@Paint:
; Line 1486
	mov	eax, 1
	test	eax, eax
	je	$LN40@Paint
; Line 1488
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+500], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+496], xmm0
; Line 1489
	movss	xmm0, DWORD PTR _rc$[ebp]
	addss	xmm0, DWORD PTR __real@41700000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+480], xmm0
; Line 1490
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+480]
	addss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+488], xmm0
; Line 1491
	movss	xmm0, DWORD PTR _rc$[ebp+12]
	subss	xmm0, DWORD PTR __real@42480000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+484], xmm0
; Line 1492
	movss	xmm0, DWORD PTR _rc$[ebp+12]
	subss	xmm0, DWORD PTR __real@41f00000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+492], xmm0
; Line 1493
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+562]
	test	ecx, ecx
	je	$LN40@Paint
; Line 1495
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 480				; 000001e0H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2872[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2872[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2872[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv2888[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv2888[ebp]
	push	eax
	mov	ecx, DWORD PTR tv2888[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1498
	push	0
	push	0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 480				; 000001e0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	1
	push	OFFSET ??_C@_13HADIAKP@?$AAS@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
$LN40@Paint:
; Line 1503
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+563]
	test	ecx, ecx
	je	$LN41@Paint
; Line 1505
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 480				; 000001e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 504				; 000001f8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
; Line 1506
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+504]
	addss	xmm0, DWORD PTR __real@41c80000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+504], xmm0
; Line 1507
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+504]
	addss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+512], xmm0
; Line 1508
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 504				; 000001f8H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+516]
	subss	xmm0, DWORD PTR [ecx+508]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+508]
	movss	DWORD PTR _m1$64[ebp], xmm0
; Line 1510
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+512]
	subss	xmm0, DWORD PTR [ecx+504]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+504]
	movss	DWORD PTR _m2$63[ebp], xmm0
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+512]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR $T8[ebp], xmm0
	movss	xmm0, DWORD PTR _m1$64[ebp]
	movss	DWORD PTR $T8[ebp+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+504]
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR $T7[ebp], xmm0
	movss	xmm0, DWORD PTR _m1$64[ebp]
	movss	DWORD PTR $T7[ebp+4], xmm0
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	edx, DWORD PTR $T8[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR $T7[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1514
	movss	xmm0, DWORD PTR _m2$63[ebp]
	movss	DWORD PTR $T6[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+516]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR $T6[ebp+4], xmm0
	movss	xmm0, DWORD PTR _m2$63[ebp]
	movss	DWORD PTR $T5[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+508]
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR $T5[ebp+4], xmm0
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	edx, DWORD PTR $T6[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR $T5[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN41@Paint:
; Line 1520
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+452], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+448], xmm0
; Line 1521
	movss	xmm0, DWORD PTR _rc$[ebp+8]
	subss	xmm0, DWORD PTR __real@437a0000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+432], xmm0
; Line 1522
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+432]
	addss	xmm0, DWORD PTR __real@42c80000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+440], xmm0
; Line 1523
	movss	xmm0, DWORD PTR _rc$[ebp+12]
	subss	xmm0, DWORD PTR __real@42480000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+436], xmm0
; Line 1524
	movss	xmm0, DWORD PTR _rc$[ebp+12]
	subss	xmm0, DWORD PTR __real@41a00000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+444], xmm0
; Line 1527
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1528
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv3079[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv3079[ebp]
	push	eax
	mov	ecx, DWORD PTR tv3079[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1529
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv3095[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv3095[ebp]
	push	eax
	mov	ecx, DWORD PTR tv3095[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1530
	push	0
	push	0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	2
	push	OFFSET ??_C@_15PMCGDJNJ@?$AAO?$AAK@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1533
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
; Line 1534
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+456]
	addss	xmm0, DWORD PTR __real@42e60000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+456], xmm0
; Line 1535
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+464]
	addss	xmm0, DWORD PTR __real@42e60000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+464], xmm0
; Line 1538
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1539
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv3169[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv3169[ebp]
	push	eax
	mov	ecx, DWORD PTR tv3169[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1540
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv3185[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv3185[ebp]
	push	eax
	mov	ecx, DWORD PTR tv3185[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1541
	push	0
	push	0
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	push	6
	push	OFFSET ??_C@_1O@BBGMCBMK@?$AAC?$AAA?$AAN?$AAC?$AAE?$AAL@
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1544
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
; Line 1545
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+464]
	mov	DWORD PTR [eax+416], edx
; Line 1546
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+412]
	subss	xmm0, DWORD PTR __real@42c80000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+412], xmm0
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+420]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+420], xmm0
; Line 1549
	push	4
	lea	ecx, DWORD PTR _b2$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	edx, DWORD PTR _b2$[ebp]
	push	edx
	call	?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z ; COLORPICK::GetD2SolidBrush
	add	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1550
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 408				; 00000198H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1551
	lea	ecx, DWORD PTR _b2$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 408				; 00000198H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRoundedRectangle
; Line 1554
	push	200					; 000000c8H
	push	0
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1555
	xor	eax, eax
	mov	DWORD PTR _r2$[ebp], eax
	mov	DWORD PTR _r2$[ebp+4], eax
	mov	DWORD PTR _r2$[ebp+8], eax
	mov	DWORD PTR _r2$[ebp+12], eax
; Line 1558
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	mov	DWORD PTR [eax+56], edx
; Line 1559
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+464]
	mov	DWORD PTR [eax+64], edx
; Line 1560
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	mov	DWORD PTR [eax+60], edx
; Line 1561
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+60]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+68], xmm0
; Line 1562
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1563
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv3359[ebp], eax
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR tv3359[ebp]
	push	eax
	mov	ecx, DWORD PTR tv3359[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1564
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
	mov	DWORD PTR tv3375[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv3375[ebp]
	push	eax
	mov	ecx, DWORD PTR tv3375[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1565
	push	OFFSET ??_C@_17MGDNIAJI@?$AAR?$AAE?$AAD@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1566
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1567
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+56]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+56], xmm0
; Line 1568
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1569
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
	push	100					; 00000064H
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1570
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1571
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+56]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+56], xmm0
; Line 1572
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$[ebp+12], edx
; Line 1573
	movss	xmm0, DWORD PTR _r2$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _r2$[ebp], xmm0
; Line 1574
	movss	xmm0, DWORD PTR _r2$[ebp+4]
	addss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r2$[ebp+4], xmm0
; Line 1575
	movss	xmm0, DWORD PTR _r2$[ebp+12]
	subss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r2$[ebp+12], xmm0
; Line 1576
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR $T4[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T4[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T4[ebp+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+532]
	movss	DWORD PTR $T4[ebp+12], xmm0
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	ecx, DWORD PTR _br$[ebp]
	call	??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
	mov	ecx, eax
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 1577
	lea	ecx, DWORD PTR _br$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1580
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1581
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+76]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+76], xmm0
; Line 1582
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+84]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+84], xmm0
; Line 1583
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1584
	push	OFFSET ??_C@_1M@DIBDEJMC@?$AAG?$AAR?$AAE?$AAE?$AAN@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1585
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1586
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0
; Line 1587
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1588
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
	push	100					; 00000064H
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1589
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1590
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0
; Line 1591
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$[ebp+12], edx
; Line 1592
	movss	xmm0, DWORD PTR _r2$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _r2$[ebp], xmm0
; Line 1593
	movss	xmm0, DWORD PTR _r2$[ebp+4]
	addss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r2$[ebp+4], xmm0
; Line 1594
	movss	xmm0, DWORD PTR _r2$[ebp+12]
	subss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r2$[ebp+12], xmm0
; Line 1595
	xorps	xmm0, xmm0
	movss	DWORD PTR $T3[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR $T3[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T3[ebp+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+532]
	movss	DWORD PTR $T3[ebp+12], xmm0
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	ecx, DWORD PTR _br$[ebp]
	call	??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
	mov	ecx, eax
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 1596
	lea	ecx, DWORD PTR _br$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1599
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1600
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+92]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+92], xmm0
; Line 1601
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+100]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+100], xmm0
; Line 1602
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1603
	push	OFFSET ??_C@_19IIBKGPN@?$AAB?$AAL?$AAU?$AAE@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1604
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1605
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+88]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+88], xmm0
; Line 1606
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1607
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
	push	100					; 00000064H
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1608
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1609
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+88]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+88], xmm0
; Line 1610
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r2$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r2$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _r2$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _r2$[ebp+12], edx
; Line 1611
	movss	xmm0, DWORD PTR _r2$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _r2$[ebp], xmm0
; Line 1612
	movss	xmm0, DWORD PTR _r2$[ebp+4]
	addss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r2$[ebp+4], xmm0
; Line 1613
	movss	xmm0, DWORD PTR _r2$[ebp+12]
	subss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _r2$[ebp+12], xmm0
; Line 1614
	xorps	xmm0, xmm0
	movss	DWORD PTR $T2[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T2[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR $T2[ebp+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+532]
	movss	DWORD PTR $T2[ebp+12], xmm0
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	ecx, DWORD PTR _br$[ebp]
	call	??C?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1SolidColorBrush@@@1@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator->
	mov	ecx, eax
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 1615
	lea	ecx, DWORD PTR _br$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _r2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1618
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1619
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+108]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+108], xmm0
; Line 1620
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+116]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+116], xmm0
; Line 1621
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1622
	push	OFFSET ??_C@_17JACMMIIF@?$AAH?$AAU?$AAE@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1623
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1624
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+104], xmm0
; Line 1625
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1626
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl$[ebp+ecx]
	divss	xmm0, DWORD PTR __real@40c00000
	mulss	xmm0, DWORD PTR __real@43b40000
	cvttss2si edx, xmm0
	push	edx
	push	OFFSET ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1627
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1628
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+104], xmm0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1631
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+124]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+124], xmm0
; Line 1632
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+132]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+132], xmm0
; Line 1633
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1634
	push	OFFSET ??_C@_17MBBPJFIP@?$AAS?$AAA?$AAT@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1635
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1636
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+120]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+120], xmm0
; Line 1637
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1638
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _hsl$[ebp+eax]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
	push	100					; 00000064H
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1639
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1640
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+120]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+120], xmm0
; Line 1642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1643
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+140]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+140], xmm0
; Line 1644
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+148]
	addss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+148], xmm0
; Line 1645
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1646
	push	OFFSET ??_C@_1M@FHNADEIL@?$AAL?$AAI?$AAG?$AAH?$AAT@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1647
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1648
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+136]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+136], xmm0
; Line 1649
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1650
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _hsl$[ebp+eax]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_15FPHCHCFA@?$AA?$CF?$AAi@
	push	100					; 00000064H
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1651
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1652
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+136]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+136], xmm0
; Line 1654
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+552]
	test	ecx, ecx
	je	$LN42@Paint
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1657
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+252]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+252], xmm0
; Line 1658
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+260]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+260], xmm0
; Line 1659
	lea	ecx, DWORD PTR _black$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 1660
	push	OFFSET ??_C@_1M@DOOPGBLO@?$AAA?$AAL?$AAP?$AAH?$AAA@
	push	100					; 00000064H
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 12					; 0000000cH
; Line 1661
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1662
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+248]
	addss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+248], xmm0
; Line 1663
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 248				; 000000f8H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 1664
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+532]
	mulss	xmm0, DWORD PTR __real@42c80000
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_19LKCICPAE@?$AA?$CF?$AAi?$AA?$CF?$AA?$CF@
	push	100					; 00000064H
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 1665
	push	0
	push	0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ; ID2D1RenderTarget::DrawTextW
; Line 1666
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+248]
	subss	xmm0, DWORD PTR __real@42480000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+248], xmm0
$LN42@Paint:
; Line 1668
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??B?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QBEPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator ID2D1SolidColorBrush *
	push	eax
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
; Line 1669
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _b2$[ebp]
	call	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	call	??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _lbr$[ebp]
	call	??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _br$[ebp]
	call	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _white$[ebp]
	call	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _black$[ebp]
	call	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN96@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4576				; 000011e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	3
$LN96@Paint:
	DD	43					; 0000002bH
	DD	$LN95@Paint
$LN95@Paint:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN51@Paint
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN52@Paint
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN53@Paint
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN54@Paint
	DD	-576					; fffffdc0H
	DD	468					; 000001d4H
	DD	$LN55@Paint
	DD	-660					; fffffd6cH
	DD	16					; 00000010H
	DD	$LN56@Paint
	DD	-684					; fffffd54H
	DD	16					; 00000010H
	DD	$LN57@Paint
	DD	-724					; fffffd2cH
	DD	32					; 00000020H
	DD	$LN58@Paint
	DD	-756					; fffffd0cH
	DD	24					; 00000018H
	DD	$LN59@Paint
	DD	-836					; fffffcbcH
	DD	12					; 0000000cH
	DD	$LN60@Paint
	DD	-856					; fffffca8H
	DD	12					; 0000000cH
	DD	$LN61@Paint
	DD	-880					; fffffc90H
	DD	16					; 00000010H
	DD	$LN62@Paint
	DD	-944					; fffffc50H
	DD	8
	DD	$LN63@Paint
	DD	-968					; fffffc38H
	DD	16					; 00000010H
	DD	$LN64@Paint
	DD	-1008					; fffffc10H
	DD	32					; 00000020H
	DD	$LN65@Paint
	DD	-1020					; fffffc04H
	DD	4
	DD	$LN66@Paint
	DD	-1032					; fffffbf8H
	DD	4
	DD	$LN67@Paint
	DD	-1080					; fffffbc8H
	DD	40					; 00000028H
	DD	$LN68@Paint
	DD	-1100					; fffffbb4H
	DD	12					; 0000000cH
	DD	$LN69@Paint
	DD	-1120					; fffffba0H
	DD	12					; 0000000cH
	DD	$LN70@Paint
	DD	-1140					; fffffb8cH
	DD	12					; 0000000cH
	DD	$LN71@Paint
	DD	-1164					; fffffb74H
	DD	16					; 00000010H
	DD	$LN72@Paint
	DD	-1188					; fffffb5cH
	DD	16					; 00000010H
	DD	$LN73@Paint
	DD	-1208					; fffffb48H
	DD	12					; 0000000cH
	DD	$LN74@Paint
	DD	-1228					; fffffb34H
	DD	12					; 0000000cH
	DD	$LN75@Paint
	DD	-1248					; fffffb20H
	DD	12					; 0000000cH
	DD	$LN76@Paint
	DD	-1272					; fffffb08H
	DD	16					; 00000010H
	DD	$LN77@Paint
	DD	-1296					; fffffaf0H
	DD	16					; 00000010H
	DD	$LN78@Paint
	DD	-1320					; fffffad8H
	DD	16					; 00000010H
	DD	$LN79@Paint
	DD	-1352					; fffffab8H
	DD	12					; 0000000cH
	DD	$LN80@Paint
	DD	-1372					; fffffaa4H
	DD	12					; 0000000cH
	DD	$LN81@Paint
	DD	-1396					; fffffa8cH
	DD	16					; 00000010H
	DD	$LN82@Paint
	DD	-1420					; fffffa74H
	DD	16					; 00000010H
	DD	$LN83@Paint
	DD	-1440					; fffffa60H
	DD	12					; 0000000cH
	DD	$LN84@Paint
	DD	-1460					; fffffa4cH
	DD	12					; 0000000cH
	DD	$LN85@Paint
	DD	-1556					; fffff9ecH
	DD	16					; 00000010H
	DD	$LN86@Paint
	DD	-1612					; fffff9b4H
	DD	24					; 00000018H
	DD	$LN87@Paint
	DD	-1644					; fffff994H
	DD	24					; 00000018H
	DD	$LN88@Paint
	DD	-1676					; fffff974H
	DD	24					; 00000018H
	DD	$LN89@Paint
	DD	-1708					; fffff954H
	DD	24					; 00000018H
	DD	$LN90@Paint
	DD	-1744					; fffff930H
	DD	4
	DD	$LN91@Paint
	DD	-1952					; fffff860H
	DD	200					; 000000c8H
	DD	$LN92@Paint
	DD	-1976					; fffff848H
	DD	16					; 00000010H
	DD	$LN93@Paint
$LN93@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN92@Paint:
	DB	116					; 00000074H
	DB	0
$LN91@Paint:
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN90@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN89@Paint:
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN88@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN87@Paint:
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN86@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN85@Paint:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	0
$LN84@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	0
$LN83@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN82@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN81@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	0
$LN80@Paint:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	0
$LN79@Paint:
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN78@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN77@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN76@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	51					; 00000033H
	DB	0
$LN75@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN74@Paint:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN73@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN72@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN71@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	51					; 00000033H
	DB	0
$LN70@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN69@Paint:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN68@Paint:
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN67@Paint:
	DB	112					; 00000070H
	DB	71					; 00000047H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN66@Paint:
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	0
$LN65@Paint:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN64@Paint:
	DB	114					; 00000072H
	DB	51					; 00000033H
	DB	0
$LN63@Paint:
	DB	112					; 00000070H
	DB	50					; 00000032H
	DB	0
$LN62@Paint:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$LN61@Paint:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	0
$LN60@Paint:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	0
$LN59@Paint:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN58@Paint:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN57@Paint:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	0
$LN56@Paint:
	DB	114					; 00000072H
	DB	0
$LN55@Paint:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$LN54@Paint:
	DB	67					; 00000043H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN53@Paint:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	0
$LN52@Paint:
	DB	119					; 00000077H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN51@Paint:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$0:
	lea	ecx, DWORD PTR _black$[ebp]
	jmp	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$1:
	lea	ecx, DWORD PTR _white$[ebp]
	jmp	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$2:
	lea	ecx, DWORD PTR _br$[ebp]
	jmp	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$3:
	lea	ecx, DWORD PTR _lbr$[ebp]
	jmp	??1?$CComPtr@UID2D1LinearGradientBrush@@@ATL@@QAE@XZ
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$4:
	lea	ecx, DWORD PTR _pGradientStops$[ebp]
	jmp	??1?$CComPtr@UID2D1GradientStopCollection@@@ATL@@QAE@XZ
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$5:
	lea	ecx, DWORD PTR _gst$83[ebp]
	jmp	??1?$vector@UD2D1_GRADIENT_STOP@@V?$allocator@UD2D1_GRADIENT_STOP@@@std@@@std@@QAE@XZ ; std::vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >::~vector<D2D1_GRADIENT_STOP,std::allocator<D2D1_GRADIENT_STOP> >
__unwindfunclet$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z$6:
	lea	ecx, DWORD PTR _b2$[ebp]
	jmp	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4580]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z ENDP ; COLORPICK::Paint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UtagRECT@@@Z
_TEXT	SEGMENT
_ff$ = -32						; size = 16
_this$ = -8						; size = 4
_fact$ = 8						; size = 4
_WriteFa$ = 12						; size = 4
_p$ = 16						; size = 4
_rc$ = 20						; size = 16
?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UtagRECT@@@Z PROC ; COLORPICK::Paint, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 815
	cvtsi2ss xmm0, DWORD PTR _rc$[ebp]
	movss	DWORD PTR _ff$[ebp], xmm0
; Line 816
	cvtsi2ss xmm0, DWORD PTR _rc$[ebp+8]
	movss	DWORD PTR _ff$[ebp+8], xmm0
; Line 817
	cvtsi2ss xmm0, DWORD PTR _rc$[ebp+12]
	movss	DWORD PTR _ff$[ebp+12], xmm0
; Line 818
	cvtsi2ss xmm0, DWORD PTR _rc$[ebp+4]
	movss	DWORD PTR _ff$[ebp+4], xmm0
; Line 819
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _ff$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ff$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _ff$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _ff$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _WriteFa$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fact$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UD2D_RECT_F@@@Z ; COLORPICK::Paint
; Line 820
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN5@Paint:
	DD	1
	DD	$LN4@Paint
$LN4@Paint:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN3@Paint
$LN3@Paint:
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
?Paint@COLORPICK@@QAEXPAUID2D1Factory@@PAUIDWriteFactory@@PAUID2D1RenderTarget@@UtagRECT@@@Z ENDP ; COLORPICK::Paint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateBrushes@COLORPICK@@QAEXPAUIDWriteFactory@@@Z
_TEXT	SEGMENT
tv132 = -348						; size = 4
_fs$1 = -148						; size = 4
_fsr$2 = -136						; size = 4
_fst$3 = -124						; size = 4
_lf$4 = -112						; size = 92
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_WriteFactoryX$ = 8					; size = 4
?CreateBrushes@COLORPICK@@QAEXPAUIDWriteFactory@@@Z PROC ; COLORPICK::CreateBrushes, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 799
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??7?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator!
	movzx	eax, al
	test	eax, eax
	je	$LN2@CreateBrus
; Line 802
	mov	esi, esp
	lea	eax, DWORD PTR _lf$4[ebp]
	push	eax
	push	92					; 0000005cH
	mov	edi, esp
	push	17					; 00000011H
	call	DWORD PTR __imp__GetStockObject@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetObjectW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 803
	mov	DWORD PTR _fst$3[ebp], 0
; Line 804
	movzx	eax, BYTE PTR _lf$4[ebp+20]
	test	eax, eax
	je	SHORT $LN3@CreateBrus
; Line 805
	mov	DWORD PTR _fst$3[ebp], 2
$LN3@CreateBrus:
; Line 806
	mov	DWORD PTR _fsr$2[ebp], 5
; Line 807
	mov	eax, DWORD PTR _lf$4[ebp]
	push	eax
	call	?abs@@YAJJ@Z				; abs
	add	esp, 4
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _fs$1[ebp], xmm0
; Line 808
	cmp	DWORD PTR _lf$4[ebp+16], 500		; 000001f4H
	jle	SHORT $LN5@CreateBrus
	mov	DWORD PTR tv132[ebp], 700		; 000002bcH
	jmp	SHORT $LN6@CreateBrus
$LN5@CreateBrus:
	mov	DWORD PTR tv132[ebp], 400		; 00000190H
$LN6@CreateBrus:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??I?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAEPAPAUIDWriteTextFormat@@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_11LOCGONAA@@
	push	ecx
	movss	xmm0, DWORD PTR _fs$1[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _fsr$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _fst$3[ebp]
	push	ecx
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _lf$4[ebp+28]
	push	eax
	mov	ecx, DWORD PTR _WriteFactoryX$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _WriteFactoryX$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+60]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CreateBrus:
; Line 810
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@CreateBrus
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN9@CreateBrus:
	DD	1
	DD	$LN8@CreateBrus
$LN8@CreateBrus:
	DD	-112					; ffffff90H
	DD	92					; 0000005cH
	DD	$LN7@CreateBrus
$LN7@CreateBrus:
	DB	108					; 0000006cH
	DB	102					; 00000066H
	DB	0
?CreateBrushes@COLORPICK@@QAEXPAUIDWriteFactory@@@Z ENDP ; COLORPICK::CreateBrushes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IDWriteTextFormat>::~CComPtr<IDWriteTextFormat>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::~CComPtrBase<IDWriteTextFormat>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IDWriteTextFormat>::~CComPtr<IDWriteTextFormat>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IDWriteTextFormat>::CComPtr<IDWriteTextFormat>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIDWriteTextFormat@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDWriteTextFormat>::CComPtrBase<IDWriteTextFormat>
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIDWriteTextFormat@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IDWriteTextFormat>::CComPtr<IDWriteTextFormat>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??7?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
??7?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBE_NXZ PROC	; ATL::CComPtrBase<IDWriteTextFormat>::operator!, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBE_NXZ ENDP	; ATL::CComPtrBase<IDWriteTextFormat>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ PROC ; ATL::CComPtrBase<IDWriteTextFormat>::operator->, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	204					; 000000ccH
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDWriteTextFormat@@@1@XZ ENDP ; ATL::CComPtrBase<IDWriteTextFormat>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAEPAPAUIDWriteTextFormat@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAEPAPAUIDWriteTextFormat@@XZ PROC ; ATL::CComPtrBase<IDWriteTextFormat>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAEPAPAUIDWriteTextFormat@@XZ ENDP ; ATL::CComPtrBase<IDWriteTextFormat>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ PROC ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QBEPAUIDWriteTextFormat@@XZ ENDP ; ATL::CComPtrBase<IDWriteTextFormat>::operator IDWriteTextFormat *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IDWriteTextFormat>::~CComPtrBase<IDWriteTextFormat>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIDWriteTextFormat@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IDWriteTextFormat>::~CComPtrBase<IDWriteTextFormat>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UIDWriteTextFormat@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtrBase@UIDWriteTextFormat@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IDWriteTextFormat>::CComPtrBase<IDWriteTextFormat>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIDWriteTextFormat@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IDWriteTextFormat>::CComPtrBase<IDWriteTextFormat>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LeftDoubleClick@COLORPICK@@QAEXIJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ww$ = 8						; size = 4
_ll$ = 12						; size = 4
?LeftDoubleClick@COLORPICK@@QAEXIJ@Z PROC		; COLORPICK::LeftDoubleClick, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 791
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 792
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?LeftDoubleClick@COLORPICK@@QAEXIJ@Z ENDP		; COLORPICK::LeftDoubleClick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RightDown@COLORPICK@@QAEXIJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ww$ = 8						; size = 4
_ll$ = 12						; size = 4
?RightDown@COLORPICK@@QAEXIJ@Z PROC			; COLORPICK::RightDown, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 789
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RightDown@COLORPICK@@QAEXIJ@Z ENDP			; COLORPICK::RightDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MouseMove@COLORPICK@@QAEXIJ@Z
_TEXT	SEGMENT
tv145 = -452						; size = 4
tv69 = -452						; size = 4
$T1 = -444						; size = 16
$T2 = -420						; size = 16
_rc$3 = -204						; size = 16
_y$4 = -180						; size = 4
_x$5 = -168						; size = 4
_pt$6 = -156						; size = 8
_M$ = -137						; size = 1
_cr$7 = -128						; size = 4
_fd$8 = -116						; size = 4
_hDC$9 = -104						; size = 4
_Shift$10 = -89						; size = 1
_pt$11 = -80						; size = 8
_rc$12 = -64						; size = 16
_ScreenDown2$13 = -40					; size = 8
_LeftClick$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ww$ = 8						; size = 4
_ll$ = 12						; size = 4
?MouseMove@COLORPICK@@QAEXIJ@Z PROC			; COLORPICK::MouseMove, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 728
	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 729
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN8@MouseMove
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN9@MouseMove
$LN8@MouseMove:
	mov	DWORD PTR tv69[ebp], 0
$LN9@MouseMove:
	mov	cl, BYTE PTR tv69[ebp]
	mov	BYTE PTR _LeftClick$[ebp], cl
; Line 733
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	$LN2@MouseMove
	movzx	eax, BYTE PTR _LeftClick$[ebp]
	test	eax, eax
	je	SHORT $LN2@MouseMove
; Line 735
	xor	eax, eax
	mov	DWORD PTR _ScreenDown2$13[ebp], eax
	mov	DWORD PTR _ScreenDown2$13[ebp+4], eax
; Line 736
	mov	esi, esp
	lea	eax, DWORD PTR _ScreenDown2$13[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 740
	mov	esi, esp
	lea	eax, DWORD PTR _rc$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 742
	mov	esi, esp
	push	65					; 00000041H
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ScreenDown2$13[ebp+4]
	sub	ecx, DWORD PTR [eax+44]
	add	ecx, DWORD PTR _rc$12[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _ScreenDown2$13[ebp]
	sub	eax, DWORD PTR [edx+40]
	add	eax, DWORD PTR _rc$12[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 743
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ScreenDown2$13[ebp]
	mov	edx, DWORD PTR _ScreenDown2$13[ebp+4]
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], edx
$LN2@MouseMove:
; Line 746
	movzx	eax, BYTE PTR _LeftClick$[ebp]
	test	eax, eax
	je	$LN3@MouseMove
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	$LN3@MouseMove
; Line 748
	xor	eax, eax
	mov	DWORD PTR _pt$11[ebp], eax
	mov	DWORD PTR _pt$11[ebp+4], eax
; Line 749
	mov	esi, esp
	lea	eax, DWORD PTR _pt$11[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 752
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN10@MouseMove
	mov	DWORD PTR tv145[ebp], 1
	jmp	SHORT $LN11@MouseMove
$LN10@MouseMove:
	mov	DWORD PTR tv145[ebp], 0
$LN11@MouseMove:
	mov	cl, BYTE PTR tv145[ebp]
	mov	BYTE PTR _Shift$10[ebp], cl
; Line 756
	mov	esi, esp
	push	32515					; 00007f03H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 757
	mov	esi, esp
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__GetDCEx@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDC$9[ebp], eax
; Line 758
	movss	xmm0, DWORD PTR ?ScaleDPI@COLORPICK@@2MA
	divss	xmm0, DWORD PTR __real@42c00000
	movss	DWORD PTR _fd$8[ebp], xmm0
; Line 759
	cvtsi2ss xmm0, DWORD PTR _pt$11[ebp+4]
	mulss	xmm0, DWORD PTR _fd$8[ebp]
	cvttss2si eax, xmm0
	mov	esi, esp
	push	eax
	cvtsi2ss xmm0, DWORD PTR _pt$11[ebp]
	mulss	xmm0, DWORD PTR _fd$8[ebp]
	cvttss2si ecx, xmm0
	push	ecx
	mov	edx, DWORD PTR _hDC$9[ebp]
	push	edx
	call	DWORD PTR __imp__GetPixel@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _cr$7[ebp], eax
; Line 761
	movzx	eax, BYTE PTR _Shift$10[ebp]
	test	eax, eax
	je	SHORT $LN4@MouseMove
; Line 762
	mov	esi, esp
	call	DWORD PTR __imp__DebugBreak@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@MouseMove:
; Line 763
	mov	esi, esp
	mov	eax, DWORD PTR _hDC$9[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 764
	push	0
	mov	eax, DWORD PTR _cr$7[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z ; COLORPICK::FromRGB
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 765
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+532], xmm0
; Line 766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 767
	jmp	$LN1@MouseMove
$LN3@MouseMove:
; Line 769
	mov	BYTE PTR _M$[ebp], 0
; Line 770
	movzx	eax, BYTE PTR _LeftClick$[ebp]
	test	eax, eax
	je	SHORT $LN5@MouseMove
; Line 771
	mov	eax, DWORD PTR _ll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ww$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeftDown@COLORPICK@@QAE_NIJ@Z		; COLORPICK::LeftDown
	mov	BYTE PTR _M$[ebp], al
$LN5@MouseMove:
; Line 772
	movzx	eax, BYTE PTR _M$[ebp]
	test	eax, eax
	jne	$LN6@MouseMove
	movzx	eax, BYTE PTR _LeftClick$[ebp]
	test	eax, eax
	je	$LN6@MouseMove
; Line 776
	mov	esi, esp
	lea	eax, DWORD PTR _pt$6[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 777
	mov	eax, DWORD PTR _pt$6[ebp]
	mov	DWORD PTR _x$5[ebp], eax
; Line 778
	mov	eax, DWORD PTR _pt$6[ebp+4]
	mov	DWORD PTR _y$4[ebp], eax
; Line 779
	xor	eax, eax
	mov	DWORD PTR _rc$3[ebp], eax
	mov	DWORD PTR _rc$3[ebp+4], eax
	mov	DWORD PTR _rc$3[ebp+8], eax
	mov	DWORD PTR _rc$3[ebp+12], eax
; Line 780
	mov	esi, esp
	lea	eax, DWORD PTR _rc$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 781
	mov	esi, esp
	push	65					; 00000041H
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$4[ebp]
	sub	ecx, DWORD PTR [eax+36]
	add	ecx, DWORD PTR _rc$3[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _x$5[ebp]
	sub	eax, DWORD PTR [edx+32]
	add	eax, DWORD PTR _rc$3[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$5[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 783
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$4[ebp]
	mov	DWORD PTR [eax+36], ecx
$LN6@MouseMove:
$LN1@MouseMove:
; Line 785
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@MouseMove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN18@MouseMove:
	DD	5
	DD	$LN17@MouseMove
$LN17@MouseMove:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN12@MouseMove
	DD	-64					; ffffffc0H
	DD	16					; 00000010H
	DD	$LN13@MouseMove
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN14@MouseMove
	DD	-156					; ffffff64H
	DD	8
	DD	$LN15@MouseMove
	DD	-204					; ffffff34H
	DD	16					; 00000010H
	DD	$LN16@MouseMove
$LN16@MouseMove:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN15@MouseMove:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN14@MouseMove:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN13@MouseMove:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN12@MouseMove:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	68					; 00000044H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	50					; 00000032H
	DB	0
?MouseMove@COLORPICK@@QAEXIJ@Z ENDP			; COLORPICK::MouseMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Redraw@COLORPICK@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Redraw@COLORPICK@@QAEXXZ PROC				; COLORPICK::Redraw, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 719
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 720
	mov	esi, esp
	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 721
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 722
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Redraw@COLORPICK@@QAEXXZ ENDP				; COLORPICK::Redraw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LeftDown@COLORPICK@@QAE_NIJ@Z
_TEXT	SEGMENT
$T1 = -1112						; size = 16
$T2 = -1088						; size = 16
$T3 = -1064						; size = 16
$T4 = -1040						; size = 16
$T5 = -1016						; size = 16
_rgb$6 = -608						; size = 12
_hsl$7 = -588						; size = 12
_v$8 = -568						; size = 4
_<end>$L0$9 = -556					; size = 4
_<begin>$L0$10 = -544					; size = 4
_<range>$L0$11 = -532					; size = 4
_he$12 = -520						; size = 4
_rgb2$13 = -508						; size = 12
_hsl2$14 = -488						; size = 12
_L2$15 = -468						; size = 4
_he$16 = -456						; size = 4
_rgb2$17 = -444						; size = 12
_hsl2$18 = -424						; size = 12
_L2$19 = -404						; size = 4
_he$20 = -392						; size = 4
_rgb2$21 = -380						; size = 12
_hsl2$22 = -360						; size = 12
_L2$23 = -340						; size = 4
_he$24 = -328						; size = 4
_DC_C$25 = -316						; size = 64
_Custom1$26 = -244					; size = 64
_c$27 = -172						; size = 36
_ID$28 = -128						; size = 2
_rgb$29 = -116						; size = 12
_hsl$30 = -96						; size = 12
_ID$31 = -76						; size = 2
_ID$32 = -64						; size = 2
_pt$ = -52						; size = 8
_y$ = -36						; size = 4
_x$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ww$ = 8						; size = 4
_ll$ = 12						; size = 4
?LeftDown@COLORPICK@@QAE_NIJ@Z PROC			; COLORPICK::LeftDown, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 1116				; 0000045cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1116]
	mov	ecx, 279				; 00000117H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 374
	xorps	xmm0, xmm0
	movss	DWORD PTR _x$[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _y$[ebp], xmm0
; Line 375
	mov	eax, DWORD PTR _ll$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cvtsi2ss xmm0, ecx
	movss	DWORD PTR _x$[ebp], xmm0
; Line 376
	mov	eax, DWORD PTR _ll$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cvtsi2ss xmm0, ecx
	movss	DWORD PTR _y$[ebp], xmm0
; Line 379
	mov	esi, esp
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 380
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pt$[ebp+4]
	mov	DWORD PTR [eax+36], ecx
; Line 383
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@LeftDown
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 168				; 000000a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@LeftDown
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@LeftDown
$LN6@LeftDown:
; Line 385
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@LeftDown
; Line 386
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@LeftDown:
; Line 387
	xor	eax, eax
	mov	WORD PTR _ID$32[ebp], ax
; Line 388
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@LeftDown
; Line 389
	mov	eax, 103				; 00000067H
	mov	WORD PTR _ID$32[ebp], ax
$LN8@LeftDown:
; Line 390
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 168				; 000000a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@LeftDown
; Line 391
	mov	eax, 102				; 00000066H
	mov	WORD PTR _ID$32[ebp], ax
$LN9@LeftDown:
; Line 392
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@LeftDown
; Line 393
	mov	eax, 101				; 00000065H
	mov	WORD PTR _ID$32[ebp], ax
$LN10@LeftDown:
; Line 394
	mov	esi, esp
	push	0
	push	0
	movsx	eax, WORD PTR _ID$32[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	1
	push	1
	push	0
	push	0
	push	1342185472				; 50002000H
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_19LELMJPKF@?$AAe?$AAd?$AAi?$AAt@
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 395
	movsx	eax, WORD PTR _ID$32[ebp]
	cmp	eax, 101				; 00000065H
	jne	$LN11@LeftDown
; Line 397
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+164]
	subss	xmm0, DWORD PTR [ecx+156]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+160]
	subss	xmm0, DWORD PTR [ecx+152]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+156]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+152]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 398
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	movsx	edx, WORD PTR _ID$32[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@LeftDown:
; Line 400
	movsx	eax, WORD PTR _ID$32[ebp]
	cmp	eax, 102				; 00000066H
	jne	$LN12@LeftDown
; Line 402
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+180]
	subss	xmm0, DWORD PTR [ecx+172]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+176]
	subss	xmm0, DWORD PTR [ecx+168]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+172]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+168]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 403
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	movsx	edx, WORD PTR _ID$32[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@LeftDown:
; Line 405
	movsx	eax, WORD PTR _ID$32[ebp]
	cmp	eax, 103				; 00000067H
	jne	$LN13@LeftDown
; Line 407
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+196]
	subss	xmm0, DWORD PTR [ecx+188]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+192]
	subss	xmm0, DWORD PTR [ecx+184]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+188]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+184]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 408
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	movsx	edx, WORD PTR _ID$32[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@LeftDown:
; Line 410
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 411
	mov	esi, esp
	push	-1
	push	0
	push	177					; 000000b1H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 412
	mov	al, 1
	jmp	$LN1@LeftDown
$LN5@LeftDown:
; Line 416
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 200				; 000000c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@LeftDown
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@LeftDown
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 232				; 000000e8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN14@LeftDown
$LN15@LeftDown:
; Line 418
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN16@LeftDown
; Line 419
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@LeftDown:
; Line 420
	xor	eax, eax
	mov	WORD PTR _ID$31[ebp], ax
; Line 421
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 200				; 000000c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@LeftDown
; Line 422
	mov	eax, 104				; 00000068H
	mov	WORD PTR _ID$31[ebp], ax
$LN17@LeftDown:
; Line 423
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@LeftDown
; Line 424
	mov	eax, 105				; 00000069H
	mov	WORD PTR _ID$31[ebp], ax
$LN18@LeftDown:
; Line 425
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 232				; 000000e8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@LeftDown
; Line 426
	mov	eax, 106				; 0000006aH
	mov	WORD PTR _ID$31[ebp], ax
$LN19@LeftDown:
; Line 427
	mov	esi, esp
	push	0
	push	0
	movsx	eax, WORD PTR _ID$31[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	1
	push	1
	push	0
	push	0
	push	1342185472				; 50002000H
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_19LELMJPKF@?$AAe?$AAd?$AAi?$AAt@
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 428
	xor	eax, eax
	mov	DWORD PTR _hsl$30[ebp], eax
	mov	DWORD PTR _hsl$30[ebp+4], eax
	mov	DWORD PTR _hsl$30[ebp+8], eax
; Line 429
	xor	eax, eax
	mov	DWORD PTR _rgb$29[ebp], eax
	mov	DWORD PTR _rgb$29[ebp+4], eax
	mov	DWORD PTR _rgb$29[ebp+8], eax
; Line 430
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+392]
	mov	DWORD PTR _rgb$29[ebp+ecx], eax
; Line 431
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	mov	DWORD PTR _rgb$29[ebp+eax], edx
; Line 432
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+400]
	mov	DWORD PTR _rgb$29[ebp+eax], edx
; Line 433
	lea	eax, DWORD PTR _hsl$30[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb$29[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 434
	movsx	eax, WORD PTR _ID$31[ebp]
	cmp	eax, 106				; 0000006aH
	jne	$LN20@LeftDown
; Line 436
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+244]
	subss	xmm0, DWORD PTR [ecx+236]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+240]
	subss	xmm0, DWORD PTR [ecx+232]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+236]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+232]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 437
	mov	esi, esp
	push	0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _hsl$30[ebp+eax]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	movsx	edx, WORD PTR _ID$31[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@LeftDown:
; Line 439
	movsx	eax, WORD PTR _ID$31[ebp]
	cmp	eax, 105				; 00000069H
	jne	$LN21@LeftDown
; Line 441
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+228]
	subss	xmm0, DWORD PTR [ecx+220]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+224]
	subss	xmm0, DWORD PTR [ecx+216]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+220]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+216]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 442
	mov	esi, esp
	push	0
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _hsl$30[ebp+eax]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si ecx, xmm0
	push	ecx
	movsx	edx, WORD PTR _ID$31[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@LeftDown:
; Line 444
	movsx	eax, WORD PTR _ID$31[ebp]
	cmp	eax, 104				; 00000068H
	jne	$LN22@LeftDown
; Line 446
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+212]
	subss	xmm0, DWORD PTR [ecx+204]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+208]
	subss	xmm0, DWORD PTR [ecx+200]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+204]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+200]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 447
	mov	esi, esp
	push	0
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl$30[ebp+ecx]
	divss	xmm0, DWORD PTR __real@40c00000
	mulss	xmm0, DWORD PTR __real@43b40000
	cvttss2si edx, xmm0
	push	edx
	movsx	eax, WORD PTR _ID$31[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@LeftDown:
; Line 449
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 450
	mov	esi, esp
	push	-1
	push	0
	push	177					; 000000b1H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 451
	mov	al, 1
	jmp	$LN1@LeftDown
$LN14@LeftDown:
; Line 455
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 264				; 00000108H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN23@LeftDown
; Line 457
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN24@LeftDown
; Line 458
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@LeftDown:
; Line 459
	mov	eax, 110				; 0000006eH
	mov	WORD PTR _ID$28[ebp], ax
; Line 460
	mov	esi, esp
	push	0
	push	0
	movsx	eax, WORD PTR _ID$28[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	1
	push	1
	push	0
	push	0
	push	1342185472				; 50002000H
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_19LELMJPKF@?$AAe?$AAd?$AAi?$AAt@
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 461
	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+276]
	subss	xmm0, DWORD PTR [ecx+268]
	cvttss2si edx, xmm0
	sub	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+272]
	subss	xmm0, DWORD PTR [ecx+264]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+268]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+264]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 462
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+404]
	mulss	xmm0, DWORD PTR __real@42c80000
	cvttss2si ecx, xmm0
	push	ecx
	movsx	edx, WORD PTR _ID$28[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 463
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 464
	mov	esi, esp
	push	-1
	push	0
	push	177					; 000000b1H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 465
	mov	al, 1
	jmp	$LN1@LeftDown
$LN23@LeftDown:
; Line 469
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN25@LeftDown
; Line 471
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndEdit@COLORPICK@@QAEX_N@Z		; COLORPICK::EndEdit
; Line 472
	mov	al, 1
	jmp	$LN1@LeftDown
$LN25@LeftDown:
; Line 475
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 504				; 000001f8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+563]
	test	ecx, ecx
	je	SHORT $LN26@LeftDown
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 1
; Line 478
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetCapture@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	mov	al, 1
	jmp	$LN1@LeftDown
$LN26@LeftDown:
; Line 482
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 480				; 000001e0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN27@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+562]
	test	ecx, ecx
	je	$LN27@LeftDown
; Line 484
	xor	eax, eax
	mov	DWORD PTR _c$27[ebp], eax
	mov	DWORD PTR _c$27[ebp+4], eax
	mov	DWORD PTR _c$27[ebp+8], eax
	mov	DWORD PTR _c$27[ebp+12], eax
	mov	DWORD PTR _c$27[ebp+16], eax
	mov	DWORD PTR _c$27[ebp+20], eax
	mov	DWORD PTR _c$27[ebp+24], eax
	mov	DWORD PTR _c$27[ebp+28], eax
	mov	DWORD PTR _c$27[ebp+32], eax
; Line 485
	mov	DWORD PTR _c$27[ebp], 36		; 00000024H
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _c$27[ebp+4], ecx
; Line 487
	push	64					; 00000040H
	push	0
	lea	eax, DWORD PTR _Custom1$26[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 488
	mov	DWORD PTR _DC_C$25[ebp], 16777215	; 00ffffffH
	mov	DWORD PTR _DC_C$25[ebp+4], 0
	mov	DWORD PTR _DC_C$25[ebp+8], 8388608	; 00800000H
	mov	DWORD PTR _DC_C$25[ebp+12], 32768	; 00008000H
; Line 489
	mov	DWORD PTR _DC_C$25[ebp+16], 255		; 000000ffH
	mov	DWORD PTR _DC_C$25[ebp+20], 128		; 00000080H
	mov	DWORD PTR _DC_C$25[ebp+24], 8388736	; 00800080H
	mov	DWORD PTR _DC_C$25[ebp+28], 33023	; 000080ffH
; Line 490
	mov	DWORD PTR _DC_C$25[ebp+32], 65535	; 0000ffffH
	mov	DWORD PTR _DC_C$25[ebp+36], 65280	; 0000ff00H
	mov	DWORD PTR _DC_C$25[ebp+40], 8421376	; 00808000H
	mov	DWORD PTR _DC_C$25[ebp+44], 16776960	; 00ffff00H
; Line 491
	mov	DWORD PTR _DC_C$25[ebp+48], 16711680	; 00ff0000H
	mov	DWORD PTR _DC_C$25[ebp+52], 16711935	; 00ff00ffH
	mov	DWORD PTR _DC_C$25[ebp+56], 8421504	; 00808080H
	mov	DWORD PTR _DC_C$25[ebp+60], 12632256	; 00c0c0c0H
; Line 492
	push	64					; 00000040H
	lea	eax, DWORD PTR _DC_C$25[ebp]
	push	eax
	lea	ecx, DWORD PTR _Custom1$26[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 493
	mov	DWORD PTR _c$27[ebp+20], 258		; 00000102H
; Line 494
	mov	eax, DWORD PTR _c$27[ebp+20]
	or	eax, 1
	mov	DWORD PTR _c$27[ebp+20], eax
; Line 495
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	push	0
	call	?ToRGB@COLORPICK@@SAK_NU_D3DCOLORVALUE@@@Z ; COLORPICK::ToRGB
	add	esp, 20					; 00000014H
	mov	DWORD PTR _c$27[ebp+12], eax
; Line 496
	lea	eax, DWORD PTR _Custom1$26[ebp]
	mov	DWORD PTR _c$27[ebp+16], eax
; Line 497
	mov	esi, esp
	lea	eax, DWORD PTR _c$27[ebp]
	push	eax
	call	DWORD PTR __imp__ChooseColorW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN28@LeftDown
; Line 498
	xor	al, al
	jmp	$LN1@LeftDown
$LN28@LeftDown:
; Line 500
	push	0
	mov	eax, DWORD PTR _c$27[ebp+12]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z ; COLORPICK::FromRGB
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T5[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T5[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR $T5[ebp+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T5[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T5[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T5[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 501
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+532], xmm0
; Line 503
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+556], 1
; Line 504
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
; Line 505
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 506
	mov	al, 1
	jmp	$LN1@LeftDown
$LN27@LeftDown:
; Line 510
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 360				; 00000168H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN29@LeftDown
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+556], 0
; Line 513
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
; Line 514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 515
	mov	al, 1
	jmp	$LN1@LeftDown
$LN29@LeftDown:
; Line 517
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@LeftDown
; Line 519
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+556], 1
; Line 520
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 522
	mov	al, 1
	jmp	$LN1@LeftDown
$LN30@LeftDown:
; Line 525
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@LeftDown
; Line 527
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -2147467259		; 80004005H
; Line 528
	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 529
	mov	al, 1
	jmp	$LN1@LeftDown
$LN31@LeftDown:
; Line 531
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 432				; 000001b0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN32@LeftDown
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 534
	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 535
	mov	al, 1
	jmp	$LN1@LeftDown
$LN32@LeftDown:
; Line 538
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN33@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+332]
	comiss	xmm0, DWORD PTR _y$[ebp]
	jbe	SHORT $LN33@LeftDown
; Line 540
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+332]
	movss	DWORD PTR _y$[ebp], xmm0
$LN33@LeftDown:
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN34@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR [eax+340]
	jbe	SHORT $LN34@LeftDown
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+340]
	movss	DWORD PTR _y$[ebp], xmm0
$LN34@LeftDown:
; Line 546
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+19]
	test	ecx, ecx
	je	SHORT $LN35@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+300]
	comiss	xmm0, DWORD PTR _y$[ebp]
	jbe	SHORT $LN35@LeftDown
; Line 548
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+300]
	movss	DWORD PTR _y$[ebp], xmm0
$LN35@LeftDown:
; Line 550
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+19]
	test	ecx, ecx
	je	SHORT $LN36@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR [eax+308]
	jbe	SHORT $LN36@LeftDown
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+308]
	movss	DWORD PTR _y$[ebp], xmm0
$LN36@LeftDown:
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	je	SHORT $LN37@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+316]
	comiss	xmm0, DWORD PTR _y$[ebp]
	jbe	SHORT $LN37@LeftDown
; Line 556
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+316]
	movss	DWORD PTR _y$[ebp], xmm0
$LN37@LeftDown:
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	je	SHORT $LN38@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR [eax+324]
	jbe	SHORT $LN38@LeftDown
; Line 560
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+324]
	movss	DWORD PTR _y$[ebp], xmm0
$LN38@LeftDown:
; Line 562
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN39@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+348]
	comiss	xmm0, DWORD PTR _y$[ebp]
	jbe	SHORT $LN39@LeftDown
; Line 564
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+348]
	movss	DWORD PTR _y$[ebp], xmm0
$LN39@LeftDown:
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN40@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR [eax+356]
	jbe	SHORT $LN40@LeftDown
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+356]
	movss	DWORD PTR _y$[ebp], xmm0
$LN40@LeftDown:
; Line 572
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN41@LeftDown
; Line 574
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 1
; Line 575
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+340]
	subss	xmm0, DWORD PTR [ecx+332]
	movss	DWORD PTR _he$24[ebp], xmm0
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	subss	xmm0, DWORD PTR [eax+332]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 579
	movss	xmm0, DWORD PTR _y$[ebp]
	divss	xmm0, DWORD PTR _he$24[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR _L2$23[ebp], xmm1
; Line 582
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN42@LeftDown
; Line 584
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _L2$23[ebp]
	movss	DWORD PTR [eax+400], xmm0
; Line 585
	jmp	$LN44@LeftDown
$LN42@LeftDown:
; Line 588
	xor	eax, eax
	mov	DWORD PTR _hsl2$22[ebp], eax
	mov	DWORD PTR _hsl2$22[ebp+4], eax
	mov	DWORD PTR _hsl2$22[ebp+8], eax
; Line 589
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb2$21[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb2$21[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb2$21[ebp+8], xmm0
; Line 590
	lea	eax, DWORD PTR _hsl2$22[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb2$21[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 591
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _L2$23[ebp]
	movss	DWORD PTR _hsl2$22[ebp+eax], xmm0
; Line 592
	lea	eax, DWORD PTR _rgb2$21[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$22[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 593
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb2$21[ebp+ecx]
	movss	DWORD PTR $T3[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb2$21[ebp+edx]
	movss	DWORD PTR $T3[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb2$21[ebp+eax]
	movss	DWORD PTR $T3[ebp+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+532]
	movss	DWORD PTR $T3[ebp+12], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 392				; 00000188H
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T3[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 594
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _hsl2$22[ebp+eax]
	mov	DWORD PTR [ecx+528], edx
; Line 595
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+561]
	test	ecx, ecx
	je	SHORT $LN44@LeftDown
; Line 596
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
$LN44@LeftDown:
; Line 599
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 600
	mov	al, 1
	jmp	$LN1@LeftDown
$LN41@LeftDown:
; Line 604
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN45@LeftDown
; Line 606
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 1
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+324]
	subss	xmm0, DWORD PTR [ecx+316]
	movss	DWORD PTR _he$20[ebp], xmm0
; Line 608
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	subss	xmm0, DWORD PTR [eax+316]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 611
	movss	xmm0, DWORD PTR _y$[ebp]
	divss	xmm0, DWORD PTR _he$20[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR _L2$19[ebp], xmm1
; Line 615
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN46@LeftDown
; Line 617
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _L2$19[ebp]
	movss	DWORD PTR [eax+396], xmm0
; Line 618
	jmp	$LN47@LeftDown
$LN46@LeftDown:
; Line 621
	xor	eax, eax
	mov	DWORD PTR _hsl2$18[ebp], eax
	mov	DWORD PTR _hsl2$18[ebp+4], eax
	mov	DWORD PTR _hsl2$18[ebp+8], eax
; Line 622
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb2$17[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb2$17[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb2$17[ebp+8], xmm0
; Line 623
	lea	eax, DWORD PTR _hsl2$18[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb2$17[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 624
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _L2$19[ebp]
	movss	DWORD PTR _hsl2$18[ebp+eax], xmm0
; Line 625
	lea	eax, DWORD PTR _rgb2$17[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$18[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 626
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb2$17[ebp+ecx]
	movss	DWORD PTR $T2[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb2$17[ebp+edx]
	movss	DWORD PTR $T2[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb2$17[ebp+eax]
	movss	DWORD PTR $T2[ebp+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+532]
	movss	DWORD PTR $T2[ebp+12], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 392				; 00000188H
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR [edx+12], ecx
$LN47@LeftDown:
; Line 629
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 630
	mov	al, 1
	jmp	$LN1@LeftDown
$LN45@LeftDown:
; Line 633
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN48@LeftDown
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 1
; Line 636
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+308]
	subss	xmm0, DWORD PTR [ecx+300]
	movss	DWORD PTR _he$16[ebp], xmm0
; Line 637
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	subss	xmm0, DWORD PTR [eax+300]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 640
	movss	xmm0, DWORD PTR _y$[ebp]
	divss	xmm0, DWORD PTR _he$16[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR _L2$15[ebp], xmm1
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN49@LeftDown
; Line 645
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _L2$15[ebp]
	movss	DWORD PTR [eax+392], xmm0
; Line 646
	jmp	$LN50@LeftDown
$LN49@LeftDown:
; Line 649
	xor	eax, eax
	mov	DWORD PTR _hsl2$14[ebp], eax
	mov	DWORD PTR _hsl2$14[ebp+4], eax
	mov	DWORD PTR _hsl2$14[ebp+8], eax
; Line 650
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb2$13[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb2$13[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb2$13[ebp+8], xmm0
; Line 651
	lea	eax, DWORD PTR _hsl2$14[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb2$13[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 652
	movss	xmm0, DWORD PTR _L2$15[ebp]
	mulss	xmm0, DWORD PTR __real@40c00000
	mov	eax, 4
	imul	ecx, eax, 0
	movss	DWORD PTR _hsl2$14[ebp+ecx], xmm0
; Line 653
	lea	eax, DWORD PTR _rgb2$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$14[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 654
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _rgb2$13[ebp+ecx]
	movss	DWORD PTR $T1[ebp], xmm0
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR _rgb2$13[ebp+edx]
	movss	DWORD PTR $T1[ebp+4], xmm0
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _rgb2$13[ebp+eax]
	movss	DWORD PTR $T1[ebp+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+532]
	movss	DWORD PTR $T1[ebp+12], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 392				; 00000188H
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T1[ebp+12]
	mov	DWORD PTR [edx+12], ecx
$LN50@LeftDown:
; Line 657
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 658
	mov	al, 1
	jmp	$LN1@LeftDown
$LN48@LeftDown:
; Line 663
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN51@LeftDown
; Line 665
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 1
; Line 666
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+340]
	subss	xmm0, DWORD PTR [ecx+332]
	movss	DWORD PTR _he$12[ebp], xmm0
; Line 667
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	subss	xmm0, DWORD PTR [eax+348]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 670
	movss	xmm0, DWORD PTR _y$[ebp]
	divss	xmm0, DWORD PTR _he$12[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+532], xmm1
; Line 671
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+532]
	mov	DWORD PTR [eax+404], edx
; Line 673
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 674
	mov	al, 1
	jmp	$LN1@LeftDown
$LN51@LeftDown:
; Line 678
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 536				; 00000218H
	mov	DWORD PTR _<range>$L0$11[ebp], eax
	mov	ecx, DWORD PTR _<range>$L0$11[ebp]
	call	?_Unchecked_begin@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_begin
	mov	DWORD PTR _<begin>$L0$10[ebp], eax
	mov	ecx, DWORD PTR _<range>$L0$11[ebp]
	call	?_Unchecked_end@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEPAUPT@COLORPICK@@XZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::_Unchecked_end
	mov	DWORD PTR _<end>$L0$9[ebp], eax
	jmp	SHORT $LN4@LeftDown
$LN2@LeftDown:
	mov	eax, DWORD PTR _<begin>$L0$10[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _<begin>$L0$10[ebp], eax
$LN4@LeftDown:
	mov	eax, DWORD PTR _<begin>$L0$10[ebp]
	cmp	eax, DWORD PTR _<end>$L0$9[ebp]
	je	$LN3@LeftDown
	mov	eax, DWORD PTR _<begin>$L0$10[ebp]
	mov	DWORD PTR _v$8[ebp], eax
; Line 680
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _v$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN52@LeftDown
; Line 682
	xor	eax, eax
	mov	DWORD PTR _hsl$7[ebp], eax
	mov	DWORD PTR _hsl$7[ebp+4], eax
	mov	DWORD PTR _hsl$7[ebp+8], eax
	xor	eax, eax
	mov	DWORD PTR _rgb$6[ebp], eax
	mov	DWORD PTR _rgb$6[ebp+4], eax
	mov	DWORD PTR _rgb$6[ebp+8], eax
; Line 683
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+561]
	test	ecx, ecx
	jne	$LN53@LeftDown
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 0
	jne	$LN53@LeftDown
; Line 686
	mov	eax, DWORD PTR _v$8[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 687
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+392]
	mov	DWORD PTR _rgb$6[ebp+ecx], eax
; Line 688
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	mov	DWORD PTR _rgb$6[ebp+eax], edx
; Line 689
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+400]
	mov	DWORD PTR _rgb$6[ebp+eax], edx
; Line 690
	lea	eax, DWORD PTR _hsl$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 691
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+528]
	mov	DWORD PTR _hsl$7[ebp+eax], edx
; Line 692
	lea	eax, DWORD PTR _rgb$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl$7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 693
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rgb$6[ebp+ecx]
	mov	DWORD PTR [edx+392], eax
; Line 694
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb$6[ebp+eax]
	mov	DWORD PTR [ecx+396], edx
; Line 695
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb$6[ebp+eax]
	mov	DWORD PTR [ecx+400], edx
; Line 699
	jmp	SHORT $LN54@LeftDown
$LN53@LeftDown:
; Line 702
	mov	eax, DWORD PTR _v$8[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 703
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+532]
	mov	DWORD PTR [eax+404], edx
$LN54@LeftDown:
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 706
	mov	al, 1
	jmp	SHORT $LN1@LeftDown
$LN52@LeftDown:
; Line 708
	jmp	$LN2@LeftDown
$LN3@LeftDown:
; Line 710
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 1
; Line 711
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 713
	xor	al, al
$LN1@LeftDown:
; Line 714
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN71@LeftDown
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1116				; 0000045cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN71@LeftDown:
	DD	14					; 0000000eH
	DD	$LN70@LeftDown
$LN70@LeftDown:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN56@LeftDown
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN57@LeftDown
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN58@LeftDown
	DD	-172					; ffffff54H
	DD	36					; 00000024H
	DD	$LN59@LeftDown
	DD	-244					; ffffff0cH
	DD	64					; 00000040H
	DD	$LN60@LeftDown
	DD	-316					; fffffec4H
	DD	64					; 00000040H
	DD	$LN61@LeftDown
	DD	-360					; fffffe98H
	DD	12					; 0000000cH
	DD	$LN62@LeftDown
	DD	-380					; fffffe84H
	DD	12					; 0000000cH
	DD	$LN63@LeftDown
	DD	-424					; fffffe58H
	DD	12					; 0000000cH
	DD	$LN64@LeftDown
	DD	-444					; fffffe44H
	DD	12					; 0000000cH
	DD	$LN65@LeftDown
	DD	-488					; fffffe18H
	DD	12					; 0000000cH
	DD	$LN66@LeftDown
	DD	-508					; fffffe04H
	DD	12					; 0000000cH
	DD	$LN67@LeftDown
	DD	-588					; fffffdb4H
	DD	12					; 0000000cH
	DD	$LN68@LeftDown
	DD	-608					; fffffda0H
	DD	12					; 0000000cH
	DD	$LN69@LeftDown
$LN69@LeftDown:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	0
$LN68@LeftDown:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	0
$LN67@LeftDown:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN66@LeftDown:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN65@LeftDown:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN64@LeftDown:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN63@LeftDown:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN62@LeftDown:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN61@LeftDown:
	DB	68					; 00000044H
	DB	67					; 00000043H
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	0
$LN60@LeftDown:
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	49					; 00000031H
	DB	0
$LN59@LeftDown:
	DB	99					; 00000063H
	DB	0
$LN58@LeftDown:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	0
$LN57@LeftDown:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	0
$LN56@LeftDown:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
?LeftDown@COLORPICK@@QAE_NIJ@Z ENDP			; COLORPICK::LeftDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndEdit@COLORPICK@@QAEX_N@Z
_TEXT	SEGMENT
_rgb$1 = -76						; size = 12
_hsl$2 = -56						; size = 12
_J$ = -36						; size = 4
_ID$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_S$ = 8							; size = 1
?EndEdit@COLORPICK@@QAEX_N@Z PROC			; COLORPICK::EndEdit, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 301
	mov	esi, esp
	push	-12					; fffffff4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ID$[ebp], eax
; Line 302
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetDlgItemInt@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _J$[ebp], eax
; Line 303
	cmp	DWORD PTR _J$[ebp], 0
	jge	SHORT $LN2@EndEdit
	mov	DWORD PTR _J$[ebp], 0
$LN2@EndEdit:
; Line 304
	cmp	DWORD PTR _ID$[ebp], 110		; 0000006eH
	jne	SHORT $LN3@EndEdit
; Line 306
	cmp	DWORD PTR _J$[ebp], 100			; 00000064H
	jle	SHORT $LN5@EndEdit
; Line 307
	mov	DWORD PTR _J$[ebp], 100			; 00000064H
$LN5@EndEdit:
; Line 308
	jmp	SHORT $LN9@EndEdit
$LN3@EndEdit:
; Line 310
	cmp	DWORD PTR _ID$[ebp], 104		; 00000068H
	jne	SHORT $LN6@EndEdit
; Line 312
	cmp	DWORD PTR _J$[ebp], 360			; 00000168H
	jle	SHORT $LN8@EndEdit
; Line 313
	mov	DWORD PTR _J$[ebp], 0
$LN8@EndEdit:
; Line 314
	jmp	SHORT $LN9@EndEdit
$LN6@EndEdit:
; Line 317
	cmp	DWORD PTR _J$[ebp], 255			; 000000ffH
	jle	SHORT $LN9@EndEdit
; Line 318
	mov	DWORD PTR _J$[ebp], 255			; 000000ffH
$LN9@EndEdit:
; Line 320
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 322
	movzx	eax, BYTE PTR _S$[ebp]
	test	eax, eax
	je	$LN15@EndEdit
; Line 324
	cmp	DWORD PTR _ID$[ebp], 110		; 0000006eH
	jne	SHORT $LN11@EndEdit
; Line 325
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@42c80000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+404], xmm0
; Line 326
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+404]
	mov	DWORD PTR [eax+532], edx
$LN11@EndEdit:
; Line 328
	cmp	DWORD PTR _ID$[ebp], 101		; 00000065H
	jne	SHORT $LN12@EndEdit
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+392], xmm0
$LN12@EndEdit:
; Line 329
	cmp	DWORD PTR _ID$[ebp], 102		; 00000066H
	jne	SHORT $LN13@EndEdit
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+396], xmm0
$LN13@EndEdit:
; Line 330
	cmp	DWORD PTR _ID$[ebp], 103		; 00000067H
	jne	SHORT $LN14@EndEdit
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+400], xmm0
$LN14@EndEdit:
; Line 331
	cmp	DWORD PTR _ID$[ebp], 104		; 00000068H
	jl	$LN15@EndEdit
; Line 333
	xor	eax, eax
	mov	DWORD PTR _hsl$2[ebp], eax
	mov	DWORD PTR _hsl$2[ebp+4], eax
	mov	DWORD PTR _hsl$2[ebp+8], eax
; Line 334
	xor	eax, eax
	mov	DWORD PTR _rgb$1[ebp], eax
	mov	DWORD PTR _rgb$1[ebp+4], eax
	mov	DWORD PTR _rgb$1[ebp+8], eax
; Line 335
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+392]
	mov	DWORD PTR _rgb$1[ebp+ecx], eax
; Line 336
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	mov	DWORD PTR _rgb$1[ebp+eax], edx
; Line 337
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+400]
	mov	DWORD PTR _rgb$1[ebp+eax], edx
; Line 338
	lea	eax, DWORD PTR _hsl$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 341
	cmp	DWORD PTR _ID$[ebp], 104		; 00000068H
	jne	SHORT $LN16@EndEdit
; Line 342
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@43b40000
	mulss	xmm0, DWORD PTR __real@40c00000
	mov	eax, 4
	imul	ecx, eax, 0
	movss	DWORD PTR _hsl$2[ebp+ecx], xmm0
$LN16@EndEdit:
; Line 343
	cmp	DWORD PTR _ID$[ebp], 105		; 00000069H
	jne	SHORT $LN17@EndEdit
; Line 344
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	eax, 4
	shl	eax, 0
	movss	DWORD PTR _hsl$2[ebp+eax], xmm0
$LN17@EndEdit:
; Line 345
	cmp	DWORD PTR _ID$[ebp], 106		; 0000006aH
	jne	SHORT $LN18@EndEdit
; Line 346
	cvtsi2ss xmm0, DWORD PTR _J$[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	eax, 4
	shl	eax, 1
	movss	DWORD PTR _hsl$2[ebp+eax], xmm0
$LN18@EndEdit:
; Line 348
	lea	eax, DWORD PTR _rgb$1[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 349
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rgb$1[ebp+ecx]
	mov	DWORD PTR [edx+392], eax
; Line 350
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb$1[ebp+eax]
	mov	DWORD PTR [ecx+396], edx
; Line 351
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb$1[ebp+eax]
	mov	DWORD PTR [ecx+400], edx
$LN15@EndEdit:
; Line 355
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@EndEdit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN23@EndEdit:
	DD	2
	DD	$LN22@EndEdit
$LN22@EndEdit:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN20@EndEdit
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN21@EndEdit
$LN21@EndEdit:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	0
$LN20@EndEdit:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	0
?EndEdit@COLORPICK@@QAEX_N@Z ENDP			; COLORPICK::EndEdit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LeftUp@COLORPICK@@QAEXIJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ww$ = 8						; size = 4
_ll$ = 12						; size = 4
?LeftUp@COLORPICK@@QAEXIJ@Z PROC			; COLORPICK::LeftUp, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 285
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN2@LeftUp
; Line 286
	mov	esi, esp
	call	DWORD PTR __imp__ReleaseCapture@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@LeftUp:
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 290
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
; Line 291
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
; Line 292
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+19], 0
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], -1
; Line 296
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], -1
; Line 297
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?LeftUp@COLORPICK@@QAEXIJ@Z ENDP			; COLORPICK::LeftUp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Wheel@COLORPICK@@QAEXIJ@Z
_TEXT	SEGMENT
_Mode$ = -116						; size = 4
_rgb2$ = -104						; size = 12
_hsl2$ = -84						; size = 12
_HW$ = -64						; size = 2
_pt$ = -52						; size = 8
_y$ = -36						; size = 4
_x$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ww$ = 8						; size = 4
_ll$ = 12						; size = 4
?Wheel@COLORPICK@@QAEXIJ@Z PROC				; COLORPICK::Wheel, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 167
	xorps	xmm0, xmm0
	movss	DWORD PTR _x$[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _y$[ebp], xmm0
; Line 169
	mov	esi, esp
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 170
	mov	esi, esp
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__ScreenToClient@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	cvtsi2ss xmm0, DWORD PTR _pt$[ebp]
	movss	DWORD PTR _x$[ebp], xmm0
; Line 172
	cvtsi2ss xmm0, DWORD PTR _pt$[ebp+4]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 173
	mov	eax, DWORD PTR _ww$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	mov	WORD PTR _HW$[ebp], ax
; Line 175
	xor	eax, eax
	mov	DWORD PTR _hsl2$[ebp], eax
	mov	DWORD PTR _hsl2$[ebp+4], eax
	mov	DWORD PTR _hsl2$[ebp+8], eax
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	movss	DWORD PTR _rgb2$[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	movss	DWORD PTR _rgb2$[ebp+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	movss	DWORD PTR _rgb2$[ebp+8], xmm0
; Line 177
	lea	eax, DWORD PTR _hsl2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rgb2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z	; COLORPICK::fromRGBtoHSL
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 556				; 0000022cH
	mov	DWORD PTR _Mode$[ebp], eax
; Line 182
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN11@Wheel
$LN3@Wheel:
; Line 184
	mov	eax, DWORD PTR _Mode$[ebp]
	cmp	DWORD PTR [eax], 1
	je	SHORT $LN6@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@Wheel
$LN6@Wheel:
; Line 186
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN7@Wheel
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	addss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+392], xmm0
	jmp	SHORT $LN8@Wheel
$LN7@Wheel:
; Line 189
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	subss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+392], xmm0
$LN8@Wheel:
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [eax+392]
	jbe	SHORT $LN9@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+392], xmm0
$LN9@Wheel:
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+392]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN10@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+392], xmm0
$LN10@Wheel:
; Line 192
	jmp	$LN11@Wheel
$LN4@Wheel:
; Line 194
	mov	eax, DWORD PTR _Mode$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN12@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN11@Wheel
$LN12@Wheel:
; Line 196
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN13@Wheel
; Line 197
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl2$[ebp+ecx]
	addss	xmm0, DWORD PTR __real@3d75c28f
	mov	edx, 4
	imul	eax, edx, 0
	movss	DWORD PTR _hsl2$[ebp+eax], xmm0
	jmp	SHORT $LN14@Wheel
$LN13@Wheel:
; Line 199
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl2$[ebp+ecx]
	subss	xmm0, DWORD PTR __real@3d75c28f
	mov	edx, 4
	imul	eax, edx, 0
	movss	DWORD PTR _hsl2$[ebp+eax], xmm0
$LN14@Wheel:
; Line 200
	mov	eax, 4
	imul	ecx, eax, 0
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _hsl2$[ebp+ecx]
	jbe	SHORT $LN15@Wheel
	mov	eax, 4
	imul	ecx, eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _hsl2$[ebp+ecx], xmm0
$LN15@Wheel:
; Line 201
	mov	eax, 4
	imul	ecx, eax, 0
	movss	xmm0, DWORD PTR _hsl2$[ebp+ecx]
	comiss	xmm0, DWORD PTR __real@40c00000
	jbe	SHORT $LN16@Wheel
	mov	eax, 4
	imul	ecx, eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _hsl2$[ebp+ecx], xmm0
$LN16@Wheel:
; Line 202
	lea	eax, DWORD PTR _rgb2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 203
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rgb2$[ebp+ecx]
	mov	DWORD PTR [edx+392], eax
; Line 204
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb2$[ebp+eax]
	mov	DWORD PTR [ecx+396], edx
; Line 205
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb2$[ebp+eax]
	mov	DWORD PTR [ecx+400], edx
$LN11@Wheel:
; Line 210
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 312				; 00000138H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN26@Wheel
$LN18@Wheel:
; Line 212
	mov	eax, DWORD PTR _Mode$[ebp]
	cmp	DWORD PTR [eax], 1
	je	SHORT $LN21@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN19@Wheel
$LN21@Wheel:
; Line 214
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN22@Wheel
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	addss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+396], xmm0
	jmp	SHORT $LN23@Wheel
$LN22@Wheel:
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	subss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+396], xmm0
$LN23@Wheel:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [eax+396]
	jbe	SHORT $LN24@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+396], xmm0
$LN24@Wheel:
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+396]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN25@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+396], xmm0
$LN25@Wheel:
; Line 220
	jmp	$LN26@Wheel
$LN19@Wheel:
; Line 222
	mov	eax, DWORD PTR _Mode$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN27@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN26@Wheel
$LN27@Wheel:
; Line 224
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN28@Wheel
; Line 225
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	addss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, 4
	shl	ecx, 0
	movss	DWORD PTR _hsl2$[ebp+ecx], xmm0
	jmp	SHORT $LN29@Wheel
$LN28@Wheel:
; Line 227
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	subss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, 4
	shl	ecx, 0
	movss	DWORD PTR _hsl2$[ebp+ecx], xmm0
$LN29@Wheel:
; Line 228
	mov	eax, 4
	shl	eax, 0
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	jbe	SHORT $LN30@Wheel
	mov	eax, 4
	shl	eax, 0
	xorps	xmm0, xmm0
	movss	DWORD PTR _hsl2$[ebp+eax], xmm0
$LN30@Wheel:
; Line 229
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN31@Wheel
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _hsl2$[ebp+eax], xmm0
$LN31@Wheel:
; Line 230
	lea	eax, DWORD PTR _rgb2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 231
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rgb2$[ebp+ecx]
	mov	DWORD PTR [edx+392], eax
; Line 232
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb2$[ebp+eax]
	mov	DWORD PTR [ecx+396], edx
; Line 233
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb2$[ebp+eax]
	mov	DWORD PTR [ecx+400], edx
$LN26@Wheel:
; Line 238
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 344				; 00000158H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN33@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN32@Wheel
$LN33@Wheel:
; Line 240
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN34@Wheel
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+404]
	addss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+404], xmm0
	jmp	SHORT $LN35@Wheel
$LN34@Wheel:
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+404]
	subss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+404], xmm0
$LN35@Wheel:
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [eax+404]
	jbe	SHORT $LN36@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+404], xmm0
$LN36@Wheel:
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+404]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN37@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+404], xmm0
$LN37@Wheel:
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+404]
	mov	DWORD PTR [eax+532], edx
$LN32@Wheel:
; Line 250
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN39@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN39@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN47@Wheel
$LN39@Wheel:
; Line 252
	mov	eax, DWORD PTR _Mode$[ebp]
	cmp	DWORD PTR [eax], 1
	je	SHORT $LN42@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN40@Wheel
$LN42@Wheel:
; Line 254
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN43@Wheel
; Line 255
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	addss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+400], xmm0
	jmp	SHORT $LN44@Wheel
$LN43@Wheel:
; Line 257
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	subss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+400], xmm0
$LN44@Wheel:
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [eax+400]
	jbe	SHORT $LN45@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+400], xmm0
$LN45@Wheel:
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+400]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN46@Wheel
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+400], xmm0
$LN46@Wheel:
; Line 260
	jmp	$LN47@Wheel
$LN40@Wheel:
; Line 262
	mov	eax, DWORD PTR _Mode$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN48@Wheel
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$InRect@M@COLORPICK@@QAE_NAAUD2D_RECT_F@@MM@Z ; COLORPICK::InRect<float>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN47@Wheel
$LN48@Wheel:
; Line 264
	movsx	eax, WORD PTR _HW$[ebp]
	test	eax, eax
	jle	SHORT $LN49@Wheel
; Line 265
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	addss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, 4
	shl	ecx, 1
	movss	DWORD PTR _hsl2$[ebp+ecx], xmm0
	jmp	SHORT $LN50@Wheel
$LN49@Wheel:
; Line 267
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	subss	xmm0, DWORD PTR __real@3c23d70a
	mov	ecx, 4
	shl	ecx, 1
	movss	DWORD PTR _hsl2$[ebp+ecx], xmm0
$LN50@Wheel:
; Line 268
	mov	eax, 4
	shl	eax, 1
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	jbe	SHORT $LN51@Wheel
	mov	eax, 4
	shl	eax, 1
	xorps	xmm0, xmm0
	movss	DWORD PTR _hsl2$[ebp+eax], xmm0
$LN51@Wheel:
; Line 269
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR _hsl2$[ebp+eax]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN52@Wheel
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _hsl2$[ebp+eax], xmm0
$LN52@Wheel:
; Line 270
	lea	eax, DWORD PTR _rgb2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hsl2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z	; COLORPICK::fromHSLtoRGB
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+561]
	test	ecx, ecx
	je	SHORT $LN53@Wheel
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?clear@?$vector@UPT@COLORPICK@@V?$allocator@UPT@COLORPICK@@@std@@@std@@QAEXXZ ; std::vector<COLORPICK::PT,std::allocator<COLORPICK::PT> >::clear
$LN53@Wheel:
; Line 273
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _hsl2$[ebp+eax]
	mov	DWORD PTR [ecx+528], edx
; Line 274
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rgb2$[ebp+ecx]
	mov	DWORD PTR [edx+392], eax
; Line 275
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb2$[ebp+eax]
	mov	DWORD PTR [ecx+396], edx
; Line 276
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rgb2$[ebp+eax]
	mov	DWORD PTR [ecx+400], edx
$LN47@Wheel:
; Line 280
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 281
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN59@Wheel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN59@Wheel:
	DD	3
	DD	$LN58@Wheel
$LN58@Wheel:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN55@Wheel
	DD	-84					; ffffffacH
	DD	12					; 0000000cH
	DD	$LN56@Wheel
	DD	-104					; ffffff98H
	DD	12					; 0000000cH
	DD	$LN57@Wheel
$LN57@Wheel:
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN56@Wheel:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN55@Wheel:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
?Wheel@COLORPICK@@QAEXIJ@Z ENDP				; COLORPICK::Wheel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?KeyDown@COLORPICK@@QAEXIJ_N00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ww$ = 8						; size = 4
___formal$ = 12						; size = 4
_S$ = 16						; size = 1
_Cx$ = 20						; size = 1
_Alt$ = 24						; size = 1
?KeyDown@COLORPICK@@QAEXIJ_N00@Z PROC			; COLORPICK::KeyDown, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 142
	cmp	DWORD PTR _ww$[ebp], 13			; 0000000dH
	jne	SHORT $LN2@KeyDown
; Line 144
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@KeyDown
; Line 146
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndEdit@COLORPICK@@QAEX_N@Z		; COLORPICK::EndEdit
; Line 147
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 148
	jmp	SHORT $LN1@KeyDown
$LN3@KeyDown:
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 151
	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@KeyDown:
; Line 153
	cmp	DWORD PTR _ww$[ebp], 27			; 0000001bH
	jne	SHORT $LN1@KeyDown
; Line 155
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@KeyDown
; Line 157
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndEdit@COLORPICK@@QAEX_N@Z		; COLORPICK::EndEdit
; Line 158
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Redraw@COLORPICK@@QAEXXZ		; COLORPICK::Redraw
; Line 159
	jmp	SHORT $LN1@KeyDown
$LN5@KeyDown:
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -2147467259		; 80004005H
; Line 162
	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@KeyDown:
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?KeyDown@COLORPICK@@QAEXIJ_N00@Z ENDP			; COLORPICK::KeyDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 4
_b$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_p$ = 12						; size = 4
_cc$ = 16						; size = 16
?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z PROC ; COLORPICK::GetD2SolidBrush, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 135
	push	4
	lea	ecx, DWORD PTR _b$[ebp]
	call	?__autoclassinit2@?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAEXI@Z
	push	0
	lea	ecx, DWORD PTR _b$[ebp]
	call	??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@PAUID2D1SolidColorBrush@@@Z ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>
; Line 136
	lea	ecx, DWORD PTR _b$[ebp]
	call	??I?$CComPtrBase@UID2D1SolidColorBrush@@@ATL@@QAEPAPAUID2D1SolidColorBrush@@XZ ; ATL::CComPtrBase<ID2D1SolidColorBrush>::operator&
	push	eax
	lea	eax, DWORD PTR _cc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
; Line 137
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@$$QAV01@@Z ; ATL::CComPtr<ID2D1SolidColorBrush>::CComPtr<ID2D1SolidColorBrush>
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _b$[ebp]
	call	??1?$CComPtr@UID2D1SolidColorBrush@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 138
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetD2Solid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@GetD2Solid:
	DD	1
	DD	$LN7@GetD2Solid
$LN7@GetD2Solid:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@GetD2Solid
$LN6@GetD2Solid:
	DB	98					; 00000062H
	DB	0
?GetD2SolidBrush@COLORPICK@@SA?AV?$CComPtr@UID2D1SolidColorBrush@@@ATL@@PAUID2D1RenderTarget@@U_D3DCOLORVALUE@@@Z ENDP ; COLORPICK::GetD2SolidBrush
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z
_TEXT	SEGMENT
tv140 = -264						; size = 4
_i$1 = -64						; size = 4
_t$2 = -52						; size = 12
_p$3 = -32						; size = 4
_q$4 = -20						; size = 4
_this$ = -8						; size = 4
_hsl$ = 8						; size = 4
_rgb$ = 12						; size = 4
?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z PROC		; COLORPICK::fromHSLtoRGB, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 104
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR __real@00800000
	comiss	xmm0, DWORD PTR [ecx+eax]
	jbe	SHORT $LN5@fromHSLtoR
; Line 105
	mov	eax, 4
	shl	eax, 1
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _rgb$[ebp]
	mov	esi, DWORD PTR _hsl$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _rgb$[ebp]
	mov	esi, DWORD PTR _rgb$[ebp]
	mov	ecx, DWORD PTR [esi+ecx]
	mov	DWORD PTR [eax+edx], ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _rgb$[ebp]
	mov	esi, DWORD PTR _rgb$[ebp]
	mov	edx, DWORD PTR [esi+edx]
	mov	DWORD PTR [eax+ecx], edx
	jmp	$LN3@fromHSLtoR
$LN5@fromHSLtoR:
; Line 106
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR __real@00800000
	comiss	xmm0, DWORD PTR [ecx+eax]
	jbe	SHORT $LN7@fromHSLtoR
; Line 107
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _rgb$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+eax], xmm0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _rgb$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+edx], xmm0
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _rgb$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [eax+edx], xmm0
	jmp	$LN3@fromHSLtoR
$LN7@fromHSLtoR:
; Line 110
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR [ecx+eax]
	jbe	SHORT $LN19@fromHSLtoR
	mov	edx, 4
	shl	edx, 1
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	addss	xmm0, DWORD PTR [ecx+eax]
	mov	eax, DWORD PTR _hsl$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR tv140[ebp], xmm0
	jmp	SHORT $LN20@fromHSLtoR
$LN19@fromHSLtoR:
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _hsl$[ebp]
	mov	esi, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR [eax+ecx]
	addss	xmm0, DWORD PTR [esi+edx]
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _hsl$[ebp]
	mov	esi, DWORD PTR _hsl$[ebp]
	movss	xmm1, DWORD PTR [eax+ecx]
	mulss	xmm1, DWORD PTR [esi+edx]
	subss	xmm0, xmm1
	movss	DWORD PTR tv140[ebp], xmm0
$LN20@fromHSLtoR:
	movss	xmm0, DWORD PTR tv140[ebp]
	movss	DWORD PTR _q$4[ebp], xmm0
; Line 111
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR [ecx+eax]
	subss	xmm0, DWORD PTR _q$4[ebp]
	movss	DWORD PTR _p$3[ebp], xmm0
; Line 112
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx]
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _t$2[ebp], xmm0
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR _t$2[ebp+4], xmm0
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _t$2[ebp+8], xmm0
; Line 114
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@fromHSLtoR
$LN2@fromHSLtoR:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@fromHSLtoR:
	cmp	DWORD PTR _i$1[ebp], 3
	jge	$LN3@fromHSLtoR
; Line 116
	mov	eax, DWORD PTR _i$1[ebp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	jbe	SHORT $LN9@fromHSLtoR
; Line 117
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	addss	xmm0, DWORD PTR __real@40c00000
	mov	ecx, DWORD PTR _i$1[ebp]
	movss	DWORD PTR _t$2[ebp+ecx*4], xmm0
	jmp	SHORT $LN11@fromHSLtoR
$LN9@fromHSLtoR:
; Line 118
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	comiss	xmm0, DWORD PTR __real@40c00000
	jbe	SHORT $LN11@fromHSLtoR
; Line 119
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	subss	xmm0, DWORD PTR __real@40c00000
	mov	ecx, DWORD PTR _i$1[ebp]
	movss	DWORD PTR _t$2[ebp+ecx*4], xmm0
$LN11@fromHSLtoR:
; Line 121
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	jbe	SHORT $LN12@fromHSLtoR
; Line 122
	movss	xmm0, DWORD PTR _q$4[ebp]
	subss	xmm0, DWORD PTR _p$3[ebp]
	mov	eax, DWORD PTR _i$1[ebp]
	mulss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	addss	xmm0, DWORD PTR _p$3[ebp]
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _rgb$[ebp]
	movss	DWORD PTR [edx+ecx*4], xmm0
	jmp	SHORT $LN17@fromHSLtoR
$LN12@fromHSLtoR:
; Line 123
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm0, DWORD PTR __real@40400000
	comiss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	jbe	SHORT $LN14@fromHSLtoR
; Line 124
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR _q$4[ebp]
	movss	DWORD PTR [ecx+eax*4], xmm0
	jmp	SHORT $LN17@fromHSLtoR
$LN14@fromHSLtoR:
; Line 125
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm0, DWORD PTR __real@40800000
	comiss	xmm0, DWORD PTR _t$2[ebp+eax*4]
	jbe	SHORT $LN16@fromHSLtoR
; Line 126
	movss	xmm0, DWORD PTR _q$4[ebp]
	subss	xmm0, DWORD PTR _p$3[ebp]
	mov	eax, DWORD PTR _i$1[ebp]
	movss	xmm1, DWORD PTR __real@40800000
	subss	xmm1, DWORD PTR _t$2[ebp+eax*4]
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _p$3[ebp]
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _rgb$[ebp]
	movss	DWORD PTR [edx+ecx*4], xmm0
	jmp	SHORT $LN17@fromHSLtoR
$LN16@fromHSLtoR:
; Line 128
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR _p$3[ebp]
	movss	DWORD PTR [ecx+eax*4], xmm0
$LN17@fromHSLtoR:
; Line 129
	jmp	$LN2@fromHSLtoR
$LN3@fromHSLtoR:
; Line 131
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@fromHSLtoR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@fromHSLtoR:
	DD	1
	DD	$LN22@fromHSLtoR
$LN22@fromHSLtoR:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN21@fromHSLtoR
$LN21@fromHSLtoR:
	DB	116					; 00000074H
	DB	0
?fromHSLtoRGB@COLORPICK@@QAEXQBMQAM@Z ENDP		; COLORPICK::fromHSLtoRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z
_TEXT	SEGMENT
tv136 = -256						; size = 4
_delta$ = -56						; size = 4
_delta2$ = -44						; size = 4
_minRGB$ = -32						; size = 4
_maxRGB$ = -20						; size = 4
_this$ = -8						; size = 4
_rgb$ = 8						; size = 4
_hsl$ = 12						; size = 4
?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z PROC		; COLORPICK::fromRGBtoHSL, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 78
	mov	eax, 4
	shl	eax, 1
	add	eax, DWORD PTR _rgb$[ebp]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	add	ecx, DWORD PTR _rgb$[ebp]
	push	ecx
	call	??$max@M@std@@YAABMABM0@Z		; std::max<float>
	add	esp, 8
	push	eax
	mov	edx, 4
	imul	eax, edx, 0
	add	eax, DWORD PTR _rgb$[ebp]
	push	eax
	call	??$max@M@std@@YAABMABM0@Z		; std::max<float>
	add	esp, 8
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _maxRGB$[ebp], xmm0
; Line 79
	mov	eax, 4
	shl	eax, 1
	add	eax, DWORD PTR _rgb$[ebp]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	add	ecx, DWORD PTR _rgb$[ebp]
	push	ecx
	call	??$min@M@std@@YAABMABM0@Z		; std::min<float>
	add	esp, 8
	push	eax
	mov	edx, 4
	imul	eax, edx, 0
	add	eax, DWORD PTR _rgb$[ebp]
	push	eax
	call	??$min@M@std@@YAABMABM0@Z		; std::min<float>
	add	esp, 8
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _minRGB$[ebp], xmm0
; Line 80
	movss	xmm0, DWORD PTR _maxRGB$[ebp]
	addss	xmm0, DWORD PTR _minRGB$[ebp]
	movss	DWORD PTR _delta2$[ebp], xmm0
; Line 81
	movss	xmm0, DWORD PTR _delta2$[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	DWORD PTR [ecx+eax], xmm0
; Line 83
	movss	xmm0, DWORD PTR _maxRGB$[ebp]
	subss	xmm0, DWORD PTR _minRGB$[ebp]
	movss	DWORD PTR _delta$[ebp], xmm0
; Line 84
	movss	xmm0, DWORD PTR __real@00800000
	comiss	xmm0, DWORD PTR _delta$[ebp]
	jbe	SHORT $LN2@fromRGBtoH
; Line 85
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _hsl$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+eax], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _hsl$[ebp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [ecx+eax], xmm0
	jmp	$LN8@fromRGBtoH
$LN2@fromRGBtoH:
; Line 88
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	comiss	xmm0, DWORD PTR __real@3f000000
	jbe	SHORT $LN10@fromRGBtoH
	movss	xmm0, DWORD PTR __real@40000000
	subss	xmm0, DWORD PTR _delta2$[ebp]
	movss	DWORD PTR tv136[ebp], xmm0
	jmp	SHORT $LN11@fromRGBtoH
$LN10@fromRGBtoH:
	movss	xmm0, DWORD PTR _delta2$[ebp]
	movss	DWORD PTR tv136[ebp], xmm0
$LN11@fromRGBtoH:
	movss	xmm0, DWORD PTR _delta$[ebp]
	divss	xmm0, DWORD PTR tv136[ebp]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _hsl$[ebp]
	movss	DWORD PTR [eax+edx], xmm0
; Line 89
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx]
	comiss	xmm0, DWORD PTR _maxRGB$[ebp]
	jb	SHORT $LN4@fromRGBtoH
; Line 91
	mov	eax, 4
	shl	eax, 0
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _rgb$[ebp]
	mov	esi, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	subss	xmm0, DWORD PTR [esi+ecx]
	divss	xmm0, DWORD PTR _delta$[ebp]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	movss	DWORD PTR [edx+ecx], xmm0
; Line 92
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [edx+ecx]
	jbe	SHORT $LN6@fromRGBtoH
; Line 93
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx]
	addss	xmm0, DWORD PTR __real@40c00000
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _hsl$[ebp]
	movss	DWORD PTR [edx+ecx], xmm0
$LN6@fromRGBtoH:
; Line 94
	jmp	$LN8@fromRGBtoH
$LN4@fromRGBtoH:
; Line 95
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	comiss	xmm0, DWORD PTR _maxRGB$[ebp]
	jb	SHORT $LN7@fromRGBtoH
; Line 96
	mov	eax, 4
	shl	eax, 1
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _rgb$[ebp]
	mov	esi, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	subss	xmm0, DWORD PTR [esi+edx]
	divss	xmm0, DWORD PTR _delta$[ebp]
	addss	xmm0, DWORD PTR __real@40000000
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _hsl$[ebp]
	movss	DWORD PTR [ecx+eax], xmm0
	jmp	SHORT $LN8@fromRGBtoH
$LN7@fromRGBtoH:
; Line 98
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _rgb$[ebp]
	mov	esi, DWORD PTR _rgb$[ebp]
	movss	xmm0, DWORD PTR [eax+ecx]
	subss	xmm0, DWORD PTR [esi+edx]
	divss	xmm0, DWORD PTR _delta$[ebp]
	addss	xmm0, DWORD PTR __real@40800000
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _hsl$[ebp]
	movss	DWORD PTR [eax+edx], xmm0
$LN8@fromRGBtoH:
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?fromRGBtoHSL@COLORPICK@@QAEXQAM0@Z ENDP		; COLORPICK::fromRGBtoHSL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z
_TEXT	SEGMENT
_C$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
_r$ = 12						; size = 4
_A$ = 16						; size = 1
?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z PROC	; COLORPICK::FromRGB, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 54
	xor	eax, eax
	mov	DWORD PTR _C$[ebp], eax
	mov	DWORD PTR _C$[ebp+4], eax
	mov	DWORD PTR _C$[ebp+8], eax
	mov	DWORD PTR _C$[ebp+12], eax
; Line 55
	mov	eax, DWORD PTR _r$[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _C$[ebp], xmm0
; Line 56
	movzx	eax, WORD PTR _r$[ebp]
	sar	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _C$[ebp+4], xmm0
; Line 57
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _C$[ebp+8], xmm0
; Line 58
	movzx	eax, BYTE PTR _A$[ebp]
	test	eax, eax
	je	SHORT $LN2@FromRGB
; Line 59
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?GetAValue@COLORPICK@@SAEK@Z		; COLORPICK::GetAValue
	add	esp, 4
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _C$[ebp+12], xmm0
	jmp	SHORT $LN3@FromRGB
$LN2@FromRGB:
; Line 61
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _C$[ebp+12], xmm0
$LN3@FromRGB:
; Line 62
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _C$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _C$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _C$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 63
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FromRGB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@FromRGB:
	DD	1
	DD	$LN6@FromRGB
$LN6@FromRGB:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN5@FromRGB
$LN5@FromRGB:
	DB	67					; 00000043H
	DB	0
?FromRGB@COLORPICK@@SA?AU_D3DCOLORVALUE@@K_N@Z ENDP	; COLORPICK::FromRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAValue@COLORPICK@@SAEK@Z
_TEXT	SEGMENT
_rgb$ = 8						; size = 4
?GetAValue@COLORPICK@@SAEK@Z PROC			; COLORPICK::GetAValue, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 48
	mov	eax, DWORD PTR _rgb$[ebp]
	shr	eax, 24					; 00000018H
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAValue@COLORPICK@@SAEK@Z ENDP			; COLORPICK::GetAValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToRGB@COLORPICK@@SAK_NU_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
_r$ = -8						; size = 4
_A$ = 8							; size = 1
_C$ = 12						; size = 16
?ToRGB@COLORPICK@@SAK_NU_D3DCOLORVALUE@@@Z PROC		; COLORPICK::ToRGB, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\extern\colorpick.hpp
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A51590B7_colorpick@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 40
	movss	xmm0, DWORD PTR _C$[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si eax, xmm0
	movzx	ecx, al
	movss	xmm0, DWORD PTR _C$[ebp+4]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si edx, xmm0
	movzx	eax, dl
	shl	eax, 8
	or	ecx, eax
	movss	xmm0, DWORD PTR _C$[ebp+8]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si edx, xmm0
	movzx	eax, dl
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	DWORD PTR _r$[ebp], ecx
; Line 41
	movzx	eax, BYTE PTR _A$[ebp]
	test	eax, eax
	je	SHORT $LN2@ToRGB
; Line 42
	movss	xmm0, DWORD PTR _C$[ebp+12]
	mulss	xmm0, DWORD PTR __real@437f0000
	call	__ftoui3
	shl	eax, 24					; 00000018H
	or	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _r$[ebp], eax
$LN2@ToRGB:
; Line 43
	mov	eax, DWORD PTR _r$[ebp]
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ToRGB@COLORPICK@@SAK_NU_D3DCOLORVALUE@@@Z ENDP		; COLORPICK::ToRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ID2D1Factory>::~CComPtr<ID2D1Factory>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UID2D1Factory@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1Factory>::~CComPtrBase<ID2D1Factory>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ID2D1Factory>::~CComPtr<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ID2D1Factory>::CComPtr<ID2D1Factory>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1Factory@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1Factory>::CComPtrBase<ID2D1Factory>
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UID2D1Factory@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ID2D1Factory>::CComPtr<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??7?$CComPtrBase@UID2D1Factory@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
??7?$CComPtrBase@UID2D1Factory@@@ATL@@QBE_NXZ PROC	; ATL::CComPtrBase<ID2D1Factory>::operator!, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CComPtrBase@UID2D1Factory@@@ATL@@QBE_NXZ ENDP	; ATL::CComPtrBase<ID2D1Factory>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1Factory@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1Factory@@@1@XZ PROC ; ATL::CComPtrBase<ID2D1Factory>::operator->, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	204					; 000000ccH
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1Factory@@@1@XZ ENDP ; ATL::CComPtrBase<ID2D1Factory>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UID2D1Factory@@@ATL@@QAEPAPAUID2D1Factory@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UID2D1Factory@@@ATL@@QAEPAPAUID2D1Factory@@XZ PROC ; ATL::CComPtrBase<ID2D1Factory>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UID2D1Factory@@@ATL@@QAEPAPAUID2D1Factory@@XZ ENDP ; ATL::CComPtrBase<ID2D1Factory>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAUID2D1Factory@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAUID2D1Factory@@XZ PROC ; ATL::CComPtrBase<ID2D1Factory>::operator ID2D1Factory *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UID2D1Factory@@@ATL@@QBEPAUID2D1Factory@@XZ ENDP ; ATL::CComPtrBase<ID2D1Factory>::operator ID2D1Factory *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UID2D1Factory@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UID2D1Factory@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<ID2D1Factory>::~CComPtrBase<ID2D1Factory>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UID2D1Factory@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<ID2D1Factory>::~CComPtrBase<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1Factory@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtrBase@UID2D1Factory@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<ID2D1Factory>::CComPtrBase<ID2D1Factory>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UID2D1Factory@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<ID2D1Factory>::CComPtrBase<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ID2D1HwndRenderTarget>::~CComPtr<ID2D1HwndRenderTarget>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::~CComPtrBase<ID2D1HwndRenderTarget>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ID2D1HwndRenderTarget>::~CComPtr<ID2D1HwndRenderTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ID2D1HwndRenderTarget>::CComPtr<ID2D1HwndRenderTarget>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::CComPtrBase<ID2D1HwndRenderTarget>
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ID2D1HwndRenderTarget>::CComPtr<ID2D1HwndRenderTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Release@?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -20						; size = 4
_this$ = -8						; size = 4
?Release@?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEXXZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::Release, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx
; Line 230
	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $LN1@Release
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 233
	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Release:
; Line 235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??7?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
??7?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBE_NXZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator!, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBE_NXZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator->, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	204					; 000000ccH
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UID2D1HwndRenderTarget@@@1@XZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEPAPAUID2D1HwndRenderTarget@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEPAPAUID2D1HwndRenderTarget@@XZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAEPAPAUID2D1HwndRenderTarget@@XZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAUID2D1HwndRenderTarget@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAUID2D1HwndRenderTarget@@XZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator ID2D1HwndRenderTarget *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QBEPAUID2D1HwndRenderTarget@@XZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::operator ID2D1HwndRenderTarget *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::~CComPtrBase<ID2D1HwndRenderTarget>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::~CComPtrBase<ID2D1HwndRenderTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::CComPtrBase<ID2D1HwndRenderTarget>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UID2D1HwndRenderTarget@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<ID2D1HwndRenderTarget>::CComPtrBase<ID2D1HwndRenderTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDWriteFactory>::~CComPtr<IDWriteFactory>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIDWriteFactory@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDWriteFactory>::~CComPtrBase<IDWriteFactory>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDWriteFactory>::~CComPtr<IDWriteFactory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDWriteFactory>::CComPtr<IDWriteFactory>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIDWriteFactory@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDWriteFactory>::CComPtrBase<IDWriteFactory>
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIDWriteFactory@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDWriteFactory>::CComPtr<IDWriteFactory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??7?$CComPtrBase@UIDWriteFactory@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
??7?$CComPtrBase@UIDWriteFactory@@@ATL@@QBE_NXZ PROC	; ATL::CComPtrBase<IDWriteFactory>::operator!, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CComPtrBase@UIDWriteFactory@@@ATL@@QBE_NXZ ENDP	; ATL::CComPtrBase<IDWriteFactory>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$CComPtrBase@UIDWriteFactory@@@ATL@@QAEPAPAUIDWriteFactory@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??I?$CComPtrBase@UIDWriteFactory@@@ATL@@QAEPAPAUIDWriteFactory@@XZ PROC ; ATL::CComPtrBase<IDWriteFactory>::operator&, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	199					; 000000c7H
	push	OFFSET ??_C@_1LO@JCOFCHDK@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@operator
	int	3
$LN3@operator:
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIDWriteFactory@@@ATL@@QAEPAPAUIDWriteFactory@@XZ ENDP ; ATL::CComPtrBase<IDWriteFactory>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CComPtrBase@UIDWriteFactory@@@ATL@@QBEPAUIDWriteFactory@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CComPtrBase@UIDWriteFactory@@@ATL@@QBEPAUIDWriteFactory@@XZ PROC ; ATL::CComPtrBase<IDWriteFactory>::operator IDWriteFactory *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIDWriteFactory@@@ATL@@QBEPAUIDWriteFactory@@XZ ENDP ; ATL::CComPtrBase<IDWriteFactory>::operator IDWriteFactory *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CComPtrBase@UIDWriteFactory@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CComPtrBase@UIDWriteFactory@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IDWriteFactory>::~CComPtrBase<IDWriteFactory>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@CComPtrBas
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CComPtrBas:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIDWriteFactory@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IDWriteFactory>::~CComPtrBase<IDWriteFactory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CComPtrBase@UIDWriteFactory@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CComPtrBase@UIDWriteFactory@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IDWriteFactory>::CComPtrBase<IDWriteFactory>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __68AEF2DD_atlcomcli@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIDWriteFactory@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IDWriteFactory>::CComPtrBase<IDWriteFactory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0COLORPICKOPT@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0COLORPICKOPT@@QAE@XZ PROC				; COLORPICKOPT::COLORPICKOPT, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+9], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+11], 1
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [eax+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0COLORPICKOPT@@QAE@XZ ENDP				; COLORPICKOPT::COLORPICKOPT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	??1CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::~CAtlWinModule
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2972
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	??0CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::CAtlWinModule
	push	OFFSET ??__F_AtlWinModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlWinModule''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2956
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 2957
	mov	ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; Line 2958
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2951
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 2952
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Term@CAtlWinModule@ATL@@QAEXXZ		; ATL::CAtlWinModule::Term
; Line 2953
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CAtlWinModule@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -20						; size = 4
_this$ = -8						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2937
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
; Line 2939
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 44			; 0000002cH
; Line 2940
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
	mov	DWORD PTR _hr$[ebp], eax
; Line 2941
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CAtlWinMod
; Line 2943
	xor	eax, eax
	jne	SHORT $LN4@CAtlWinMod
	mov	esi, esp
	push	OFFSET ??_C@_13COJANIEC@?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	2943					; 00000b7fH
	push	OFFSET ??_C@_1LK@HHCFJJEI@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@CAtlWinMod
	int	3
$LN4@CAtlWinMod:
; Line 2944
	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
; Line 2945
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@CAtlWinMod:
; Line 2948
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	??1CAtlComModule@ATL@@QAE@XZ		; ATL::CAtlComModule::~CAtlComModule
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2716
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	??0CAtlComModule@ATL@@QAE@XZ		; ATL::CAtlComModule::CAtlComModule
	push	OFFSET ??__F_AtlComModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlComModule''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_factory$1 = -44					; size = 4
_pCache$2 = -32						; size = 4
_ppEntry$3 = -20					; size = 4
_this$ = -8						; size = 4
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2613
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 2614
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@Term
; Line 2615
	jmp	$LN1@Term
$LN5@Term:
; Line 2617
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ppEntry$3[ebp], ecx
	jmp	SHORT $LN4@Term
$LN2@Term:
	mov	eax, DWORD PTR _ppEntry$3[ebp]
	add	eax, 4
	mov	DWORD PTR _ppEntry$3[ebp], eax
$LN4@Term:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ppEntry$3[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN3@Term
; Line 2619
	mov	eax, DWORD PTR _ppEntry$3[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Term
; Line 2621
	mov	eax, DWORD PTR _ppEntry$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pCache$2[ebp], edx
; Line 2623
	mov	eax, DWORD PTR _pCache$2[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Term
; Line 2626
	mov	esi, esp
	mov	eax, DWORD PTR _pCache$2[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__DecodePointer@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _factory$1[ebp], eax
; Line 2628
	mov	eax, DWORD PTR _factory$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _factory$1[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2629
	mov	eax, DWORD PTR _pCache$2[ebp]
	mov	DWORD PTR [eax], 0
$LN6@Term:
; Line 2632
	jmp	SHORT $LN2@Term
$LN3@Term:
; Line 2633
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Term@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Term
; Line 2637
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Term:
; Line 2638
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAtlComModule@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 2608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Term@CAtlComModule@ATL@@QAEXXZ		; ATL::CAtlComModule::Term
; Line 2609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_ATL_COM_MODULE70@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlComModule@ATL@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 2586
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_ATL_COM_MODULE70@ATL@@QAE@XZ
; Line 2588
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2590
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ___ImageBase
; Line 2592
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], OFFSET ___pobjMapEntryFirst+4
; Line 2593
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ___pobjMapEntryLast
; Line 2595
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax
	jge	SHORT $LN2@CAtlComMod
; Line 2597
	push	OFFSET ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
	push	0
	mov	ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
	call	??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
	push	eax
	push	2597					; 00000a25H
	push	OFFSET ??_C@_0FN@LAAFIOOO@D?3?2Microsoft?5Visual?5Studio?22019@
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H
; Line 2598
	xor	eax, eax
	jne	SHORT $LN4@CAtlComMod
	mov	esi, esp
	push	OFFSET ??_C@_13COJANIEC@?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	2598					; 00000a26H
	push	OFFSET ??_C@_1LK@HHCFJJEI@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@CAtlComMod
	int	3
$LN4@CAtlComMod:
; Line 2599
	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
; Line 2600
	jmp	SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:
; Line 2603
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 40			; 00000028H
$LN1@CAtlComMod:
; Line 2604
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 7652
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 7653
	cmp	DWORD PTR _pWinModule$[ebp], 0
	jne	SHORT $LN5@AtlWinModu
; Line 7654
	mov	eax, -2147024809			; 80070057H
	jmp	$LN1@AtlWinModu
$LN5@AtlWinModu:
; Line 7655
	mov	eax, DWORD PTR _pWinModule$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN6@AtlWinModu
; Line 7656
	xor	eax, eax
	jmp	SHORT $LN1@AtlWinModu
$LN6@AtlWinModu:
; Line 7657
	mov	eax, DWORD PTR _pWinModule$[ebp]
	cmp	DWORD PTR [eax], 44			; 0000002cH
	je	SHORT $LN7@AtlWinModu
; Line 7658
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN1@AtlWinModu
$LN7@AtlWinModu:
; Line 7660
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@AtlWinModu:
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
	cmp	DWORD PTR _i$1[ebp], eax
	jge	SHORT $LN3@AtlWinModu
; Line 7661
	mov	esi, esp
	mov	eax, DWORD PTR _hInst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
	movzx	edx, WORD PTR [eax]
	push	edx
	call	DWORD PTR __imp__UnregisterClassW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:
; Line 7662
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
; Line 7663
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 4
	call	?Term@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Term
; Line 7664
	mov	eax, DWORD PTR _pWinModule$[ebp]
	mov	DWORD PTR [eax], 0
; Line 7665
	xor	eax, eax
$LN1@AtlWinModu:
; Line 7666
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_hr$ = -8						; size = 4
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
; Line 8396
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E85C1562_atlbase@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 8397
	cmp	DWORD PTR _pWinModule$[ebp], 0
	jne	SHORT $LN2@AtlWinModu
; Line 8398
	mov	eax, -2147024809			; 80070057H
	jmp	$LN1@AtlWinModu
$LN2@AtlWinModu:
; Line 8401
	mov	eax, DWORD PTR _pWinModule$[ebp]
	cmp	DWORD PTR [eax], 44			; 0000002cH
	je	SHORT $LN3@AtlWinModu
; Line 8402
	mov	eax, -2147024809			; 80070057H
	jmp	$LN1@AtlWinModu
$LN3@AtlWinModu:
; Line 8404
	mov	eax, DWORD PTR _pWinModule$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 8406
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 4
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	mov	DWORD PTR _hr$[ebp], eax
; Line 8407
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@AtlWinModu
; Line 8409
	push	OFFSET ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
	push	0
	mov	ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
	call	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
	push	eax
	mov	eax, DWORD PTR ?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA
	add	eax, 13					; 0000000dH
	push	eax
	push	OFFSET ??_C@_0FN@LAAFIOOO@D?3?2Microsoft?5Visual?5Studio?22019@
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H
; Line 8410
	xor	eax, eax
	jne	SHORT $LN4@AtlWinModu
	mov	esi, esp
	push	OFFSET ??_C@_13COJANIEC@?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	mov	ecx, DWORD PTR ?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA
	add	ecx, 14					; 0000000eH
	push	ecx
	push	OFFSET ??_C@_1LK@HHCFJJEI@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@AtlWinModu
	int	3
$LN4@AtlWinModu:
; Line 8412
	mov	eax, DWORD PTR _hr$[ebp]
$LN1@AtlWinModu:
; Line 8413
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::~CComCriticalSection
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::CComCriticalSection
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::~CComCriticalSection
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __65CBA1A4_atlsimpcoll@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 237
	cmp	DWORD PTR _nIndex$[ebp], 0
	jl	SHORT $LN5@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	237					; 000000edH
	push	OFFSET ??_C@_1MC@BJDPJDEC@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
; Line 238
	cmp	DWORD PTR _nIndex$[ebp], 0
	jl	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $LN2@operator
$LN3@operator:
; Line 240
	push	1
	push	-1073741684				; c000008cH
	call	?_AtlRaiseException@ATL@@YAXKK@Z	; ATL::_AtlRaiseException
$LN2@operator:
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
$LN4@operator:
; Line 243
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __65CBA1A4_atlsimpcoll@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@RemoveAll
; Line 218
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@RemoveAll
$LN2@RemoveAll:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@RemoveAll
; Line 219
	jmp	SHORT $LN2@RemoveAll
$LN3@RemoveAll:
; Line 220
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@RemoveAll:
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __65CBA1A4_atlsimpcoll@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __65CBA1A4_atlsimpcoll@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __65CBA1A4_atlsimpcoll@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::~CComCriticalSection
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::CComCriticalSection
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __248C1FC3_atlcore@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 290
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __248C1FC3_atlcore@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	xor	eax, eax
; Line 157
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_hRes$ = -20						; size = 4
_this$ = -8						; size = 4
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __248C1FC3_atlcore@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 144
	mov	DWORD PTR _hRes$[ebp], 0
; Line 145
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@Init
; Line 147
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	mov	DWORD PTR _hRes$[ebp], eax
$LN2@Init:
; Line 150
	mov	eax, DWORD PTR _hRes$[ebp]
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __248C1FC3_atlcore@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __248C1FC3_atlcore@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 125
	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwinverapi.h
; Line 727
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __30BD78D5_atlwinverapi@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 730
	mov	esi, esp
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwSpinCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpCriticalSection$[ebp]
	push	edx
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlexcept.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B7C315CE_atlexcept@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 31
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _dwExceptionFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwExceptionCode$[ebp]
	push	ecx
	call	DWORD PTR __imp__RaiseException@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ
_TEXT	SEGMENT
_ptr$ = -36						; size = 4
_ple$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 437
	lea	ecx, DWORD PTR _ple$[ebp]
	call	??0CPreserveLastError@ATL@@QAE@XZ	; ATL::CPreserveLastError::CPreserveLastError
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 438
	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax
; Line 439
	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z	; ATL::CTrace::TraceV
	add	esp, 24					; 00000018H
; Line 440
	mov	DWORD PTR _ptr$[ebp], 0
; Line 441
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ple$[ebp]
	call	??1CPreserveLastError@ATL@@QAE@XZ	; ATL::CPreserveLastError::~CPreserveLastError
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@operator:
	DD	1
	DD	$LN6@operator
$LN6@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@operator
$LN4@operator:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ$0:
	lea	ecx, DWORD PTR _ple$[ebp]
	jmp	??1CPreserveLastError@ATL@@QAE@XZ	; ATL::CPreserveLastError::~CPreserveLastError
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 397
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 398
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 390
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 392
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 393
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 456
	mov	DWORD PTR _nBytes$[ebp], 0
; Line 457
	push	2
	mov	eax, DWORD PTR _nElements$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nBytes$[ebp]
	push	ecx
	call	??$AtlMultiply@I@ATL@@YAJPAIII@Z	; ATL::AtlMultiply<unsigned int>
	add	esp, 12					; 0000000cH
	test	eax, eax
	jge	SHORT $LN2@Allocate
; Line 459
	xor	al, al
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:
; Line 461
	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:
; Line 462
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Allocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@Allocate:
	DD	1
	DD	$LN5@Allocate
$LN5@Allocate:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Allocate
$LN4@Allocate:
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 435
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
; Line 436
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 407
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@CCRTAllocator@ATL@@SAXPAX@Z	; ATL::CCRTAllocator::Free
	add	esp, 4
; Line 409
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@AllocateBy
	mov	esi, esp
	push	OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	382					; 0000017eH
	push	OFFSET ??_C@_1LM@NDOEFOIE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@AllocateBy
	int	3
$LN4@AllocateBy:
; Line 383
	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	call	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z	; ATL::CCRTAllocator::Allocate
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@AllocateBy
; Line 385
	xor	al, al
	jmp	SHORT $LN1@AllocateBy
$LN2@AllocateBy:
; Line 387
	mov	al, 1
$LN1@AllocateBy:
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 350
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
; Line 351
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 337
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z
_TEXT	SEGMENT
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 330
	cmp	DWORD PTR _pszCategory$[ebp], 0
	jne	SHORT $LN2@RegisterCa
; Line 332
	jmp	$LN1@RegisterCa
$LN2@RegisterCa:
; Line 335
	cmp	DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
	jb	SHORT $LN3@RegisterCa
; Line 337
	xor	eax, eax
	jne	SHORT $LN5@RegisterCa
	mov	esi, esp
	push	OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	push	337					; 00000151H
	push	OFFSET ??_C@_1LM@KAEPDMAH@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@RegisterCa
	int	3
$LN5@RegisterCa:
; Line 338
	jmp	SHORT $LN1@RegisterCa
$LN3@RegisterCa:
; Line 341
	imul	eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
	mov	ecx, DWORD PTR _nCategory$[ebp]
	mov	DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx
; Line 343
	mov	esi, esp
	mov	eax, DWORD PTR _pszCategory$[ebp]
	push	eax
	push	127					; 0000007fH
	imul	ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
	add	ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
	push	ecx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 354
	mov	eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
	add	eax, 1
	mov	DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:
; Line 355
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z
_TEXT	SEGMENT
_vsnwprintf_result$ = -48				; size = 4
_wszBuf$ = -36						; size = 4
_cchNeeded$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z PROC		; ATL::CTrace::TraceV, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 281
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	esi, esp
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pwszFmt$[ebp]
	push	ecx
	push	0
	push	0
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax]
	or	edx, 2
	mov	eax, DWORD PTR [eax+4]
	or	edx, 4
	push	eax
	push	edx
	call	DWORD PTR __imp____stdio_common_vswprintf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _cchNeeded$[ebp], eax
; Line 295
	cmp	DWORD PTR _cchNeeded$[ebp], 0
	jge	SHORT $LN2@TraceV
; Line 297
	jmp	$LN1@TraceV
$LN2@TraceV:
; Line 300
	push	4
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 301
	mov	eax, DWORD PTR _cchNeeded$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@TraceV
; Line 303
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
	jmp	$LN1@TraceV
$LN3@TraceV:
; Line 306
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
	mov	ecx, 2
	imul	edx, ecx, 0
	xor	ecx, ecx
	mov	WORD PTR [eax+edx], cx
; Line 315
	mov	esi, esp
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pwszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cchNeeded$[ebp]
	push	edx
	mov	eax, DWORD PTR _cchNeeded$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4
	mov	edx, DWORD PTR [eax+4]
	push	edx
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsnwprintf_s
	add	esp, 32					; 00000020H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _vsnwprintf_result$[ebp], eax
; Line 319
	cmp	DWORD PTR _vsnwprintf_result$[ebp], 0
	jge	SHORT $LN4@TraceV
; Line 322
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
	jmp	SHORT $LN1@TraceV
$LN4@TraceV:
; Line 325
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
	push	eax
	mov	eax, DWORD PTR _nLevel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwCategory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLine$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszFileName$[ebp]
	push	eax
	call	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z	; ATL::CTrace::TraceV
	add	esp, 20					; 00000014H
; Line 326
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@TraceV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@TraceV:
	DD	1
	DD	$LN9@TraceV
$LN9@TraceV:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN7@TraceV
$LN7@TraceV:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z$0:
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	jmp	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_fileName$ = -2632					; size = 520
_wszBuf$ = -2104					; size = 4
_chCount$ = -2092					; size = 4
_pwszCategoryName$ = -2080				; size = 4
_categoryLength$ = -2068				; size = 4
_wszCategory$ = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 3788				; 00000eccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-3788]
	mov	ecx, 947				; 000003b3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 151
	cmp	DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1	; ATL::CTrace::m_nLevel
	je	SHORT $LN3@TraceV
	mov	eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
	cmp	eax, DWORD PTR _nLevel$[ebp]
	jb	SHORT $LN3@TraceV
	mov	eax, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
	and	eax, DWORD PTR _dwCategory$[ebp]
	jne	SHORT $LN2@TraceV
$LN3@TraceV:
; Line 153
	jmp	$LN1@TraceV
$LN2@TraceV:
; Line 156
	push	2048					; 00000800H
	push	0
	lea	eax, DWORD PTR _wszCategory$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 157
	mov	DWORD PTR _categoryLength$[ebp], 0
; Line 158
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	call	?GetCategoryName@CTrace@ATL@@CAPA_WI@Z	; ATL::CTrace::GetCategoryName
	add	esp, 4
	mov	DWORD PTR _pwszCategoryName$[ebp], eax
; Line 159
	cmp	DWORD PTR _pwszCategoryName$[ebp], 0
	je	SHORT $LN4@TraceV
; Line 161
	mov	eax, DWORD PTR _pwszCategoryName$[ebp]
	push	eax
	push	OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _wszCategory$[ebp]
	push	ecx
	call	_swprintf_s
	add	esp, 16					; 00000010H
	mov	DWORD PTR _categoryLength$[ebp], eax
	cmp	DWORD PTR _categoryLength$[ebp], -1
	jne	SHORT $LN6@TraceV
; Line 163
	jmp	$LN1@TraceV
$LN6@TraceV:
; Line 165
	jmp	SHORT $LN5@TraceV
$LN4@TraceV:
; Line 168
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	push	OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _wszCategory$[ebp]
	push	ecx
	call	_swprintf_s
	add	esp, 16					; 00000010H
	mov	DWORD PTR _categoryLength$[ebp], eax
	cmp	DWORD PTR _categoryLength$[ebp], -1
	jne	SHORT $LN5@TraceV
; Line 170
	jmp	$LN1@TraceV
$LN5@TraceV:
; Line 174
	mov	esi, esp
	mov	eax, DWORD PTR _pwszMessage$[ebp]
	push	eax
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _categoryLength$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _chCount$[ebp], edx
; Line 175
	push	4
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
; Line 176
	mov	eax, DWORD PTR _chCount$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@TraceV
; Line 178
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
	jmp	$LN1@TraceV
$LN8@TraceV:
; Line 181
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
	mov	ecx, 2
	imul	edx, ecx, 0
	xor	ecx, ecx
	mov	WORD PTR [eax+edx], cx
; Line 183
	mov	eax, DWORD PTR _pwszMessage$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wszCategory$[ebp]
	push	ecx
	push	OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
	mov	edx, DWORD PTR _chCount$[ebp]
	push	edx
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
	push	eax
	call	_swprintf_s
	add	esp, 20					; 00000014H
	cmp	eax, -1
	jne	SHORT $LN9@TraceV
; Line 185
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
	jmp	$LN1@TraceV
$LN9@TraceV:
; Line 188
	push	520					; 00000208H
	push	0
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 192
	mov	eax, DWORD PTR _pszFileName$[ebp]
	push	eax
	push	OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
	push	260					; 00000104H
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_swprintf_s
	add	esp, 16					; 00000010H
	cmp	eax, -1
	jne	SHORT $LN10@TraceV
; Line 195
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
	jmp	SHORT $LN1@TraceV
$LN10@TraceV:
; Line 198
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
	push	0
	mov	eax, DWORD PTR _nLine$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	call	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@TraceV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 3788				; 00000eccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@TraceV:
	DD	3
	DD	$LN16@TraceV
$LN16@TraceV:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN13@TraceV
	DD	-2104					; fffff7c8H
	DD	4
	DD	$LN14@TraceV
	DD	-2632					; fffff5b8H
	DD	520					; 00000208H
	DD	$LN15@TraceV
$LN15@TraceV:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN14@TraceV:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN13@TraceV:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 133
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@GetCategor
$LN2@GetCategor:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@GetCategor:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
	jae	SHORT $LN3@GetCategor
; Line 135
	imul	eax, DWORD PTR _i$1[ebp], 260
	mov	ecx, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax]
	cmp	ecx, DWORD PTR _nCategory$[ebp]
	jne	SHORT $LN5@GetCategor
; Line 137
	imul	eax, DWORD PTR _i$1[ebp], 260
	add	eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
	jmp	SHORT $LN1@GetCategor
$LN5@GetCategor:
; Line 139
	jmp	SHORT $LN2@GetCategor
$LN3@GetCategor:
; Line 141
	xor	eax, eax
$LN1@GetCategor:
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI@
	mov	ecx, OFFSET ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
	call	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	4194304					; 00400000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc@
	mov	ecx, OFFSET ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
	call	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	2097152					; 00200000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt@
	mov	ecx, OFFSET ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
	call	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	1048576					; 00100000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl@
	mov	ecx, OFFSET ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
	call	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp@
	mov	ecx, OFFSET ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
	call	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	262144					; 00040000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@
	mov	ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
	call	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	131072					; 00020000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl@
	mov	ecx, OFFSET ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
	call	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	65536					; 00010000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe@
	mov	ecx, OFFSET ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
	call	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	32768					; 00008000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe@
	mov	ecx, OFFSET ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
	call	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	16384					; 00004000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi@
	mov	ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
	call	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	8192					; 00002000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt@
	mov	ecx, OFFSET ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
	call	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	4096					; 00001000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl@
	mov	ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
	call	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	2048					; 00000800H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn@
	mov	ecx, OFFSET ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
	call	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	1024					; 00000400H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi@
	mov	ecx, OFFSET ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
	call	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	512					; 00000200H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn@
	mov	ecx, OFFSET ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
	call	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	256					; 00000100H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg@
	mov	ecx, OFFSET ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
	call	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	128					; 00000080H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@
	mov	ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
	call	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	64					; 00000040H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi@
	mov	ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
	call	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 81
	mov	eax, 32					; 00000020H
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	32					; 00000020H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn@
	mov	ecx, OFFSET ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
	call	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	16					; 00000010H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr@
	mov	ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
	call	??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	8
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI@
	mov	ecx, OFFSET ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
	call	??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	4
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM@
	mov	ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
	call	??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 81
	mov	eax, 2
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	2
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl@
	mov	ecx, OFFSET ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
	call	??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	1
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
; Line 480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __84D67D56_atltrace@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 481
	push	524288					; 00080000H
	mov	eax, DWORD PTR _pszCategoryName$[ebp]
	push	eax
	call	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
	add	esp, 8
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 266
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 267
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 268
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 262
	mov	esi, esp
	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -12					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __3E27AA6F_atlalloc@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 136
	mov	eax, DWORD PTR _iLeft$[ebp]
	mul	DWORD PTR _iRight$[ebp]
	mov	DWORD PTR _i64Result$[ebp], eax
	mov	DWORD PTR _i64Result$[ebp+4], edx
; Line 137
	cmp	DWORD PTR _i64Result$[ebp+4], 0
	ja	SHORT $LN4@AtlMultipl
	cmp	DWORD PTR _i64Result$[ebp], -1
	jbe	SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:
; Line 139
	push	534					; 00000216H
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	jmp	SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:
; Line 141
	mov	eax, DWORD PTR _i64Result$[ebp]
	mov	ecx, DWORD PTR _piResult$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 142
	xor	eax, eax
$LN1@AtlMultipl:
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Collision@@YAHUCollision_area@@0@Z
_TEXT	SEGMENT
_dest$ = -72						; size = 16
_rect2$ = -48						; size = 16
_rect1$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_sprite1$ = 8						; size = 16
_sprite2$ = 24						; size = 16
?Collision@@YAHUCollision_area@@0@Z PROC		; Collision, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\collision_d2d1.h
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __7E37EEE2_collision_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 16
	mov	eax, DWORD PTR _sprite1$[ebp+8]
	add	eax, 1
	mov	DWORD PTR _rect1$[ebp], eax
; Line 17
	mov	eax, DWORD PTR _sprite1$[ebp+12]
	add	eax, 1
	mov	DWORD PTR _rect1$[ebp+4], eax
; Line 18
	mov	eax, DWORD PTR _sprite1$[ebp]
	mov	ecx, DWORD PTR _sprite1$[ebp+8]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _rect1$[ebp+8], edx
; Line 19
	mov	eax, DWORD PTR _sprite1$[ebp+4]
	mov	ecx, DWORD PTR _sprite1$[ebp+12]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _rect1$[ebp+12], edx
; Line 22
	mov	eax, DWORD PTR _sprite2$[ebp+8]
	add	eax, 1
	mov	DWORD PTR _rect2$[ebp], eax
; Line 23
	mov	eax, DWORD PTR _sprite2$[ebp+12]
	add	eax, 1
	mov	DWORD PTR _rect2$[ebp+4], eax
; Line 24
	mov	eax, DWORD PTR _sprite2$[ebp]
	mov	ecx, DWORD PTR _sprite2$[ebp+8]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _rect2$[ebp+8], edx
; Line 25
	mov	eax, DWORD PTR _sprite2$[ebp+4]
	mov	ecx, DWORD PTR _sprite2$[ebp+12]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _rect2$[ebp+12], edx
; Line 28
	mov	esi, esp
	lea	eax, DWORD PTR _rect2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rect1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 29
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Collision
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Collision:
	DD	3
	DD	$LN6@Collision
$LN6@Collision:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@Collision
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN4@Collision
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN5@Collision
$LN5@Collision:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN4@Collision:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN3@Collision:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
?Collision@@YAHUCollision_area@@0@Z ENDP		; Collision
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Zoom@@YAXPAUID2D1RenderTarget@@MM@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
_DPIsizeX$ = 12						; size = 4
_DPIsizeY$ = 16						; size = 4
?Zoom@@YAXPAUID2D1RenderTarget@@MM@Z PROC		; Zoom, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Grid_d2d1.h
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6A8A9493_Grid_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 29
	mov	esi, esp
	push	ecx
	movss	xmm0, DWORD PTR _DPIsizeY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _DPIsizeX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+204]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 30
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Zoom@@YAXPAUID2D1RenderTarget@@MM@Z ENDP		; Zoom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawGrid@@YAXPAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@HH@Z
_TEXT	SEGMENT
$T1 = -296						; size = 8
$T2 = -280						; size = 8
$T3 = -264						; size = 8
$T4 = -248						; size = 8
_y$5 = -40						; size = 4
_x$6 = -28						; size = 4
_rtSize$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_target$ = 8						; size = 4
_brush$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
?DrawGrid@@YAXPAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@HH@Z PROC ; DrawGrid, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Grid_d2d1.h
; Line 4
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __6A8A9493_Grid_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 5
	mov	esi, esp
	lea	eax, DWORD PTR _rtSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+212]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6
	mov	DWORD PTR _x$6[ebp], 0
	jmp	SHORT $LN4@DrawGrid
$LN2@DrawGrid:
	mov	eax, DWORD PTR _x$6[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _x$6[ebp], eax
$LN4@DrawGrid:
	mov	eax, DWORD PTR _x$6[ebp]
	cmp	eax, DWORD PTR _width$[ebp]
	jge	$LN3@DrawGrid
; Line 8
	push	ecx
	movss	xmm0, DWORD PTR _rtSize$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	cvtsi2ss xmm0, DWORD PTR _x$6[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR $T4[ebp+4], edx
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	cvtsi2ss xmm0, DWORD PTR _x$6[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR $T3[ebp+4], edx
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _brush$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T4[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR $T3[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 14
	jmp	$LN2@DrawGrid
$LN3@DrawGrid:
; Line 16
	mov	DWORD PTR _y$5[ebp], 0
	jmp	SHORT $LN7@DrawGrid
$LN5@DrawGrid:
	mov	eax, DWORD PTR _y$5[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _y$5[ebp], eax
$LN7@DrawGrid:
	mov	eax, DWORD PTR _y$5[ebp]
	cmp	eax, DWORD PTR _height$[ebp]
	jge	$LN6@DrawGrid
; Line 18
	cvtsi2ss xmm0, DWORD PTR _y$5[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _rtSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR $T2[ebp+4], edx
	cvtsi2ss xmm0, DWORD PTR _y$5[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _brush$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR $T1[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 24
	jmp	$LN5@DrawGrid
$LN6@DrawGrid:
; Line 25
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DrawGrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@DrawGrid:
	DD	1
	DD	$LN10@DrawGrid
$LN10@DrawGrid:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN9@DrawGrid
$LN9@DrawGrid:
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?DrawGrid@@YAXPAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@HH@Z ENDP ; DrawGrid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Trojuhelnik@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@Trojuhelnik@@QAEXI@Z PROC		; Trojuhelnik::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@Trojuhelnik@@QAEXI@Z ENDP		; Trojuhelnik::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Move2@Trojuhelnik@@QAEXHH_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_plus_x$ = 8						; size = 4
_plus_y$ = 12						; size = 4
_create_copy$ = 16					; size = 1
?Move2@Trojuhelnik@@QAEXHH_N@Z PROC			; Trojuhelnik::Move2, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\trojuhelnik_d2d1.h
; Line 377
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9FAB02AC_trojuhelnik_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 378
	movzx	eax, BYTE PTR _create_copy$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Move2
; Line 379
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Erase@Trojuhelnik@@QAEXXZ		; Trojuhelnik::Erase
$LN2@Move2:
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	add	ecx, DWORD PTR _plus_y$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, DWORD PTR _plus_y$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	add	ecx, DWORD PTR _plus_y$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], ecx
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	add	ecx, DWORD PTR _plus_x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], ecx
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, DWORD PTR _plus_x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 386
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	add	ecx, DWORD PTR _plus_x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], ecx
; Line 387
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Draw@Trojuhelnik@@QAEXXZ		; Trojuhelnik::Draw
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Move2@Trojuhelnik@@QAEXHH_N@Z ENDP			; Trojuhelnik::Move2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Erase@Trojuhelnik@@QAEXXZ
_TEXT	SEGMENT
$T1 = -324						; size = 16
_prev$ = -108						; size = 16
_color$ = -84						; size = 16
_A$ = -60						; size = 8
_C$ = -44						; size = 8
_B$ = -28						; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Erase@Trojuhelnik@@QAEXXZ PROC				; Trojuhelnik::Erase, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\trojuhelnik_d2d1.h
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9FAB02AC_trojuhelnik_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR _B$[ebp], xmm0
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+64]
	movss	DWORD PTR _B$[ebp+4], xmm0
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+52]
	movss	DWORD PTR _A$[ebp], xmm0
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR _A$[ebp+4], xmm0
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+68]
	movss	DWORD PTR _C$[ebp], xmm0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _C$[ebp+4], xmm0
; Line 231
	mov	esi, esp
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16312]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _prev$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _prev$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _prev$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _prev$[ebp+12], edx
; Line 232
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+12], xmm0
; Line 233
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+4], xmm0
; Line 234
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+8], xmm0
; Line 235
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp], xmm0
; Line 236
	lea	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16312]
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 237
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	push	ecx
	mov	edx, DWORD PTR _B$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _B$[ebp]
	push	eax
	mov	ecx, DWORD PTR _A$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _A$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16316]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16316]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 238
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	push	ecx
	mov	edx, DWORD PTR _C$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _C$[ebp]
	push	eax
	mov	ecx, DWORD PTR _B$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _B$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16316]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16316]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 239
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	push	ecx
	mov	edx, DWORD PTR _A$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _A$[ebp]
	push	eax
	mov	ecx, DWORD PTR _C$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _C$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16316]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16316]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 240
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+12], xmm0
; Line 241
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+4], xmm0
; Line 242
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+8], xmm0
; Line 243
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp], xmm0
; Line 244
	lea	eax, DWORD PTR _prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16312]
	call	?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 245
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Erase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Erase:
	DD	5
	DD	$LN8@Erase
$LN8@Erase:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN3@Erase
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN4@Erase
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN5@Erase
	DD	-84					; ffffffacH
	DD	16					; 00000010H
	DD	$LN6@Erase
	DD	-108					; ffffff94H
	DD	16					; 00000010H
	DD	$LN7@Erase
$LN7@Erase:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	0
$LN6@Erase:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN5@Erase:
	DB	65					; 00000041H
	DB	0
$LN4@Erase:
	DB	67					; 00000043H
	DB	0
$LN3@Erase:
	DB	66					; 00000042H
	DB	0
?Erase@Trojuhelnik@@QAEXXZ ENDP				; Trojuhelnik::Erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Draw@Trojuhelnik@@QAEXXZ
_TEXT	SEGMENT
tv762 = -3172						; size = 4
tv760 = -3168						; size = 4
tv807 = -3164						; size = 4
tv758 = -3160						; size = 4
tv806 = -3156						; size = 4
tv756 = -3152						; size = 4
tv805 = -3148						; size = 4
tv754 = -3144						; size = 4
tv804 = -3140						; size = 4
tv752 = -3136						; size = 4
tv803 = -3132						; size = 4
tv750 = -3128						; size = 4
tv802 = -3124						; size = 4
tv748 = -3120						; size = 4
tv801 = -3116						; size = 4
tv746 = -3112						; size = 4
tv800 = -3108						; size = 4
tv744 = -3104						; size = 4
tv799 = -3100						; size = 4
tv742 = -3096						; size = 4
tv798 = -3092						; size = 4
tv740 = -3088						; size = 4
tv797 = -3084						; size = 4
tv738 = -3080						; size = 4
tv796 = -3076						; size = 4
tv736 = -3072						; size = 4
tv795 = -3068						; size = 4
tv734 = -3064						; size = 4
tv794 = -3060						; size = 4
tv732 = -3056						; size = 4
tv793 = -3052						; size = 4
tv730 = -3048						; size = 4
tv792 = -3044						; size = 4
tv728 = -3040						; size = 4
tv791 = -3036						; size = 4
tv726 = -3032						; size = 4
tv790 = -3028						; size = 4
tv724 = -3024						; size = 4
tv789 = -3020						; size = 4
tv722 = -3016						; size = 4
tv788 = -3012						; size = 4
tv720 = -3008						; size = 4
tv787 = -3004						; size = 4
tv718 = -3000						; size = 4
tv786 = -2996						; size = 4
tv716 = -2992						; size = 4
tv785 = -2988						; size = 4
tv714 = -2984						; size = 4
tv784 = -2980						; size = 4
tv712 = -2976						; size = 4
tv783 = -2972						; size = 4
tv710 = -2968						; size = 4
tv782 = -2964						; size = 4
tv708 = -2960						; size = 4
tv781 = -2956						; size = 4
tv706 = -2952						; size = 4
tv780 = -2948						; size = 4
tv704 = -2944						; size = 4
tv779 = -2940						; size = 4
tv702 = -2936						; size = 4
tv778 = -2932						; size = 4
tv700 = -2928						; size = 4
tv777 = -2924						; size = 4
tv698 = -2920						; size = 4
tv776 = -2916						; size = 4
tv696 = -2912						; size = 4
tv775 = -2908						; size = 4
tv694 = -2904						; size = 4
tv774 = -2900						; size = 4
tv692 = -2896						; size = 4
tv773 = -2892						; size = 4
tv690 = -2888						; size = 4
tv772 = -2884						; size = 4
tv688 = -2880						; size = 4
tv771 = -2876						; size = 4
tv686 = -2872						; size = 4
tv770 = -2868						; size = 4
tv684 = -2864						; size = 4
tv769 = -2860						; size = 4
tv682 = -2856						; size = 4
tv768 = -2852						; size = 4
tv680 = -2848						; size = 4
tv767 = -2844						; size = 4
tv678 = -2840						; size = 4
tv766 = -2836						; size = 4
tv676 = -2832						; size = 4
tv765 = -2828						; size = 4
tv674 = -2824						; size = 4
tv764 = -2820						; size = 4
tv672 = -2816						; size = 4
tv763 = -2812						; size = 4
$T2 = -2804						; size = 28
$T3 = -2768						; size = 28
$T4 = -2732						; size = 28
$T5 = -2696						; size = 28
$T6 = -2660						; size = 28
$T7 = -2624						; size = 28
$T8 = -2588						; size = 28
$T9 = -2552						; size = 28
$T10 = -2516						; size = 28
$T11 = -2480						; size = 28
$T12 = -2444						; size = 28
$T13 = -2408						; size = 28
$T14 = -2372						; size = 28
$T15 = -2336						; size = 28
$T16 = -2300						; size = 28
$T17 = -2264						; size = 28
$T18 = -2228						; size = 28
$T19 = -2192						; size = 28
$T20 = -2156						; size = 28
$T21 = -2120						; size = 28
$T22 = -2084						; size = 28
$T23 = -2048						; size = 28
$T24 = -2012						; size = 28
$T25 = -1976						; size = 28
$T26 = -1940						; size = 28
$T27 = -1904						; size = 28
$T28 = -1868						; size = 28
$T29 = -1832						; size = 28
$T30 = -1796						; size = 28
$T31 = -1760						; size = 28
$T32 = -1724						; size = 28
$T33 = -1688						; size = 28
$T34 = -1652						; size = 28
$T35 = -1616						; size = 28
$T36 = -1580						; size = 28
$T37 = -1544						; size = 28
$T38 = -1508						; size = 28
$T39 = -1472						; size = 28
$T40 = -1436						; size = 28
$T41 = -1400						; size = 28
$T42 = -1364						; size = 28
$T43 = -1328						; size = 28
$T44 = -1292						; size = 28
$T45 = -1256						; size = 28
$T46 = -1220						; size = 28
$T47 = -1184						; size = 28
$T48 = -1148						; size = 12
$T49 = -1128						; size = 12
$T50 = -1108						; size = 12
$T51 = -1088						; size = 12
_A$ = -108						; size = 8
_C$ = -92						; size = 8
_B$ = -76						; size = 8
_fill$ = -60						; size = 12
_out$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Draw@Trojuhelnik@@QAEXXZ PROC				; Trojuhelnik::Draw, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\trojuhelnik_d2d1.h
; Line 170
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Draw@Trojuhelnik@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3160				; 00000c58H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-3172]
	mov	ecx, 790				; 00000316H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9FAB02AC_trojuhelnik_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN2@Draw
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN2@Draw:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN3@Draw
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 16777215		; 00ffffffH
$LN3@Draw:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	lea	edx, DWORD PTR $T50[ebp]
	push	edx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T51[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T51[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR $T51[ebp+8], eax
	mov	ecx, DWORD PTR $T51[ebp]
	mov	DWORD PTR _out$[ebp], ecx
	mov	edx, DWORD PTR $T51[ebp+4]
	mov	DWORD PTR _out$[ebp+4], edx
	mov	eax, DWORD PTR $T51[ebp+8]
	mov	DWORD PTR _out$[ebp+8], eax
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	lea	edx, DWORD PTR $T48[ebp]
	push	edx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T49[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T49[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR $T49[ebp+8], eax
	mov	ecx, DWORD PTR $T49[ebp]
	mov	DWORD PTR _fill$[ebp], ecx
	mov	edx, DWORD PTR $T49[ebp+4]
	mov	DWORD PTR _fill$[ebp+4], edx
	mov	eax, DWORD PTR $T49[ebp+8]
	mov	DWORD PTR _fill$[ebp+8], eax
; Line 181
	mov	eax, DWORD PTR _out$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T47[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv763[ebp], eax
	mov	edx, DWORD PTR tv763[ebp]
	mov	DWORD PTR tv672[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv672[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _out$[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T46[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv764[ebp], eax
	mov	eax, DWORD PTR tv764[ebp]
	mov	DWORD PTR tv674[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv674[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	lea	eax, DWORD PTR $T45[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv765[ebp], eax
	mov	ecx, DWORD PTR tv765[ebp]
	mov	DWORD PTR tv676[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv676[ebp]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, DWORD PTR _fill$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T44[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv766[ebp], eax
	mov	edx, DWORD PTR tv766[ebp]
	mov	DWORD PTR tv678[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv678[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _fill$[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T43[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv767[ebp], eax
	mov	eax, DWORD PTR tv767[ebp]
	mov	DWORD PTR tv680[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv680[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _fill$[ebp]
	push	edx
	lea	eax, DWORD PTR $T42[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv768[ebp], eax
	mov	ecx, DWORD PTR tv768[ebp]
	mov	DWORD PTR tv682[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv682[ebp]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	push	ecx
	lea	edx, DWORD PTR $T41[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv769[ebp], eax
	mov	eax, DWORD PTR tv769[ebp]
	mov	DWORD PTR tv684[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv684[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	lea	ecx, DWORD PTR $T40[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv770[ebp], eax
	mov	edx, DWORD PTR tv770[ebp]
	mov	DWORD PTR tv686[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv686[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	lea	eax, DWORD PTR $T39[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv771[ebp], eax
	mov	ecx, DWORD PTR tv771[ebp]
	mov	DWORD PTR tv688[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv688[ebp]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	lea	edx, DWORD PTR $T38[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv772[ebp], eax
	mov	eax, DWORD PTR tv772[ebp]
	mov	DWORD PTR tv690[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv690[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv773[ebp], eax
	mov	edx, DWORD PTR tv773[ebp]
	mov	DWORD PTR tv692[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv692[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	lea	eax, DWORD PTR $T36[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv774[ebp], eax
	mov	ecx, DWORD PTR tv774[ebp]
	mov	DWORD PTR tv694[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv694[ebp]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	lea	edx, DWORD PTR $T35[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv775[ebp], eax
	mov	eax, DWORD PTR tv775[ebp]
	mov	DWORD PTR tv696[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv696[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv776[ebp], eax
	mov	edx, DWORD PTR tv776[ebp]
	mov	DWORD PTR tv698[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	eax, DWORD PTR tv698[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	lea	eax, DWORD PTR $T33[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv777[ebp], eax
	mov	ecx, DWORD PTR tv777[ebp]
	mov	DWORD PTR tv700[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv700[ebp]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	lea	edx, DWORD PTR $T32[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv778[ebp], eax
	mov	eax, DWORD PTR tv778[ebp]
	mov	DWORD PTR tv702[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv702[ebp]
	push	ecx
	lea	edx, DWORD PTR $T31[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv779[ebp], eax
	mov	eax, DWORD PTR tv779[ebp]
	mov	DWORD PTR tv704[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR tv704[ebp]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv780[ebp], eax
	mov	eax, DWORD PTR tv780[ebp]
	mov	DWORD PTR tv706[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv706[ebp]
	push	ecx
	lea	edx, DWORD PTR $T29[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv781[ebp], eax
	mov	eax, DWORD PTR tv781[ebp]
	mov	DWORD PTR tv708[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv708[ebp]
	push	ecx
	lea	edx, DWORD PTR $T28[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv782[ebp], eax
	mov	eax, DWORD PTR tv782[ebp]
	mov	DWORD PTR tv710[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR tv710[ebp]
	push	ecx
	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv783[ebp], eax
	mov	eax, DWORD PTR tv783[ebp]
	mov	DWORD PTR tv712[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	ecx, DWORD PTR tv712[ebp]
	push	ecx
	lea	edx, DWORD PTR $T26[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv784[ebp], eax
	mov	eax, DWORD PTR tv784[ebp]
	mov	DWORD PTR tv714[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, DWORD PTR tv714[ebp]
	push	ecx
	lea	edx, DWORD PTR $T25[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv785[ebp], eax
	mov	eax, DWORD PTR tv785[ebp]
	mov	DWORD PTR tv716[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	ecx, DWORD PTR tv716[ebp]
	push	ecx
	lea	edx, DWORD PTR $T24[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv786[ebp], eax
	mov	eax, DWORD PTR tv786[ebp]
	mov	DWORD PTR tv718[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR tv718[ebp]
	push	ecx
	lea	edx, DWORD PTR $T23[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv787[ebp], eax
	mov	eax, DWORD PTR tv787[ebp]
	mov	DWORD PTR tv720[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	ecx, DWORD PTR tv720[ebp]
	push	ecx
	lea	edx, DWORD PTR $T22[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv788[ebp], eax
	mov	eax, DWORD PTR tv788[ebp]
	mov	DWORD PTR tv722[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	ecx, DWORD PTR tv722[ebp]
	push	ecx
	lea	edx, DWORD PTR $T21[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv789[ebp], eax
	mov	eax, DWORD PTR tv789[ebp]
	mov	DWORD PTR tv724[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	ecx, DWORD PTR tv724[ebp]
	push	ecx
	lea	edx, DWORD PTR $T20[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv790[ebp], eax
	mov	eax, DWORD PTR tv790[ebp]
	mov	DWORD PTR tv726[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	ecx, DWORD PTR tv726[ebp]
	push	ecx
	lea	edx, DWORD PTR $T19[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv791[ebp], eax
	mov	eax, DWORD PTR tv791[ebp]
	mov	DWORD PTR tv728[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	ecx, DWORD PTR tv728[ebp]
	push	ecx
	lea	edx, DWORD PTR $T18[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv792[ebp], eax
	mov	eax, DWORD PTR tv792[ebp]
	mov	DWORD PTR tv730[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR tv730[ebp]
	push	ecx
	lea	edx, DWORD PTR $T17[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv793[ebp], eax
	mov	eax, DWORD PTR tv793[ebp]
	mov	DWORD PTR tv732[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv732[ebp]
	push	ecx
	lea	edx, DWORD PTR $T16[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv794[ebp], eax
	mov	eax, DWORD PTR tv794[ebp]
	mov	DWORD PTR tv734[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	ecx, DWORD PTR tv734[ebp]
	push	ecx
	lea	edx, DWORD PTR $T15[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv795[ebp], eax
	mov	eax, DWORD PTR tv795[ebp]
	mov	DWORD PTR tv736[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	ecx, DWORD PTR tv736[ebp]
	push	ecx
	lea	edx, DWORD PTR $T14[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv796[ebp], eax
	mov	eax, DWORD PTR tv796[ebp]
	mov	DWORD PTR tv738[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv738[ebp]
	push	ecx
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv797[ebp], eax
	mov	eax, DWORD PTR tv797[ebp]
	mov	DWORD PTR tv740[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	ecx, DWORD PTR tv740[ebp]
	push	ecx
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv798[ebp], eax
	mov	eax, DWORD PTR tv798[ebp]
	mov	DWORD PTR tv742[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	ecx, DWORD PTR tv742[ebp]
	push	ecx
	lea	edx, DWORD PTR $T11[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv799[ebp], eax
	mov	eax, DWORD PTR tv799[ebp]
	mov	DWORD PTR tv744[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR tv744[ebp]
	push	ecx
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv800[ebp], eax
	mov	eax, DWORD PTR tv800[ebp]
	mov	DWORD PTR tv746[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	ecx, DWORD PTR tv746[ebp]
	push	ecx
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv801[ebp], eax
	mov	eax, DWORD PTR tv801[ebp]
	mov	DWORD PTR tv748[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR tv748[ebp]
	push	ecx
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv802[ebp], eax
	mov	eax, DWORD PTR tv802[ebp]
	mov	DWORD PTR tv750[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	ecx, DWORD PTR tv750[ebp]
	push	ecx
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv803[ebp], eax
	mov	eax, DWORD PTR tv803[ebp]
	mov	DWORD PTR tv752[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR tv752[ebp]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv804[ebp], eax
	mov	eax, DWORD PTR tv804[ebp]
	mov	DWORD PTR tv754[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR tv754[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv805[ebp], eax
	mov	eax, DWORD PTR tv805[ebp]
	mov	DWORD PTR tv756[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	ecx, DWORD PTR tv756[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv806[ebp], eax
	mov	eax, DWORD PTR tv806[ebp]
	mov	DWORD PTR tv758[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	ecx, DWORD PTR tv758[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv807[ebp], eax
	mov	eax, DWORD PTR tv807[ebp]
	mov	DWORD PTR tv760[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	ecx, DWORD PTR tv760[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv762[ebp], eax
	mov	eax, DWORD PTR tv762[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16104				; 00003ee8H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T38[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T39[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T40[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T41[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T42[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T43[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T44[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T45[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T46[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T47[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR _B$[ebp], xmm0
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+64]
	movss	DWORD PTR _B$[ebp+4], xmm0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+52]
	movss	DWORD PTR _A$[ebp], xmm0
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR _A$[ebp+4], xmm0
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+68]
	movss	DWORD PTR _C$[ebp], xmm0
; Line 189
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _C$[ebp+4], xmm0
; Line 190
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	push	ecx
	mov	edx, DWORD PTR _B$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _B$[ebp]
	push	eax
	mov	ecx, DWORD PTR _A$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _A$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16316]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16316]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 191
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	push	ecx
	mov	edx, DWORD PTR _C$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _C$[ebp]
	push	eax
	mov	ecx, DWORD PTR _B$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _B$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16316]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16316]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 192
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16312]
	push	ecx
	mov	edx, DWORD PTR _A$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _A$[ebp]
	push	eax
	mov	ecx, DWORD PTR _C$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _C$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16316]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16316]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 193
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN58@Draw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 3172				; 00000c64H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN58@Draw:
	DD	5
	DD	$LN57@Draw
$LN57@Draw:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN51@Draw
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN52@Draw
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN53@Draw
	DD	-92					; ffffffa4H
	DD	8
	DD	$LN54@Draw
	DD	-108					; ffffff94H
	DD	8
	DD	$LN55@Draw
$LN55@Draw:
	DB	65					; 00000041H
	DB	0
$LN54@Draw:
	DB	67					; 00000043H
	DB	0
$LN53@Draw:
	DB	66					; 00000042H
	DB	0
$LN52@Draw:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN51@Draw:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T47[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T46[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T45[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T44[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$4:
	lea	ecx, DWORD PTR $T43[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$5:
	lea	ecx, DWORD PTR $T42[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$6:
	lea	ecx, DWORD PTR $T41[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$7:
	lea	ecx, DWORD PTR $T40[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$8:
	lea	ecx, DWORD PTR $T39[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$9:
	lea	ecx, DWORD PTR $T38[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$10:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$11:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$12:
	lea	ecx, DWORD PTR $T35[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$13:
	lea	ecx, DWORD PTR $T34[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$14:
	lea	ecx, DWORD PTR $T33[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$15:
	lea	ecx, DWORD PTR $T32[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$16:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$17:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$18:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$19:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$20:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$21:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$22:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$23:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$24:
	lea	ecx, DWORD PTR $T23[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$25:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$26:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$27:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$28:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$29:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$30:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$31:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$32:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$33:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$34:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$35:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$36:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$37:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$38:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$39:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$40:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$41:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$42:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$43:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Draw@Trojuhelnik@@QAEXXZ$44:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?Draw@Trojuhelnik@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Draw@Trojuhelnik@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Draw@Trojuhelnik@@QAEXXZ ENDP				; Trojuhelnik::Draw
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Trojuhelnik@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Trojuhelnik@@QAE@XZ PROC				; Trojuhelnik::~Trojuhelnik, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\trojuhelnik_d2d1.h
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9FAB02AC_trojuhelnik_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 151
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Objekt@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Trojuhelnik@@QAE@XZ ENDP				; Trojuhelnik::~Trojuhelnik
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Trojuhelnik@@QAE@PAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@UTrojBody2@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__new$ = 8						; size = 4
__newb$ = 12						; size = 4
_troj$ = 16						; size = 24
__id$ = 40						; size = 4
??0Trojuhelnik@@QAE@PAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@UTrojBody2@@H@Z PROC ; Trojuhelnik::Trojuhelnik, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\trojuhelnik_d2d1.h
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9FAB02AC_trojuhelnik_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Objekt@@QAE@XZ
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 3
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __new$[ebp]
	mov	DWORD PTR [eax+16316], ecx
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __newb$[ebp]
	mov	DWORD PTR [eax+16312], ecx
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __id$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+20], edx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _troj$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _troj$[ebp+4]
	mov	DWORD PTR [eax+56], ecx
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _troj$[ebp+8]
	mov	DWORD PTR [eax+60], ecx
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _troj$[ebp+12]
	mov	DWORD PTR [eax+64], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _troj$[ebp+16]
	mov	DWORD PTR [eax+68], ecx
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _troj$[ebp+20]
	mov	DWORD PTR [eax+72], ecx
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
??0Trojuhelnik@@QAE@PAUID2D1HwndRenderTarget@@PAUID2D1SolidColorBrush@@UTrojBody2@@H@Z ENDP ; Trojuhelnik::Trojuhelnik
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RotatePrimka2@@YA?AUD2D_POINT_2F@@U1@0M_N@Z
_TEXT	SEGMENT
tv203 = -352						; size = 8
tv223 = -344						; size = 8
tv217 = -344						; size = 8
tv212 = -344						; size = 8
tv76 = -337						; size = 1
tv227 = -336						; size = 8
tv225 = -336						; size = 8
tv197 = -336						; size = 8
tv156 = -336						; size = 8
_fin$ = -132						; size = 8
_finY$ = -116						; size = 4
_finX$ = -104						; size = 4
_r$ = -92						; size = 4
_fi$ = -80						; size = 4
__By$ = -68						; size = 4
__Bx$ = -56						; size = 4
_rozdil_y$ = -44					; size = 4
_rozdil_x$ = -32					; size = 4
__Ay$ = -20						; size = 4
__Ax$ = -8						; size = 4
_point1$ = 8						; size = 8
_point2$ = 16						; size = 8
_alfa$ = 24						; size = 4
_psi$ = 28						; size = 1
?RotatePrimka2@@YA?AUD2D_POINT_2F@@U1@0M_N@Z PROC	; RotatePrimka2, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 826
	xorps	xmm0, xmm0
	movss	DWORD PTR __Ax$[ebp], xmm0
; Line 827
	xorps	xmm0, xmm0
	movss	DWORD PTR __Ay$[ebp], xmm0
; Line 828
	movss	xmm0, DWORD PTR _point1$[ebp]
	subss	xmm0, DWORD PTR __Ax$[ebp]
	movss	DWORD PTR _rozdil_x$[ebp], xmm0
; Line 829
	movss	xmm0, DWORD PTR _point1$[ebp+4]
	subss	xmm0, DWORD PTR __Ay$[ebp]
	movss	DWORD PTR _rozdil_y$[ebp], xmm0
; Line 830
	movss	xmm0, DWORD PTR _point2$[ebp]
	subss	xmm0, DWORD PTR _rozdil_x$[ebp]
	movss	DWORD PTR __Bx$[ebp], xmm0
; Line 831
	movss	xmm0, DWORD PTR _point2$[ebp+4]
	subss	xmm0, DWORD PTR _rozdil_y$[ebp]
	movss	DWORD PTR __By$[ebp], xmm0
; Line 832
	movzx	eax, BYTE PTR _psi$[ebp]
	test	eax, eax
	je	SHORT $LN2@RotatePrim
; Line 833
	movss	xmm0, DWORD PTR __Bx$[ebp]
	divss	xmm0, DWORD PTR __By$[ebp]
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3f91df46a2529d39
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR tv156[ebp]
	movsd	xmm0, QWORD PTR tv156[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@RotatePrim
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN5@RotatePrim
$LN4@RotatePrim:
	mov	BYTE PTR tv76[ebp], 0
$LN5@RotatePrim:
	mov	al, BYTE PTR tv76[ebp]
	mov	BYTE PTR _psi$[ebp], al
$LN2@RotatePrim:
; Line 835
	movzx	eax, BYTE PTR _psi$[ebp]
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _alfa$[ebp]
	movss	DWORD PTR _fi$[ebp], xmm0
; Line 837
	push	2
	push	ecx
	movss	xmm0, DWORD PTR __Bx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	??$pow@MH$0A@@@YANMH@Z			; pow<float,int,0>
	add	esp, 8
	fstp	QWORD PTR tv197[ebp]
	movsd	xmm0, QWORD PTR tv197[ebp]
	push	2
	push	ecx
	movss	xmm1, DWORD PTR __By$[ebp]
	movss	DWORD PTR [esp], xmm1
	movsd	QWORD PTR tv223[ebp], xmm0
	call	??$pow@MH$0A@@@YANMH@Z			; pow<float,int,0>
	add	esp, 8
	fstp	QWORD PTR tv203[ebp]
	movsd	xmm0, QWORD PTR tv223[ebp]
	addsd	xmm0, QWORD PTR tv203[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR _r$[ebp]
; Line 838
	cvtss2sd xmm0, DWORD PTR _r$[ebp]
	cvtss2sd xmm1, DWORD PTR _fi$[ebp]
	mulsd	xmm1, QWORD PTR __real@3f91df46a2529d39
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm1
	movsd	QWORD PTR tv225[ebp], xmm0
	call	_cos
	add	esp, 8
	fstp	QWORD PTR tv212[ebp]
	movsd	xmm0, QWORD PTR tv225[ebp]
	mulsd	xmm0, QWORD PTR tv212[ebp]
	cvtss2sd xmm1, DWORD PTR _rozdil_x$[ebp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _finX$[ebp], xmm0
; Line 839
	cvtss2sd xmm0, DWORD PTR _r$[ebp]
	cvtss2sd xmm1, DWORD PTR _fi$[ebp]
	mulsd	xmm1, QWORD PTR __real@3f91df46a2529d39
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm1
	movsd	QWORD PTR tv227[ebp], xmm0
	call	_sin
	add	esp, 8
	fstp	QWORD PTR tv217[ebp]
	movsd	xmm0, QWORD PTR tv227[ebp]
	mulsd	xmm0, QWORD PTR tv217[ebp]
	cvtss2sd xmm1, DWORD PTR _rozdil_y$[ebp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _finY$[ebp], xmm0
; Line 841
	movss	xmm0, DWORD PTR _finX$[ebp]
	movss	DWORD PTR _fin$[ebp], xmm0
; Line 842
	movss	xmm0, DWORD PTR _finY$[ebp]
	movss	DWORD PTR _fin$[ebp+4], xmm0
; Line 843
	mov	eax, DWORD PTR _fin$[ebp]
	mov	edx, DWORD PTR _fin$[ebp+4]
; Line 844
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@RotatePrim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@RotatePrim:
	DD	1
	DD	$LN7@RotatePrim
$LN7@RotatePrim:
	DD	-132					; ffffff7cH
	DD	8
	DD	$LN6@RotatePrim
$LN6@RotatePrim:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
?RotatePrimka2@@YA?AUD2D_POINT_2F@@U1@0M_N@Z ENDP	; RotatePrimka2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$pow@MH$0A@@@YANMH@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$pow@MH$0A@@@YANMH@Z PROC				; pow<float,int,0>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath
; Line 619
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EA052A26_cmath
	call	@__CheckForDebuggerJustMyCode@4
	cvtsi2sd xmm0, DWORD PTR __Right$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR __Left$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_pow
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$pow@MH$0A@@@YANMH@Z ENDP				; pow<float,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RotatePrimka@@YA?AUD2D_POINT_2F@@MMMMM_N@Z
_TEXT	SEGMENT
tv203 = -352						; size = 8
tv223 = -344						; size = 8
tv217 = -344						; size = 8
tv212 = -344						; size = 8
tv76 = -337						; size = 1
tv227 = -336						; size = 8
tv225 = -336						; size = 8
tv197 = -336						; size = 8
tv156 = -336						; size = 8
_fin$ = -132						; size = 8
_finY$ = -116						; size = 4
_finX$ = -104						; size = 4
_r$ = -92						; size = 4
_fi$ = -80						; size = 4
__By$ = -68						; size = 4
__Bx$ = -56						; size = 4
_rozdil_y$ = -44					; size = 4
_rozdil_x$ = -32					; size = 4
__Ay$ = -20						; size = 4
__Ax$ = -8						; size = 4
_Ax$ = 8						; size = 4
_Ay$ = 12						; size = 4
_Bx$ = 16						; size = 4
_By$ = 20						; size = 4
_alfa$ = 24						; size = 4
_psi$ = 28						; size = 1
?RotatePrimka@@YA?AUD2D_POINT_2F@@MMMMM_N@Z PROC	; RotatePrimka, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 805
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 806
	xorps	xmm0, xmm0
	movss	DWORD PTR __Ax$[ebp], xmm0
; Line 807
	xorps	xmm0, xmm0
	movss	DWORD PTR __Ay$[ebp], xmm0
; Line 808
	movss	xmm0, DWORD PTR _Ax$[ebp]
	subss	xmm0, DWORD PTR __Ax$[ebp]
	movss	DWORD PTR _rozdil_x$[ebp], xmm0
; Line 809
	movss	xmm0, DWORD PTR _Ay$[ebp]
	subss	xmm0, DWORD PTR __Ay$[ebp]
	movss	DWORD PTR _rozdil_y$[ebp], xmm0
; Line 810
	movss	xmm0, DWORD PTR _Bx$[ebp]
	subss	xmm0, DWORD PTR _rozdil_x$[ebp]
	movss	DWORD PTR __Bx$[ebp], xmm0
; Line 811
	movss	xmm0, DWORD PTR _By$[ebp]
	subss	xmm0, DWORD PTR _rozdil_y$[ebp]
	movss	DWORD PTR __By$[ebp], xmm0
; Line 812
	movzx	eax, BYTE PTR _psi$[ebp]
	test	eax, eax
	je	SHORT $LN2@RotatePrim
; Line 813
	movss	xmm0, DWORD PTR __Bx$[ebp]
	divss	xmm0, DWORD PTR __By$[ebp]
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3f91df46a2529d39
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR tv156[ebp]
	movsd	xmm0, QWORD PTR tv156[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@RotatePrim
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN5@RotatePrim
$LN4@RotatePrim:
	mov	BYTE PTR tv76[ebp], 0
$LN5@RotatePrim:
	mov	al, BYTE PTR tv76[ebp]
	mov	BYTE PTR _psi$[ebp], al
$LN2@RotatePrim:
; Line 815
	movzx	eax, BYTE PTR _psi$[ebp]
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _alfa$[ebp]
	movss	DWORD PTR _fi$[ebp], xmm0
; Line 816
	push	2
	push	ecx
	movss	xmm0, DWORD PTR __Bx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	??$pow@MH$0A@@@YANMH@Z			; pow<float,int,0>
	add	esp, 8
	fstp	QWORD PTR tv197[ebp]
	movsd	xmm0, QWORD PTR tv197[ebp]
	push	2
	push	ecx
	movss	xmm1, DWORD PTR __By$[ebp]
	movss	DWORD PTR [esp], xmm1
	movsd	QWORD PTR tv223[ebp], xmm0
	call	??$pow@MH$0A@@@YANMH@Z			; pow<float,int,0>
	add	esp, 8
	fstp	QWORD PTR tv203[ebp]
	movsd	xmm0, QWORD PTR tv223[ebp]
	addsd	xmm0, QWORD PTR tv203[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR _r$[ebp]
; Line 817
	cvtss2sd xmm0, DWORD PTR _r$[ebp]
	cvtss2sd xmm1, DWORD PTR _fi$[ebp]
	mulsd	xmm1, QWORD PTR __real@3f91df46a2529d39
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm1
	movsd	QWORD PTR tv225[ebp], xmm0
	call	_cos
	add	esp, 8
	fstp	QWORD PTR tv212[ebp]
	movsd	xmm0, QWORD PTR tv225[ebp]
	mulsd	xmm0, QWORD PTR tv212[ebp]
	cvtss2sd xmm1, DWORD PTR _rozdil_x$[ebp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _finX$[ebp], xmm0
; Line 818
	cvtss2sd xmm0, DWORD PTR _r$[ebp]
	cvtss2sd xmm1, DWORD PTR _fi$[ebp]
	mulsd	xmm1, QWORD PTR __real@3f91df46a2529d39
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm1
	movsd	QWORD PTR tv227[ebp], xmm0
	call	_sin
	add	esp, 8
	fstp	QWORD PTR tv217[ebp]
	movsd	xmm0, QWORD PTR tv227[ebp]
	mulsd	xmm0, QWORD PTR tv217[ebp]
	cvtss2sd xmm1, DWORD PTR _rozdil_y$[ebp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _finY$[ebp], xmm0
; Line 820
	movss	xmm0, DWORD PTR _finX$[ebp]
	movss	DWORD PTR _fin$[ebp], xmm0
; Line 821
	movss	xmm0, DWORD PTR _finY$[ebp]
	movss	DWORD PTR _fin$[ebp+4], xmm0
; Line 822
	mov	eax, DWORD PTR _fin$[ebp]
	mov	edx, DWORD PTR _fin$[ebp+4]
; Line 823
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@RotatePrim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@RotatePrim:
	DD	1
	DD	$LN7@RotatePrim
$LN7@RotatePrim:
	DD	-132					; ffffff7cH
	DD	8
	DD	$LN6@RotatePrim
$LN6@RotatePrim:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
?RotatePrimka@@YA?AUD2D_POINT_2F@@MMMMM_N@Z ENDP	; RotatePrimka
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_TrojBody2@@YA?AUTrojBody2@@HHHHHH@Z
_TEXT	SEGMENT
_tmp$ = -32						; size = 24
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_Ax$ = 12						; size = 4
_Ay$ = 16						; size = 4
_Bx$ = 20						; size = 4
_By$ = 24						; size = 4
_Cx$ = 28						; size = 4
_Cy$ = 32						; size = 4
?_TrojBody2@@YA?AUTrojBody2@@HHHHHH@Z PROC		; _TrojBody2, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 791
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 792
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0TrojBody2@@QAE@XZ			; TrojBody2::TrojBody2
; Line 793
	mov	eax, DWORD PTR _Ax$[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 794
	mov	eax, DWORD PTR _Ay$[ebp]
	mov	DWORD PTR _tmp$[ebp+4], eax
; Line 795
	mov	eax, DWORD PTR _Bx$[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 796
	mov	eax, DWORD PTR _By$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 797
	mov	eax, DWORD PTR _Cx$[ebp]
	mov	DWORD PTR _tmp$[ebp+16], eax
; Line 798
	mov	eax, DWORD PTR _Cy$[ebp]
	mov	DWORD PTR _tmp$[ebp+20], eax
; Line 799
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _tmp$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _tmp$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _tmp$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _tmp$[ebp+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 800
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@TrojBody2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@TrojBody2:
	DD	1
	DD	$LN4@TrojBody2
$LN4@TrojBody2:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN3@TrojBody2
$LN3@TrojBody2:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?_TrojBody2@@YA?AUTrojBody2@@HHHHHH@Z ENDP		; _TrojBody2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_TrojBody@@YA?AUTrojBody@@HHHH@Z
_TEXT	SEGMENT
_tmp$ = -20						; size = 16
$T1 = 8							; size = 4
_Ax$ = 12						; size = 4
_Ay$ = 16						; size = 4
_Cx$ = 20						; size = 4
_Cy$ = 24						; size = 4
?_TrojBody@@YA?AUTrojBody@@HHHH@Z PROC			; _TrojBody, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 782
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 784
	mov	eax, DWORD PTR _Ax$[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 785
	mov	eax, DWORD PTR _Ay$[ebp]
	mov	DWORD PTR _tmp$[ebp+4], eax
; Line 786
	mov	eax, DWORD PTR _Cx$[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 787
	mov	eax, DWORD PTR _Cy$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 788
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _tmp$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _tmp$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 789
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@TrojBody
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@TrojBody:
	DD	1
	DD	$LN4@TrojBody
$LN4@TrojBody:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@TrojBody
$LN3@TrojBody:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?_TrojBody@@YA?AUTrojBody@@HHHH@Z ENDP			; _TrojBody
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Objekt@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Objekt@@QAE@XZ PROC					; Objekt::~Objekt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16136				; 00003f08H
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1FigurePart@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Objekt@@QAE@XZ ENDP					; Objekt::~Objekt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Objekt@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0Objekt@@QAE@XZ PROC					; Objekt::Objekt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Objekt@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16136				; 00003f08H
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Objekt@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1FigurePart@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0Objekt@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Objekt@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Objekt@@QAE@XZ ENDP					; Objekt::Objekt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetColorFromChooseColorDialog2@@YAKXZ
_TEXT	SEGMENT
_hwnd$ = -56						; size = 4
_cc$ = -44						; size = 36
__$ArrayPad$ = -4					; size = 4
?GetColorFromChooseColorDialog2@@YAKXZ PROC		; GetColorFromChooseColorDialog2, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 694
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 697
	mov	DWORD PTR _hwnd$[ebp], 0
; Line 700
	push	36					; 00000024H
	push	0
	lea	eax, DWORD PTR _cc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 701
	mov	DWORD PTR _cc$[ebp], 36			; 00000024H
; Line 702
	mov	eax, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR _cc$[ebp+4], eax
; Line 703
	mov	DWORD PTR _cc$[ebp+16], OFFSET ?acrCustClr@?1??GetColorFromChooseColorDialog2@@YAKXZ@4PAKA
; Line 704
	mov	eax, DWORD PTR ?rgbCurrent@?1??GetColorFromChooseColorDialog2@@YAKXZ@4KA
	mov	DWORD PTR _cc$[ebp+12], eax
; Line 705
	mov	DWORD PTR _cc$[ebp+20], 3
; Line 706
	mov	esi, esp
	lea	eax, DWORD PTR _cc$[ebp]
	push	eax
	call	DWORD PTR __imp__ChooseColorW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@GetColorFr
; Line 708
	mov	esi, esp
	push	4
	push	OFFSET ??_C@_19GFDACHI@?$AAI?$AAn?$AAf?$AAo@
	push	OFFSET ??_C@_1JG@MIJPBHCG@?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5@
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 711
	mov	eax, DWORD PTR _cc$[ebp+12]
	mov	DWORD PTR ?rgbCurrent@?1??GetColorFromChooseColorDialog2@@YAKXZ@4KA, eax
$LN2@GetColorFr:
; Line 713
	mov	eax, DWORD PTR ?rgbCurrent@?1??GetColorFromChooseColorDialog2@@YAKXZ@4KA
; Line 714
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetColorFr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@GetColorFr:
	DD	1
	DD	$LN5@GetColorFr
$LN5@GetColorFr:
	DD	-44					; ffffffd4H
	DD	36					; 00000024H
	DD	$LN4@GetColorFr
$LN4@GetColorFr:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	0
?GetColorFromChooseColorDialog2@@YAKXZ ENDP		; GetColorFromChooseColorDialog2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ
_TEXT	SEGMENT
$T1 = -281						; size = 1
_color$ = -80						; size = 16
_hwnd$ = -56						; size = 4
_cc$ = -44						; size = 36
__$ArrayPad$ = -4					; size = 4
$T2 = 8							; size = 4
?GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ PROC ; GetColorFromChooseColorDialog, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 666
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	BYTE PTR $T1[ebp], 0
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 669
	mov	DWORD PTR _hwnd$[ebp], 0
; Line 672
	push	36					; 00000024H
	push	0
	lea	eax, DWORD PTR _cc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 673
	mov	DWORD PTR _cc$[ebp], 36			; 00000024H
; Line 674
	mov	eax, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR _cc$[ebp+4], eax
; Line 675
	mov	DWORD PTR _cc$[ebp+16], OFFSET ?acrCustClr@?1??GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ@4PAKA
; Line 676
	mov	eax, DWORD PTR ?rgbCurrent@?1??GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ@4KA
	mov	DWORD PTR _cc$[ebp+12], eax
; Line 677
	mov	DWORD PTR _cc$[ebp+20], 3
; Line 679
	mov	esi, esp
	lea	eax, DWORD PTR _cc$[ebp]
	push	eax
	call	DWORD PTR __imp__ChooseColorW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@GetColorFr
; Line 683
	mov	eax, DWORD PTR _cc$[ebp+12]
	mov	DWORD PTR ?rgbCurrent@?1??GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ@4KA, eax
; Line 684
	mov	eax, DWORD PTR _cc$[ebp+12]
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	mov	BYTE PTR $T1[ebp], 1
	movss	DWORD PTR _color$[ebp], xmm0
; Line 685
	movzx	eax, WORD PTR _cc$[ebp+12]
	sar	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	mov	BYTE PTR $T1[ebp], 1
	movss	DWORD PTR _color$[ebp+4], xmm0
; Line 686
	mov	eax, DWORD PTR _cc$[ebp+12]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cvtsi2ss xmm0, ecx
	mov	BYTE PTR $T1[ebp], 1
	movss	DWORD PTR _color$[ebp+8], xmm0
; Line 687
	mov	BYTE PTR $T1[ebp], 1
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _color$[ebp+12], xmm0
$LN2@GetColorFr:
; Line 691
	cmp	BYTE PTR $T1[ebp], 0
	jne	SHORT $LN4@GetColorFr
	push	OFFSET $LN5@GetColorFr
	call	__RTC_UninitUse
	add	esp, 4
$LN4@GetColorFr:
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _color$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _color$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _color$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T2[ebp]
; Line 692
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetColorFr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@GetColorFr:
	DD	2
	DD	$LN7@GetColorFr
$LN7@GetColorFr:
	DD	-80					; ffffffb0H
	DD	16					; 00000010H
	DD	$LN5@GetColorFr
	DD	-44					; ffffffd4H
	DD	36					; 00000024H
	DD	$LN6@GetColorFr
$LN6@GetColorFr:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	0
$LN5@GetColorFr:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?GetColorFromChooseColorDialog@@YA?AU_D3DCOLORVALUE@@XZ ENDP ; GetColorFromChooseColorDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindMin@@YAHQAHH@Z
_TEXT	SEGMENT
_imin$ = -32						; size = 4
_min$ = -20						; size = 4
_i$ = -8						; size = 4
_p$ = 8							; size = 4
_n$ = 12						; size = 4
?FindMin@@YAHQAHH@Z PROC				; FindMin, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 647
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 649
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _min$[ebp], eax
	mov	DWORD PTR _imin$[ebp], 0
; Line 650
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@FindMin
$LN2@FindMin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@FindMin:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN3@FindMin
; Line 651
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	cmp	edx, DWORD PTR _min$[ebp]
	jge	SHORT $LN5@FindMin
; Line 653
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _min$[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _imin$[ebp], eax
$LN5@FindMin:
; Line 654
	jmp	SHORT $LN2@FindMin
$LN3@FindMin:
; Line 655
	mov	eax, DWORD PTR _imin$[ebp]
; Line 656
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindMin@@YAHQAHH@Z ENDP				; FindMin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindMax@@YAHQAHH@Z
_TEXT	SEGMENT
_max$ = -20						; size = 4
_i$ = -8						; size = 4
_p$ = 8							; size = 4
_n$ = 12						; size = 4
?FindMax@@YAHQAHH@Z PROC				; FindMax, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 637
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 639
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _max$[ebp], eax
; Line 640
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@FindMax
$LN2@FindMax:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@FindMax:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN3@FindMax
; Line 641
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	cmp	edx, DWORD PTR _max$[ebp]
	jle	SHORT $LN5@FindMax
; Line 642
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _max$[ebp], edx
$LN5@FindMax:
	jmp	SHORT $LN2@FindMax
$LN3@FindMax:
; Line 643
	mov	eax, DWORD PTR _max$[ebp]
; Line 645
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindMax@@YAHQAHH@Z ENDP				; FindMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
tv1401 = -6872						; size = 4
tv1329 = -6872						; size = 4
tv1523 = -6868						; size = 4
tv1487 = -6868						; size = 4
tv1399 = -6864						; size = 4
tv1327 = -6864						; size = 4
tv1522 = -6860						; size = 4
tv1486 = -6860						; size = 4
tv1397 = -6856						; size = 4
tv1325 = -6856						; size = 4
tv1521 = -6852						; size = 4
tv1485 = -6852						; size = 4
tv1395 = -6848						; size = 4
tv1323 = -6848						; size = 4
tv1520 = -6844						; size = 4
tv1484 = -6844						; size = 4
tv1393 = -6840						; size = 4
tv1321 = -6840						; size = 4
tv1519 = -6836						; size = 4
tv1483 = -6836						; size = 4
tv1391 = -6832						; size = 4
tv1319 = -6832						; size = 4
tv1518 = -6828						; size = 4
tv1482 = -6828						; size = 4
tv1389 = -6824						; size = 4
tv1317 = -6824						; size = 4
tv1517 = -6820						; size = 4
tv1481 = -6820						; size = 4
tv1387 = -6816						; size = 4
tv1315 = -6816						; size = 4
tv1516 = -6812						; size = 4
tv1480 = -6812						; size = 4
tv1385 = -6808						; size = 4
tv1313 = -6808						; size = 4
tv1515 = -6804						; size = 4
tv1479 = -6804						; size = 4
tv1383 = -6800						; size = 4
tv1311 = -6800						; size = 4
tv1514 = -6796						; size = 4
tv1478 = -6796						; size = 4
tv1381 = -6792						; size = 4
tv1309 = -6792						; size = 4
tv1211 = -6792						; size = 4
tv1513 = -6788						; size = 4
tv1477 = -6788						; size = 4
tv1428 = -6788						; size = 4
tv1379 = -6784						; size = 4
tv1307 = -6784						; size = 4
tv1209 = -6784						; size = 4
tv1512 = -6780						; size = 4
tv1476 = -6780						; size = 4
tv1427 = -6780						; size = 4
tv1377 = -6776						; size = 4
tv1305 = -6776						; size = 4
tv1207 = -6776						; size = 4
tv1511 = -6772						; size = 4
tv1475 = -6772						; size = 4
tv1426 = -6772						; size = 4
tv1375 = -6768						; size = 4
tv1303 = -6768						; size = 4
tv1257 = -6768						; size = 4
tv1205 = -6768						; size = 4
tv1510 = -6764						; size = 4
tv1474 = -6764						; size = 4
tv1451 = -6764						; size = 4
tv1425 = -6764						; size = 4
tv1373 = -6760						; size = 4
tv1301 = -6760						; size = 4
tv1255 = -6760						; size = 4
tv1203 = -6760						; size = 4
tv1509 = -6756						; size = 4
tv1473 = -6756						; size = 4
tv1450 = -6756						; size = 4
tv1424 = -6756						; size = 4
tv1371 = -6752						; size = 4
tv1299 = -6752						; size = 4
tv1253 = -6752						; size = 4
tv1201 = -6752						; size = 4
tv1508 = -6748						; size = 4
tv1472 = -6748						; size = 4
tv1449 = -6748						; size = 4
tv1423 = -6748						; size = 4
tv1369 = -6744						; size = 4
tv1297 = -6744						; size = 4
tv1251 = -6744						; size = 4
tv1199 = -6744						; size = 4
tv1507 = -6740						; size = 4
tv1471 = -6740						; size = 4
tv1448 = -6740						; size = 4
tv1422 = -6740						; size = 4
tv1367 = -6736						; size = 4
tv1295 = -6736						; size = 4
tv1249 = -6736						; size = 4
tv1197 = -6736						; size = 4
tv1506 = -6732						; size = 4
tv1470 = -6732						; size = 4
tv1447 = -6732						; size = 4
tv1421 = -6732						; size = 4
tv1365 = -6728						; size = 4
tv1293 = -6728						; size = 4
tv1247 = -6728						; size = 4
tv1195 = -6728						; size = 4
tv1505 = -6724						; size = 4
tv1469 = -6724						; size = 4
tv1446 = -6724						; size = 4
tv1420 = -6724						; size = 4
tv1363 = -6720						; size = 4
tv1291 = -6720						; size = 4
tv1245 = -6720						; size = 4
tv1193 = -6720						; size = 4
tv1504 = -6716						; size = 4
tv1468 = -6716						; size = 4
tv1445 = -6716						; size = 4
tv1419 = -6716						; size = 4
tv1361 = -6712						; size = 4
tv1289 = -6712						; size = 4
tv1243 = -6712						; size = 4
tv1191 = -6712						; size = 4
tv1503 = -6708						; size = 4
tv1467 = -6708						; size = 4
tv1444 = -6708						; size = 4
tv1418 = -6708						; size = 4
tv1359 = -6704						; size = 4
tv1287 = -6704						; size = 4
tv1241 = -6704						; size = 4
tv1189 = -6704						; size = 4
tv1502 = -6700						; size = 4
tv1466 = -6700						; size = 4
tv1443 = -6700						; size = 4
tv1417 = -6700						; size = 4
tv1357 = -6696						; size = 4
tv1285 = -6696						; size = 4
tv1239 = -6696						; size = 4
tv1187 = -6696						; size = 4
tv1501 = -6692						; size = 4
tv1465 = -6692						; size = 4
tv1442 = -6692						; size = 4
tv1416 = -6692						; size = 4
tv1355 = -6688						; size = 4
tv1283 = -6688						; size = 4
tv1237 = -6688						; size = 4
tv1185 = -6688						; size = 4
tv1500 = -6684						; size = 4
tv1464 = -6684						; size = 4
tv1441 = -6684						; size = 4
tv1415 = -6684						; size = 4
tv1353 = -6680						; size = 4
tv1281 = -6680						; size = 4
tv1235 = -6680						; size = 4
tv1183 = -6680						; size = 4
tv1499 = -6676						; size = 4
tv1463 = -6676						; size = 4
tv1440 = -6676						; size = 4
tv1414 = -6676						; size = 4
tv1351 = -6672						; size = 4
tv1279 = -6672						; size = 4
tv1233 = -6672						; size = 4
tv1181 = -6672						; size = 4
tv1498 = -6668						; size = 4
tv1462 = -6668						; size = 4
tv1439 = -6668						; size = 4
tv1413 = -6668						; size = 4
tv1349 = -6664						; size = 4
tv1277 = -6664						; size = 4
tv1231 = -6664						; size = 4
tv1179 = -6664						; size = 4
tv1497 = -6660						; size = 4
tv1461 = -6660						; size = 4
tv1438 = -6660						; size = 4
tv1412 = -6660						; size = 4
tv1347 = -6656						; size = 4
tv1275 = -6656						; size = 4
tv1229 = -6656						; size = 4
tv1177 = -6656						; size = 4
tv1496 = -6652						; size = 4
tv1460 = -6652						; size = 4
tv1437 = -6652						; size = 4
tv1411 = -6652						; size = 4
tv1345 = -6648						; size = 4
tv1273 = -6648						; size = 4
tv1227 = -6648						; size = 4
tv1175 = -6648						; size = 4
tv1495 = -6644						; size = 4
tv1459 = -6644						; size = 4
tv1436 = -6644						; size = 4
tv1410 = -6644						; size = 4
tv1343 = -6640						; size = 4
tv1271 = -6640						; size = 4
tv1225 = -6640						; size = 4
tv1173 = -6640						; size = 4
tv1494 = -6636						; size = 4
tv1458 = -6636						; size = 4
tv1435 = -6636						; size = 4
tv1409 = -6636						; size = 4
tv1341 = -6632						; size = 4
tv1269 = -6632						; size = 4
tv1223 = -6632						; size = 4
tv1171 = -6632						; size = 4
tv1493 = -6628						; size = 4
tv1457 = -6628						; size = 4
tv1434 = -6628						; size = 4
tv1408 = -6628						; size = 4
tv1339 = -6624						; size = 4
tv1267 = -6624						; size = 4
tv1221 = -6624						; size = 4
tv1169 = -6624						; size = 4
tv1492 = -6620						; size = 4
tv1456 = -6620						; size = 4
tv1433 = -6620						; size = 4
tv1407 = -6620						; size = 4
tv1337 = -6616						; size = 4
tv1265 = -6616						; size = 4
tv1219 = -6616						; size = 4
tv1167 = -6616						; size = 4
tv1491 = -6612						; size = 4
tv1455 = -6612						; size = 4
tv1432 = -6612						; size = 4
tv1406 = -6612						; size = 4
tv1335 = -6608						; size = 4
tv1263 = -6608						; size = 4
tv1217 = -6608						; size = 4
tv1165 = -6608						; size = 4
tv1490 = -6604						; size = 4
tv1454 = -6604						; size = 4
tv1431 = -6604						; size = 4
tv1405 = -6604						; size = 4
tv1333 = -6600						; size = 4
tv1261 = -6600						; size = 4
tv1215 = -6600						; size = 4
tv1163 = -6600						; size = 4
tv1489 = -6596						; size = 4
tv1453 = -6596						; size = 4
tv1430 = -6596						; size = 4
tv1404 = -6596						; size = 4
tv1331 = -6592						; size = 4
tv1259 = -6592						; size = 4
tv1213 = -6592						; size = 4
tv1161 = -6592						; size = 4
tv1488 = -6588						; size = 4
tv1452 = -6588						; size = 4
tv1429 = -6588						; size = 4
tv86 = -6588						; size = 4
$T2 = -6580						; size = 28
$T3 = -6544						; size = 28
$T4 = -6508						; size = 28
$T5 = -6472						; size = 28
$T6 = -6436						; size = 28
$T7 = -6400						; size = 28
$T8 = -6364						; size = 28
$T9 = -6328						; size = 28
$T10 = -6292						; size = 28
$T11 = -6256						; size = 28
$T12 = -6220						; size = 28
$T13 = -6184						; size = 28
$T14 = -6148						; size = 28
$T15 = -6112						; size = 28
$T16 = -6076						; size = 28
$T17 = -6040						; size = 28
$T18 = -6004						; size = 28
$T19 = -5968						; size = 28
$T20 = -5932						; size = 28
$T21 = -5896						; size = 28
$T22 = -5860						; size = 28
$T23 = -5824						; size = 28
$T24 = -5788						; size = 28
$T25 = -5752						; size = 28
$T26 = -5716						; size = 28
$T27 = -5680						; size = 28
$T28 = -5644						; size = 28
$T29 = -5608						; size = 28
$T30 = -5572						; size = 28
$T31 = -5536						; size = 28
$T32 = -5500						; size = 28
$T33 = -5464						; size = 28
$T34 = -5428						; size = 28
$T35 = -5392						; size = 28
$T36 = -5356						; size = 28
$T37 = -5320						; size = 28
$T38 = -5284						; size = 12
$T39 = -5264						; size = 12
$T40 = -5244						; size = 12
$T41 = -5224						; size = 12
$T42 = -5204						; size = 28
$T43 = -5168						; size = 28
$T44 = -5132						; size = 28
$T45 = -5096						; size = 28
$T46 = -5060						; size = 28
$T47 = -5024						; size = 28
$T48 = -4988						; size = 28
$T49 = -4952						; size = 28
$T50 = -4916						; size = 28
$T51 = -4880						; size = 28
$T52 = -4844						; size = 28
$T53 = -4808						; size = 28
$T54 = -4772						; size = 28
$T55 = -4736						; size = 28
$T56 = -4700						; size = 28
$T57 = -4664						; size = 28
$T58 = -4628						; size = 28
$T59 = -4592						; size = 28
$T60 = -4556						; size = 28
$T61 = -4520						; size = 28
$T62 = -4484						; size = 28
$T63 = -4448						; size = 28
$T64 = -4412						; size = 28
$T65 = -4376						; size = 28
$T66 = -4340						; size = 28
$T67 = -4304						; size = 28
$T68 = -4268						; size = 28
$T69 = -4232						; size = 28
$T70 = -4196						; size = 28
$T71 = -4160						; size = 28
$T72 = -4124						; size = 28
$T73 = -4088						; size = 28
$T74 = -4052						; size = 28
$T75 = -4016						; size = 28
$T76 = -3980						; size = 28
$T77 = -3944						; size = 28
$T78 = -3908						; size = 12
$T79 = -3888						; size = 12
$T80 = -3868						; size = 12
$T81 = -3848						; size = 12
$T82 = -3828						; size = 28
$T83 = -3792						; size = 28
$T84 = -3756						; size = 28
$T85 = -3720						; size = 28
$T86 = -3684						; size = 28
$T87 = -3648						; size = 28
$T88 = -3612						; size = 28
$T89 = -3576						; size = 28
$T90 = -3540						; size = 28
$T91 = -3504						; size = 28
$T92 = -3468						; size = 28
$T93 = -3432						; size = 28
$T94 = -3396						; size = 28
$T95 = -3360						; size = 28
$T96 = -3324						; size = 28
$T97 = -3288						; size = 28
$T98 = -3252						; size = 28
$T99 = -3216						; size = 28
$T100 = -3180						; size = 28
$T101 = -3144						; size = 28
$T102 = -3108						; size = 28
$T103 = -3072						; size = 28
$T104 = -3036						; size = 28
$T105 = -3000						; size = 12
$T106 = -2980						; size = 12
$T107 = -2960						; size = 12
$T108 = -2940						; size = 12
$T109 = -2920						; size = 28
$T110 = -2884						; size = 28
$T111 = -2848						; size = 28
$T112 = -2812						; size = 28
$T113 = -2776						; size = 28
$T114 = -2740						; size = 28
$T115 = -2704						; size = 28
$T116 = -2668						; size = 28
$T117 = -2632						; size = 28
$T118 = -2596						; size = 28
$T119 = -2560						; size = 28
$T120 = -2524						; size = 28
$T121 = -2488						; size = 28
$T122 = -2452						; size = 28
$T123 = -2416						; size = 28
$T124 = -2380						; size = 28
$T125 = -2344						; size = 28
$T126 = -2308						; size = 28
$T127 = -2272						; size = 28
$T128 = -2236						; size = 28
$T129 = -2200						; size = 28
$T130 = -2164						; size = 28
$T131 = -2128						; size = 28
$T132 = -2092						; size = 28
$T133 = -2056						; size = 28
$T134 = -2020						; size = 28
$T135 = -1984						; size = 12
$T136 = -1964						; size = 12
$T137 = -1944						; size = 12
$T138 = -1924						; size = 12
_outc$139 = -368					; size = 12
_fill$140 = -348					; size = 12
_outc$141 = -328					; size = 12
_fill$142 = -308					; size = 12
_outc$143 = -288					; size = 12
_fill$144 = -268					; size = 12
_outc$145 = -248					; size = 12
_fill$146 = -228					; size = 12
_out$ = -208						; size = 176
_id_type$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_figp$ = 8						; size = 16120
_filename$ = 16128					; size = 28
?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; SaveFigurePartToHtmlW, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 515
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6860				; 00001accH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-6872]
	mov	ecx, 1715				; 000006b3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 516
	mov	eax, DWORD PTR _figp$[ebp+12]
	mov	DWORD PTR _id_type$[ebp], eax
; Line 517
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 3
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 4
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 5
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 10		; 0000000aH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 20		; 00000014H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 30		; 0000001eH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 40		; 00000028H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 50		; 00000032H
	je	SHORT $LN10@SaveFigure
	mov	eax, DWORD PTR ?__LINE__Var@?0??SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@
	push	OFFSET ??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@SaveFigure:
; Line 518
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 519
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1O@OCPIBJEO@?$AA?$DM?$AAh?$AAm?$AAt?$AAl?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 520
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1O@CJCHOEJI@?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 521
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1EA@JCFGIIMH@?$AA?$DM?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?5?$AAF?$AAi?$AAg?$AAu?$AAr?$AAe?$AA?5@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 522
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1BA@FIMOFJJG@?$AA?$DM?$AA?1?$AAh?$AAe?$AAa?$AAd?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 523
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1O@CDJKIDBB@?$AA?$DM?$AAb?$AAo?$AAd?$AAy?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 524
	push	OFFSET ??_C@_1EI@ICGNNPIM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC?$AA1?$AA0?$AA0@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 525
	cmp	DWORD PTR _figp$[ebp+12], 1
	jne	$LN2@SaveFigure
; Line 526
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T137[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T138[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T138[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T138[ebp+8], edx
	mov	eax, DWORD PTR $T138[ebp]
	mov	DWORD PTR _fill$146[ebp], eax
	mov	ecx, DWORD PTR $T138[ebp+4]
	mov	DWORD PTR _fill$146[ebp+4], ecx
	mov	edx, DWORD PTR $T138[ebp+8]
	mov	DWORD PTR _fill$146[ebp+8], edx
; Line 527
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T135[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T136[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T136[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T136[ebp+8], edx
	mov	eax, DWORD PTR $T136[ebp]
	mov	DWORD PTR _outc$145[ebp], eax
	mov	ecx, DWORD PTR $T136[ebp+4]
	mov	DWORD PTR _outc$145[ebp+4], ecx
	mov	edx, DWORD PTR $T136[ebp+8]
	mov	DWORD PTR _outc$145[ebp+8], edx
; Line 528
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$145[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T134[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv1161[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1161[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$145[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T133[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1404[ebp], eax
	mov	eax, DWORD PTR tv1404[ebp]
	mov	DWORD PTR tv1163[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv1163[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$145[ebp]
	push	edx
	lea	eax, DWORD PTR $T132[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1405[ebp], eax
	mov	ecx, DWORD PTR tv1405[ebp]
	mov	DWORD PTR tv1165[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv1165[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T131[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1406[ebp], eax
	mov	edx, DWORD PTR tv1406[ebp]
	mov	DWORD PTR tv1167[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1167[ebp]
	push	eax
	push	OFFSET ??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	ecx, DWORD PTR _fill$146[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T130[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1407[ebp], eax
	mov	eax, DWORD PTR tv1407[ebp]
	mov	DWORD PTR tv1169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv1169[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$146[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T129[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1408[ebp], eax
	mov	ecx, DWORD PTR tv1408[ebp]
	mov	DWORD PTR tv1171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv1171[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _fill$146[ebp]
	push	eax
	lea	ecx, DWORD PTR $T128[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1409[ebp], eax
	mov	edx, DWORD PTR tv1409[ebp]
	mov	DWORD PTR tv1173[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv1173[ebp]
	push	eax
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	ecx, DWORD PTR _figp$[ebp+20]
	push	ecx
	lea	edx, DWORD PTR $T127[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1410[ebp], eax
	mov	eax, DWORD PTR tv1410[ebp]
	mov	DWORD PTR tv1175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv1175[ebp]
	push	ecx
	push	OFFSET ??_C@_1BG@HONDCOFM@?$AA?$CC?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$DN?$AA?$CC@
	mov	edx, DWORD PTR _figp$[ebp+16]
	push	edx
	lea	eax, DWORD PTR $T126[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1411[ebp], eax
	mov	ecx, DWORD PTR tv1411[ebp]
	mov	DWORD PTR tv1177[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv1177[ebp]
	push	edx
	push	OFFSET ??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@
	lea	eax, DWORD PTR $T125[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1412[ebp], eax
	mov	ecx, DWORD PTR tv1412[ebp]
	mov	DWORD PTR tv1179[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv1179[ebp]
	push	edx
	lea	eax, DWORD PTR $T124[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1413[ebp], eax
	mov	ecx, DWORD PTR tv1413[ebp]
	mov	DWORD PTR tv1181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv1181[ebp]
	push	edx
	lea	eax, DWORD PTR $T123[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1414[ebp], eax
	mov	ecx, DWORD PTR tv1414[ebp]
	mov	DWORD PTR tv1183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv1183[ebp]
	push	edx
	lea	eax, DWORD PTR $T122[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1415[ebp], eax
	mov	ecx, DWORD PTR tv1415[ebp]
	mov	DWORD PTR tv1185[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv1185[ebp]
	push	edx
	lea	eax, DWORD PTR $T121[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1416[ebp], eax
	mov	ecx, DWORD PTR tv1416[ebp]
	mov	DWORD PTR tv1187[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv1187[ebp]
	push	edx
	lea	eax, DWORD PTR $T120[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1417[ebp], eax
	mov	ecx, DWORD PTR tv1417[ebp]
	mov	DWORD PTR tv1189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv1189[ebp]
	push	edx
	lea	eax, DWORD PTR $T119[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1418[ebp], eax
	mov	ecx, DWORD PTR tv1418[ebp]
	mov	DWORD PTR tv1191[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR tv1191[ebp]
	push	edx
	lea	eax, DWORD PTR $T118[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1419[ebp], eax
	mov	ecx, DWORD PTR tv1419[ebp]
	mov	DWORD PTR tv1193[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv1193[ebp]
	push	edx
	lea	eax, DWORD PTR $T117[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1420[ebp], eax
	mov	ecx, DWORD PTR tv1420[ebp]
	mov	DWORD PTR tv1195[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR tv1195[ebp]
	push	edx
	lea	eax, DWORD PTR $T116[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1421[ebp], eax
	mov	ecx, DWORD PTR tv1421[ebp]
	mov	DWORD PTR tv1197[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR tv1197[ebp]
	push	edx
	lea	eax, DWORD PTR $T115[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1422[ebp], eax
	mov	ecx, DWORD PTR tv1422[ebp]
	mov	DWORD PTR tv1199[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	edx, DWORD PTR tv1199[ebp]
	push	edx
	lea	eax, DWORD PTR $T114[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1423[ebp], eax
	mov	ecx, DWORD PTR tv1423[ebp]
	mov	DWORD PTR tv1201[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR tv1201[ebp]
	push	edx
	lea	eax, DWORD PTR $T113[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1424[ebp], eax
	mov	ecx, DWORD PTR tv1424[ebp]
	mov	DWORD PTR tv1203[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR tv1203[ebp]
	push	edx
	lea	eax, DWORD PTR $T112[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1425[ebp], eax
	mov	ecx, DWORD PTR tv1425[ebp]
	mov	DWORD PTR tv1205[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR tv1205[ebp]
	push	edx
	lea	eax, DWORD PTR $T111[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1426[ebp], eax
	mov	ecx, DWORD PTR tv1426[ebp]
	mov	DWORD PTR tv1207[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR tv1207[ebp]
	push	edx
	lea	eax, DWORD PTR $T110[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1427[ebp], eax
	mov	ecx, DWORD PTR tv1427[ebp]
	mov	DWORD PTR tv1209[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	edx, DWORD PTR tv1209[ebp]
	push	edx
	lea	eax, DWORD PTR $T109[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1428[ebp], eax
	mov	ecx, DWORD PTR tv1428[ebp]
	mov	DWORD PTR tv1211[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv1211[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T109[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T110[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T111[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T112[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T113[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T114[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T115[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T116[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T117[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T118[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T119[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T120[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T121[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T122[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T123[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T124[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T125[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T126[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T127[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T128[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T129[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T130[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T131[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T132[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T133[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T134[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 529
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 530
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 531
	jmp	$LN3@SaveFigure
$LN2@SaveFigure:
; Line 532
	cmp	DWORD PTR _figp$[ebp+12], 2
	jne	$LN4@SaveFigure
; Line 533
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T107[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T108[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T108[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T108[ebp+8], edx
	mov	eax, DWORD PTR $T108[ebp]
	mov	DWORD PTR _fill$144[ebp], eax
	mov	ecx, DWORD PTR $T108[ebp+4]
	mov	DWORD PTR _fill$144[ebp+4], ecx
	mov	edx, DWORD PTR $T108[ebp+8]
	mov	DWORD PTR _fill$144[ebp+8], edx
; Line 534
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T105[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T106[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T106[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T106[ebp+8], edx
	mov	eax, DWORD PTR $T106[ebp]
	mov	DWORD PTR _outc$143[ebp], eax
	mov	ecx, DWORD PTR $T106[ebp+4]
	mov	DWORD PTR _outc$143[ebp+4], ecx
	mov	edx, DWORD PTR $T106[ebp+8]
	mov	DWORD PTR _outc$143[ebp+8], edx
; Line 535
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$143[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T104[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1429[ebp], eax
	mov	edx, DWORD PTR tv1429[ebp]
	mov	DWORD PTR tv1213[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	eax, DWORD PTR tv1213[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$143[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T103[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1430[ebp], eax
	mov	eax, DWORD PTR tv1430[ebp]
	mov	DWORD PTR tv1215[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv1215[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$143[ebp]
	push	edx
	lea	eax, DWORD PTR $T102[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1431[ebp], eax
	mov	ecx, DWORD PTR tv1431[ebp]
	mov	DWORD PTR tv1217[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	edx, DWORD PTR tv1217[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T101[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1432[ebp], eax
	mov	edx, DWORD PTR tv1432[ebp]
	mov	DWORD PTR tv1219[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	eax, DWORD PTR tv1219[ebp]
	push	eax
	push	OFFSET ??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	ecx, DWORD PTR _fill$144[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T100[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1433[ebp], eax
	mov	eax, DWORD PTR tv1433[ebp]
	mov	DWORD PTR tv1221[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv1221[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$144[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T99[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1434[ebp], eax
	mov	ecx, DWORD PTR tv1434[ebp]
	mov	DWORD PTR tv1223[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	edx, DWORD PTR tv1223[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _fill$144[ebp]
	push	eax
	lea	ecx, DWORD PTR $T98[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1435[ebp], eax
	mov	edx, DWORD PTR tv1435[ebp]
	mov	DWORD PTR tv1225[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	eax, DWORD PTR tv1225[ebp]
	push	eax
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	ecx, DWORD PTR _figp$[ebp+16]
	push	ecx
	lea	edx, DWORD PTR $T97[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1436[ebp], eax
	mov	eax, DWORD PTR tv1436[ebp]
	mov	DWORD PTR tv1227[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR tv1227[ebp]
	push	ecx
	push	OFFSET ??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@
	lea	edx, DWORD PTR $T96[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1437[ebp], eax
	mov	eax, DWORD PTR tv1437[ebp]
	mov	DWORD PTR tv1229[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	ecx, DWORD PTR tv1229[ebp]
	push	ecx
	lea	edx, DWORD PTR $T95[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1438[ebp], eax
	mov	eax, DWORD PTR tv1438[ebp]
	mov	DWORD PTR tv1231[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR tv1231[ebp]
	push	ecx
	lea	edx, DWORD PTR $T94[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1439[ebp], eax
	mov	eax, DWORD PTR tv1439[ebp]
	mov	DWORD PTR tv1233[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	ecx, DWORD PTR tv1233[ebp]
	push	ecx
	lea	edx, DWORD PTR $T93[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1440[ebp], eax
	mov	eax, DWORD PTR tv1440[ebp]
	mov	DWORD PTR tv1235[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR tv1235[ebp]
	push	ecx
	lea	edx, DWORD PTR $T92[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1441[ebp], eax
	mov	eax, DWORD PTR tv1441[ebp]
	mov	DWORD PTR tv1237[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR tv1237[ebp]
	push	ecx
	lea	edx, DWORD PTR $T91[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1442[ebp], eax
	mov	eax, DWORD PTR tv1442[ebp]
	mov	DWORD PTR tv1239[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	ecx, DWORD PTR tv1239[ebp]
	push	ecx
	lea	edx, DWORD PTR $T90[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1443[ebp], eax
	mov	eax, DWORD PTR tv1443[ebp]
	mov	DWORD PTR tv1241[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	ecx, DWORD PTR tv1241[ebp]
	push	ecx
	lea	edx, DWORD PTR $T89[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1444[ebp], eax
	mov	eax, DWORD PTR tv1444[ebp]
	mov	DWORD PTR tv1243[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	ecx, DWORD PTR tv1243[ebp]
	push	ecx
	lea	edx, DWORD PTR $T88[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1445[ebp], eax
	mov	eax, DWORD PTR tv1445[ebp]
	mov	DWORD PTR tv1245[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, DWORD PTR tv1245[ebp]
	push	ecx
	lea	edx, DWORD PTR $T87[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1446[ebp], eax
	mov	eax, DWORD PTR tv1446[ebp]
	mov	DWORD PTR tv1247[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	ecx, DWORD PTR tv1247[ebp]
	push	ecx
	lea	edx, DWORD PTR $T86[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1447[ebp], eax
	mov	eax, DWORD PTR tv1447[ebp]
	mov	DWORD PTR tv1249[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	ecx, DWORD PTR tv1249[ebp]
	push	ecx
	lea	edx, DWORD PTR $T85[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1448[ebp], eax
	mov	eax, DWORD PTR tv1448[ebp]
	mov	DWORD PTR tv1251[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	ecx, DWORD PTR tv1251[ebp]
	push	ecx
	lea	edx, DWORD PTR $T84[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1449[ebp], eax
	mov	eax, DWORD PTR tv1449[ebp]
	mov	DWORD PTR tv1253[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	ecx, DWORD PTR tv1253[ebp]
	push	ecx
	lea	edx, DWORD PTR $T83[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1450[ebp], eax
	mov	eax, DWORD PTR tv1450[ebp]
	mov	DWORD PTR tv1255[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	ecx, DWORD PTR tv1255[ebp]
	push	ecx
	lea	edx, DWORD PTR $T82[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1451[ebp], eax
	mov	eax, DWORD PTR tv1451[ebp]
	mov	DWORD PTR tv1257[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	ecx, DWORD PTR tv1257[ebp]
	push	ecx
	lea	edx, DWORD PTR _out$[ebp]
	push	edx
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T82[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T83[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	lea	ecx, DWORD PTR $T84[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T85[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T86[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T87[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	lea	ecx, DWORD PTR $T88[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T89[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T90[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T91[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T92[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T93[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T94[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T95[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T96[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T97[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T98[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T99[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T100[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T101[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T102[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR $T103[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T104[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 536
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 537
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 538
	jmp	$LN3@SaveFigure
$LN4@SaveFigure:
; Line 539
	cmp	DWORD PTR _figp$[ebp+12], 3
	jne	$LN6@SaveFigure
; Line 540
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T80[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T81[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T81[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T81[ebp+8], edx
	mov	eax, DWORD PTR $T81[ebp]
	mov	DWORD PTR _fill$142[ebp], eax
	mov	ecx, DWORD PTR $T81[ebp+4]
	mov	DWORD PTR _fill$142[ebp+4], ecx
	mov	edx, DWORD PTR $T81[ebp+8]
	mov	DWORD PTR _fill$142[ebp+8], edx
; Line 541
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T78[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T79[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T79[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T79[ebp+8], edx
	mov	eax, DWORD PTR $T79[ebp]
	mov	DWORD PTR _outc$141[ebp], eax
	mov	ecx, DWORD PTR $T79[ebp+4]
	mov	DWORD PTR _outc$141[ebp+4], ecx
	mov	edx, DWORD PTR $T79[ebp+8]
	mov	DWORD PTR _outc$141[ebp+8], edx
; Line 542
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$141[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T77[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1452[ebp], eax
	mov	edx, DWORD PTR tv1452[ebp]
	mov	DWORD PTR tv1259[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	mov	eax, DWORD PTR tv1259[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$141[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T76[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1453[ebp], eax
	mov	eax, DWORD PTR tv1453[ebp]
	mov	DWORD PTR tv1261[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	ecx, DWORD PTR tv1261[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$141[ebp]
	push	edx
	lea	eax, DWORD PTR $T75[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1454[ebp], eax
	mov	ecx, DWORD PTR tv1454[ebp]
	mov	DWORD PTR tv1263[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	edx, DWORD PTR tv1263[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	eax, DWORD PTR _fill$142[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T74[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1455[ebp], eax
	mov	edx, DWORD PTR tv1455[ebp]
	mov	DWORD PTR tv1265[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	eax, DWORD PTR tv1265[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _fill$142[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T73[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1456[ebp], eax
	mov	eax, DWORD PTR tv1456[ebp]
	mov	DWORD PTR tv1267[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	ecx, DWORD PTR tv1267[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _fill$142[ebp]
	push	edx
	lea	eax, DWORD PTR $T72[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1457[ebp], eax
	mov	ecx, DWORD PTR tv1457[ebp]
	mov	DWORD PTR tv1269[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	edx, DWORD PTR tv1269[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T71[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1458[ebp], eax
	mov	edx, DWORD PTR tv1458[ebp]
	mov	DWORD PTR tv1271[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	eax, DWORD PTR tv1271[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T70[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1459[ebp], eax
	mov	eax, DWORD PTR tv1459[ebp]
	mov	DWORD PTR tv1273[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR tv1273[ebp]
	push	ecx
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T69[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1460[ebp], eax
	mov	ecx, DWORD PTR tv1460[ebp]
	mov	DWORD PTR tv1275[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	mov	edx, DWORD PTR tv1275[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T68[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1461[ebp], eax
	mov	edx, DWORD PTR tv1461[ebp]
	mov	DWORD PTR tv1277[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	eax, DWORD PTR tv1277[ebp]
	push	eax
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T67[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1462[ebp], eax
	mov	eax, DWORD PTR tv1462[ebp]
	mov	DWORD PTR tv1279[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	ecx, DWORD PTR tv1279[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T66[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1463[ebp], eax
	mov	ecx, DWORD PTR tv1463[ebp]
	mov	DWORD PTR tv1281[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	edx, DWORD PTR tv1281[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@
	lea	eax, DWORD PTR $T65[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1464[ebp], eax
	mov	ecx, DWORD PTR tv1464[ebp]
	mov	DWORD PTR tv1283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	edx, DWORD PTR tv1283[ebp]
	push	edx
	lea	eax, DWORD PTR $T64[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1465[ebp], eax
	mov	ecx, DWORD PTR tv1465[ebp]
	mov	DWORD PTR tv1285[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	edx, DWORD PTR tv1285[ebp]
	push	edx
	lea	eax, DWORD PTR $T63[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1466[ebp], eax
	mov	ecx, DWORD PTR tv1466[ebp]
	mov	DWORD PTR tv1287[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	mov	edx, DWORD PTR tv1287[ebp]
	push	edx
	lea	eax, DWORD PTR $T62[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1467[ebp], eax
	mov	ecx, DWORD PTR tv1467[ebp]
	mov	DWORD PTR tv1289[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR tv1289[ebp]
	push	edx
	lea	eax, DWORD PTR $T61[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1468[ebp], eax
	mov	ecx, DWORD PTR tv1468[ebp]
	mov	DWORD PTR tv1291[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	mov	edx, DWORD PTR tv1291[ebp]
	push	edx
	lea	eax, DWORD PTR $T60[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1469[ebp], eax
	mov	ecx, DWORD PTR tv1469[ebp]
	mov	DWORD PTR tv1293[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	edx, DWORD PTR tv1293[ebp]
	push	edx
	lea	eax, DWORD PTR $T59[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1470[ebp], eax
	mov	ecx, DWORD PTR tv1470[ebp]
	mov	DWORD PTR tv1295[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	mov	edx, DWORD PTR tv1295[ebp]
	push	edx
	lea	eax, DWORD PTR $T58[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1471[ebp], eax
	mov	ecx, DWORD PTR tv1471[ebp]
	mov	DWORD PTR tv1297[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	edx, DWORD PTR tv1297[ebp]
	push	edx
	lea	eax, DWORD PTR $T57[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1472[ebp], eax
	mov	ecx, DWORD PTR tv1472[ebp]
	mov	DWORD PTR tv1299[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	edx, DWORD PTR tv1299[ebp]
	push	edx
	lea	eax, DWORD PTR $T56[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1473[ebp], eax
	mov	ecx, DWORD PTR tv1473[ebp]
	mov	DWORD PTR tv1301[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	edx, DWORD PTR tv1301[ebp]
	push	edx
	lea	eax, DWORD PTR $T55[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1474[ebp], eax
	mov	ecx, DWORD PTR tv1474[ebp]
	mov	DWORD PTR tv1303[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	mov	edx, DWORD PTR tv1303[ebp]
	push	edx
	lea	eax, DWORD PTR $T54[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1475[ebp], eax
	mov	ecx, DWORD PTR tv1475[ebp]
	mov	DWORD PTR tv1305[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	edx, DWORD PTR tv1305[ebp]
	push	edx
	lea	eax, DWORD PTR $T53[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1476[ebp], eax
	mov	ecx, DWORD PTR tv1476[ebp]
	mov	DWORD PTR tv1307[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	edx, DWORD PTR tv1307[ebp]
	push	edx
	lea	eax, DWORD PTR $T52[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1477[ebp], eax
	mov	ecx, DWORD PTR tv1477[ebp]
	mov	DWORD PTR tv1309[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	edx, DWORD PTR tv1309[ebp]
	push	edx
	lea	eax, DWORD PTR $T51[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1478[ebp], eax
	mov	ecx, DWORD PTR tv1478[ebp]
	mov	DWORD PTR tv1311[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	mov	edx, DWORD PTR tv1311[ebp]
	push	edx
	lea	eax, DWORD PTR $T50[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1479[ebp], eax
	mov	ecx, DWORD PTR tv1479[ebp]
	mov	DWORD PTR tv1313[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	edx, DWORD PTR tv1313[ebp]
	push	edx
	lea	eax, DWORD PTR $T49[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1480[ebp], eax
	mov	ecx, DWORD PTR tv1480[ebp]
	mov	DWORD PTR tv1315[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	mov	edx, DWORD PTR tv1315[ebp]
	push	edx
	lea	eax, DWORD PTR $T48[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1481[ebp], eax
	mov	ecx, DWORD PTR tv1481[ebp]
	mov	DWORD PTR tv1317[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	edx, DWORD PTR tv1317[ebp]
	push	edx
	lea	eax, DWORD PTR $T47[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1482[ebp], eax
	mov	ecx, DWORD PTR tv1482[ebp]
	mov	DWORD PTR tv1319[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	edx, DWORD PTR tv1319[ebp]
	push	edx
	lea	eax, DWORD PTR $T46[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1483[ebp], eax
	mov	ecx, DWORD PTR tv1483[ebp]
	mov	DWORD PTR tv1321[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	edx, DWORD PTR tv1321[ebp]
	push	edx
	lea	eax, DWORD PTR $T45[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1484[ebp], eax
	mov	ecx, DWORD PTR tv1484[ebp]
	mov	DWORD PTR tv1323[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	mov	edx, DWORD PTR tv1323[ebp]
	push	edx
	lea	eax, DWORD PTR $T44[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1485[ebp], eax
	mov	ecx, DWORD PTR tv1485[ebp]
	mov	DWORD PTR tv1325[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR tv1325[ebp]
	push	edx
	lea	eax, DWORD PTR $T43[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1486[ebp], eax
	mov	ecx, DWORD PTR tv1486[ebp]
	mov	DWORD PTR tv1327[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	mov	edx, DWORD PTR tv1327[ebp]
	push	edx
	lea	eax, DWORD PTR $T42[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1487[ebp], eax
	mov	ecx, DWORD PTR tv1487[ebp]
	mov	DWORD PTR tv1329[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	edx, DWORD PTR tv1329[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T42[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T43[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T44[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	lea	ecx, DWORD PTR $T45[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	lea	ecx, DWORD PTR $T46[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	lea	ecx, DWORD PTR $T47[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	lea	ecx, DWORD PTR $T48[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	lea	ecx, DWORD PTR $T49[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	lea	ecx, DWORD PTR $T50[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	lea	ecx, DWORD PTR $T51[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T52[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T53[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T54[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	lea	ecx, DWORD PTR $T55[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	lea	ecx, DWORD PTR $T56[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	lea	ecx, DWORD PTR $T57[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	lea	ecx, DWORD PTR $T58[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	lea	ecx, DWORD PTR $T59[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR $T60[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR $T61[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR $T62[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	lea	ecx, DWORD PTR $T63[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T64[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T65[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T66[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T67[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T68[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T69[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T70[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T71[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T72[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T73[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	lea	ecx, DWORD PTR $T74[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	lea	ecx, DWORD PTR $T75[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR $T76[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T77[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 543
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 544
	jmp	$LN3@SaveFigure
$LN6@SaveFigure:
; Line 545
	cmp	DWORD PTR _figp$[ebp+12], 4
	jne	$LN3@SaveFigure
; Line 546
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T40[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T41[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T41[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T41[ebp+8], edx
	mov	eax, DWORD PTR $T41[ebp]
	mov	DWORD PTR _fill$140[ebp], eax
	mov	ecx, DWORD PTR $T41[ebp+4]
	mov	DWORD PTR _fill$140[ebp+4], ecx
	mov	edx, DWORD PTR $T41[ebp+8]
	mov	DWORD PTR _fill$140[ebp+8], edx
; Line 547
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T38[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T39[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T39[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T39[ebp+8], edx
	mov	eax, DWORD PTR $T39[ebp]
	mov	DWORD PTR _outc$139[ebp], eax
	mov	ecx, DWORD PTR $T39[ebp+4]
	mov	DWORD PTR _outc$139[ebp+4], ecx
	mov	edx, DWORD PTR $T39[ebp+8]
	mov	DWORD PTR _outc$139[ebp+8], edx
; Line 548
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$139[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1488[ebp], eax
	mov	edx, DWORD PTR tv1488[ebp]
	mov	DWORD PTR tv1331[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	mov	eax, DWORD PTR tv1331[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$139[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T36[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1489[ebp], eax
	mov	eax, DWORD PTR tv1489[ebp]
	mov	DWORD PTR tv1333[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	ecx, DWORD PTR tv1333[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$139[ebp]
	push	edx
	lea	eax, DWORD PTR $T35[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1490[ebp], eax
	mov	ecx, DWORD PTR tv1490[ebp]
	mov	DWORD PTR tv1335[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	mov	edx, DWORD PTR tv1335[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	eax, DWORD PTR _fill$140[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1491[ebp], eax
	mov	edx, DWORD PTR tv1491[ebp]
	mov	DWORD PTR tv1337[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	eax, DWORD PTR tv1337[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _fill$140[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T33[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1492[ebp], eax
	mov	eax, DWORD PTR tv1492[ebp]
	mov	DWORD PTR tv1339[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	mov	ecx, DWORD PTR tv1339[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _fill$140[ebp]
	push	edx
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1493[ebp], eax
	mov	ecx, DWORD PTR tv1493[ebp]
	mov	DWORD PTR tv1341[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	edx, DWORD PTR tv1341[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1494[ebp], eax
	mov	edx, DWORD PTR tv1494[ebp]
	mov	DWORD PTR tv1343[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	eax, DWORD PTR tv1343[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1495[ebp], eax
	mov	eax, DWORD PTR tv1495[ebp]
	mov	DWORD PTR tv1345[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	ecx, DWORD PTR tv1345[ebp]
	push	ecx
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1496[ebp], eax
	mov	ecx, DWORD PTR tv1496[ebp]
	mov	DWORD PTR tv1347[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	edx, DWORD PTR tv1347[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T28[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1497[ebp], eax
	mov	edx, DWORD PTR tv1497[ebp]
	mov	DWORD PTR tv1349[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	eax, DWORD PTR tv1349[ebp]
	push	eax
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1498[ebp], eax
	mov	eax, DWORD PTR tv1498[ebp]
	mov	DWORD PTR tv1351[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	mov	ecx, DWORD PTR tv1351[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1499[ebp], eax
	mov	ecx, DWORD PTR tv1499[ebp]
	mov	DWORD PTR tv1353[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	edx, DWORD PTR tv1353[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@
	lea	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1500[ebp], eax
	mov	ecx, DWORD PTR tv1500[ebp]
	mov	DWORD PTR tv1355[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	mov	edx, DWORD PTR tv1355[ebp]
	push	edx
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1501[ebp], eax
	mov	ecx, DWORD PTR tv1501[ebp]
	mov	DWORD PTR tv1357[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	edx, DWORD PTR tv1357[ebp]
	push	edx
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1502[ebp], eax
	mov	ecx, DWORD PTR tv1502[ebp]
	mov	DWORD PTR tv1359[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	mov	edx, DWORD PTR tv1359[ebp]
	push	edx
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1503[ebp], eax
	mov	ecx, DWORD PTR tv1503[ebp]
	mov	DWORD PTR tv1361[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	edx, DWORD PTR tv1361[ebp]
	push	edx
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1504[ebp], eax
	mov	ecx, DWORD PTR tv1504[ebp]
	mov	DWORD PTR tv1363[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	edx, DWORD PTR tv1363[ebp]
	push	edx
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1505[ebp], eax
	mov	ecx, DWORD PTR tv1505[ebp]
	mov	DWORD PTR tv1365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	edx, DWORD PTR tv1365[ebp]
	push	edx
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1506[ebp], eax
	mov	ecx, DWORD PTR tv1506[ebp]
	mov	DWORD PTR tv1367[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	mov	edx, DWORD PTR tv1367[ebp]
	push	edx
	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1507[ebp], eax
	mov	ecx, DWORD PTR tv1507[ebp]
	mov	DWORD PTR tv1369[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	edx, DWORD PTR tv1369[ebp]
	push	edx
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1508[ebp], eax
	mov	ecx, DWORD PTR tv1508[ebp]
	mov	DWORD PTR tv1371[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	edx, DWORD PTR tv1371[ebp]
	push	edx
	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1509[ebp], eax
	mov	ecx, DWORD PTR tv1509[ebp]
	mov	DWORD PTR tv1373[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	edx, DWORD PTR tv1373[ebp]
	push	edx
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1510[ebp], eax
	mov	ecx, DWORD PTR tv1510[ebp]
	mov	DWORD PTR tv1375[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	mov	edx, DWORD PTR tv1375[ebp]
	push	edx
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1511[ebp], eax
	mov	ecx, DWORD PTR tv1511[ebp]
	mov	DWORD PTR tv1377[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	edx, DWORD PTR tv1377[ebp]
	push	edx
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1512[ebp], eax
	mov	ecx, DWORD PTR tv1512[ebp]
	mov	DWORD PTR tv1379[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	mov	edx, DWORD PTR tv1379[ebp]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1513[ebp], eax
	mov	ecx, DWORD PTR tv1513[ebp]
	mov	DWORD PTR tv1381[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	edx, DWORD PTR tv1381[ebp]
	push	edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1514[ebp], eax
	mov	ecx, DWORD PTR tv1514[ebp]
	mov	DWORD PTR tv1383[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	edx, DWORD PTR tv1383[ebp]
	push	edx
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1515[ebp], eax
	mov	ecx, DWORD PTR tv1515[ebp]
	mov	DWORD PTR tv1385[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	edx, DWORD PTR tv1385[ebp]
	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1516[ebp], eax
	mov	ecx, DWORD PTR tv1516[ebp]
	mov	DWORD PTR tv1387[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	edx, DWORD PTR tv1387[ebp]
	push	edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1517[ebp], eax
	mov	ecx, DWORD PTR tv1517[ebp]
	mov	DWORD PTR tv1389[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	edx, DWORD PTR tv1389[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1518[ebp], eax
	mov	ecx, DWORD PTR tv1518[ebp]
	mov	DWORD PTR tv1391[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	mov	edx, DWORD PTR tv1391[ebp]
	push	edx
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1519[ebp], eax
	mov	ecx, DWORD PTR tv1519[ebp]
	mov	DWORD PTR tv1393[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	edx, DWORD PTR tv1393[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1520[ebp], eax
	mov	ecx, DWORD PTR tv1520[ebp]
	mov	DWORD PTR tv1395[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	edx, DWORD PTR tv1395[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1521[ebp], eax
	mov	ecx, DWORD PTR tv1521[ebp]
	mov	DWORD PTR tv1397[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	mov	edx, DWORD PTR tv1397[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1522[ebp], eax
	mov	ecx, DWORD PTR tv1522[ebp]
	mov	DWORD PTR tv1399[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR tv1399[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1523[ebp], eax
	mov	ecx, DWORD PTR tv1523[ebp]
	mov	DWORD PTR tv1401[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	mov	edx, DWORD PTR tv1401[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 549
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
$LN3@SaveFigure:
; Line 551
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1BA@FCHDDOBP@?$AA?$DM?$AA?1?$AAb?$AAo?$AAd?$AAy?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 552
	push	OFFSET ??_C@_1BA@CLFOCEGC@?$AA?$DM?$AA?1?$AAh?$AAt?$AAm?$AAl?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 553
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 554
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _figp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN146@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 6872				; 00001ad8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN146@SaveFigure:
	DD	9
	DD	$LN145@SaveFigure
$LN145@SaveFigure:
	DD	-208					; ffffff30H
	DD	176					; 000000b0H
	DD	$LN135@SaveFigure
	DD	-228					; ffffff1cH
	DD	12					; 0000000cH
	DD	$LN136@SaveFigure
	DD	-248					; ffffff08H
	DD	12					; 0000000cH
	DD	$LN137@SaveFigure
	DD	-268					; fffffef4H
	DD	12					; 0000000cH
	DD	$LN138@SaveFigure
	DD	-288					; fffffee0H
	DD	12					; 0000000cH
	DD	$LN139@SaveFigure
	DD	-308					; fffffeccH
	DD	12					; 0000000cH
	DD	$LN140@SaveFigure
	DD	-328					; fffffeb8H
	DD	12					; 0000000cH
	DD	$LN141@SaveFigure
	DD	-348					; fffffea4H
	DD	12					; 0000000cH
	DD	$LN142@SaveFigure
	DD	-368					; fffffe90H
	DD	12					; 0000000cH
	DD	$LN143@SaveFigure
$LN143@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN142@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN141@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN140@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN139@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN138@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN137@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN136@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN135@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _figp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T134[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T133[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T132[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T131[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T130[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T129[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T128[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T127[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T126[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T125[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T124[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T123[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T122[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T121[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T120[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T119[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T118[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T117[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T116[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T115[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T114[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$24:
	lea	ecx, DWORD PTR $T113[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T112[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$26:
	lea	ecx, DWORD PTR $T111[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T110[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$28:
	lea	ecx, DWORD PTR $T109[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T104[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$30:
	lea	ecx, DWORD PTR $T103[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$31:
	lea	ecx, DWORD PTR $T102[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T101[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$33:
	lea	ecx, DWORD PTR $T100[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T99[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$35:
	lea	ecx, DWORD PTR $T98[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T97[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T96[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$38:
	lea	ecx, DWORD PTR $T95[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$39:
	lea	ecx, DWORD PTR $T94[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T93[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T92[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T91[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$43:
	lea	ecx, DWORD PTR $T90[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$44:
	lea	ecx, DWORD PTR $T89[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$45:
	lea	ecx, DWORD PTR $T88[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$46:
	lea	ecx, DWORD PTR $T87[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$47:
	lea	ecx, DWORD PTR $T86[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$48:
	lea	ecx, DWORD PTR $T85[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$49:
	lea	ecx, DWORD PTR $T84[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$50:
	lea	ecx, DWORD PTR $T83[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$51:
	lea	ecx, DWORD PTR $T82[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$52:
	lea	ecx, DWORD PTR $T77[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$53:
	lea	ecx, DWORD PTR $T76[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$54:
	lea	ecx, DWORD PTR $T75[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$55:
	lea	ecx, DWORD PTR $T74[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$56:
	lea	ecx, DWORD PTR $T73[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$57:
	lea	ecx, DWORD PTR $T72[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$58:
	lea	ecx, DWORD PTR $T71[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$59:
	lea	ecx, DWORD PTR $T70[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$60:
	lea	ecx, DWORD PTR $T69[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$61:
	lea	ecx, DWORD PTR $T68[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$62:
	lea	ecx, DWORD PTR $T67[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$63:
	lea	ecx, DWORD PTR $T66[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$64:
	lea	ecx, DWORD PTR $T65[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$65:
	lea	ecx, DWORD PTR $T64[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$66:
	lea	ecx, DWORD PTR $T63[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$67:
	lea	ecx, DWORD PTR $T62[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$68:
	lea	ecx, DWORD PTR $T61[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$69:
	lea	ecx, DWORD PTR $T60[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$70:
	lea	ecx, DWORD PTR $T59[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$71:
	lea	ecx, DWORD PTR $T58[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$72:
	lea	ecx, DWORD PTR $T57[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$73:
	lea	ecx, DWORD PTR $T56[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$74:
	lea	ecx, DWORD PTR $T55[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$75:
	lea	ecx, DWORD PTR $T54[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$76:
	lea	ecx, DWORD PTR $T53[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$77:
	lea	ecx, DWORD PTR $T52[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$78:
	lea	ecx, DWORD PTR $T51[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$79:
	lea	ecx, DWORD PTR $T50[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$80:
	lea	ecx, DWORD PTR $T49[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$81:
	lea	ecx, DWORD PTR $T48[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$82:
	lea	ecx, DWORD PTR $T47[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$83:
	lea	ecx, DWORD PTR $T46[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$84:
	lea	ecx, DWORD PTR $T45[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$85:
	lea	ecx, DWORD PTR $T44[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$86:
	lea	ecx, DWORD PTR $T43[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$87:
	lea	ecx, DWORD PTR $T42[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$88:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$89:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$90:
	lea	ecx, DWORD PTR $T35[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$91:
	lea	ecx, DWORD PTR $T34[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$92:
	lea	ecx, DWORD PTR $T33[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$93:
	lea	ecx, DWORD PTR $T32[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$94:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$95:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$96:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$97:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$98:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$99:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$100:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$101:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$102:
	lea	ecx, DWORD PTR $T23[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$103:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$104:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$105:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$106:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$107:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$108:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$109:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$110:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$111:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$112:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$113:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$114:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$115:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$116:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$117:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$118:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$119:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$120:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$121:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$122:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$123:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6876]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigurePartToHtmlW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; SaveFigurePartToHtmlW
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4725
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4726
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
	push	eax
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	call	??$_Insert_string@_WU?$char_traits@_W@std@@I@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@QB_WI@Z ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned int>
	add	esp, 12					; 0000000cH
; Line 4727
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
$T2 = -197						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z PROC ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4516
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
$LN4@operator:
; Line 4518
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	4522					; 000011aaH
	push	OFFSET ??_C@_0FE@LCNAMHNP@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	mov	esi, esp
	push	0
	push	4522					; 000011aaH
	push	OFFSET ??_C@_1KI@BCEOLJOE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@
	push	OFFSET ??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
; Line 4524
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4525
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ENDP ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z PROC ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4541
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4542
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	push	eax
	call	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ENDP ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z PROC ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4530
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
	push	eax
	call	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4531
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ENDP ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z PROC ; std::endl<wchar_t,std::char_traits<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 978
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 979
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 980
	mov	esi, esp
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 981
	mov	eax, DWORD PTR __Ostr$[ebp]
; Line 982
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ENDP ; std::endl<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
tv1362 = -6872						; size = 4
tv1290 = -6872						; size = 4
tv1484 = -6868						; size = 4
tv1448 = -6868						; size = 4
tv1360 = -6864						; size = 4
tv1288 = -6864						; size = 4
tv1483 = -6860						; size = 4
tv1447 = -6860						; size = 4
tv1358 = -6856						; size = 4
tv1286 = -6856						; size = 4
tv1482 = -6852						; size = 4
tv1446 = -6852						; size = 4
tv1356 = -6848						; size = 4
tv1284 = -6848						; size = 4
tv1481 = -6844						; size = 4
tv1445 = -6844						; size = 4
tv1354 = -6840						; size = 4
tv1282 = -6840						; size = 4
tv1480 = -6836						; size = 4
tv1444 = -6836						; size = 4
tv1352 = -6832						; size = 4
tv1280 = -6832						; size = 4
tv1479 = -6828						; size = 4
tv1443 = -6828						; size = 4
tv1350 = -6824						; size = 4
tv1278 = -6824						; size = 4
tv1478 = -6820						; size = 4
tv1442 = -6820						; size = 4
tv1348 = -6816						; size = 4
tv1276 = -6816						; size = 4
tv1477 = -6812						; size = 4
tv1441 = -6812						; size = 4
tv1346 = -6808						; size = 4
tv1274 = -6808						; size = 4
tv1476 = -6804						; size = 4
tv1440 = -6804						; size = 4
tv1344 = -6800						; size = 4
tv1272 = -6800						; size = 4
tv1475 = -6796						; size = 4
tv1439 = -6796						; size = 4
tv1342 = -6792						; size = 4
tv1270 = -6792						; size = 4
tv1172 = -6792						; size = 4
tv1474 = -6788						; size = 4
tv1438 = -6788						; size = 4
tv1389 = -6788						; size = 4
tv1340 = -6784						; size = 4
tv1268 = -6784						; size = 4
tv1170 = -6784						; size = 4
tv1473 = -6780						; size = 4
tv1437 = -6780						; size = 4
tv1388 = -6780						; size = 4
tv1338 = -6776						; size = 4
tv1266 = -6776						; size = 4
tv1168 = -6776						; size = 4
tv1472 = -6772						; size = 4
tv1436 = -6772						; size = 4
tv1387 = -6772						; size = 4
tv1336 = -6768						; size = 4
tv1264 = -6768						; size = 4
tv1218 = -6768						; size = 4
tv1166 = -6768						; size = 4
tv1471 = -6764						; size = 4
tv1435 = -6764						; size = 4
tv1412 = -6764						; size = 4
tv1386 = -6764						; size = 4
tv1334 = -6760						; size = 4
tv1262 = -6760						; size = 4
tv1216 = -6760						; size = 4
tv1164 = -6760						; size = 4
tv1470 = -6756						; size = 4
tv1434 = -6756						; size = 4
tv1411 = -6756						; size = 4
tv1385 = -6756						; size = 4
tv1332 = -6752						; size = 4
tv1260 = -6752						; size = 4
tv1214 = -6752						; size = 4
tv1162 = -6752						; size = 4
tv1469 = -6748						; size = 4
tv1433 = -6748						; size = 4
tv1410 = -6748						; size = 4
tv1384 = -6748						; size = 4
tv1330 = -6744						; size = 4
tv1258 = -6744						; size = 4
tv1212 = -6744						; size = 4
tv1160 = -6744						; size = 4
tv1468 = -6740						; size = 4
tv1432 = -6740						; size = 4
tv1409 = -6740						; size = 4
tv1383 = -6740						; size = 4
tv1328 = -6736						; size = 4
tv1256 = -6736						; size = 4
tv1210 = -6736						; size = 4
tv1158 = -6736						; size = 4
tv1467 = -6732						; size = 4
tv1431 = -6732						; size = 4
tv1408 = -6732						; size = 4
tv1382 = -6732						; size = 4
tv1326 = -6728						; size = 4
tv1254 = -6728						; size = 4
tv1208 = -6728						; size = 4
tv1156 = -6728						; size = 4
tv1466 = -6724						; size = 4
tv1430 = -6724						; size = 4
tv1407 = -6724						; size = 4
tv1381 = -6724						; size = 4
tv1324 = -6720						; size = 4
tv1252 = -6720						; size = 4
tv1206 = -6720						; size = 4
tv1154 = -6720						; size = 4
tv1465 = -6716						; size = 4
tv1429 = -6716						; size = 4
tv1406 = -6716						; size = 4
tv1380 = -6716						; size = 4
tv1322 = -6712						; size = 4
tv1250 = -6712						; size = 4
tv1204 = -6712						; size = 4
tv1152 = -6712						; size = 4
tv1464 = -6708						; size = 4
tv1428 = -6708						; size = 4
tv1405 = -6708						; size = 4
tv1379 = -6708						; size = 4
tv1320 = -6704						; size = 4
tv1248 = -6704						; size = 4
tv1202 = -6704						; size = 4
tv1150 = -6704						; size = 4
tv1463 = -6700						; size = 4
tv1427 = -6700						; size = 4
tv1404 = -6700						; size = 4
tv1378 = -6700						; size = 4
tv1318 = -6696						; size = 4
tv1246 = -6696						; size = 4
tv1200 = -6696						; size = 4
tv1148 = -6696						; size = 4
tv1462 = -6692						; size = 4
tv1426 = -6692						; size = 4
tv1403 = -6692						; size = 4
tv1377 = -6692						; size = 4
tv1316 = -6688						; size = 4
tv1244 = -6688						; size = 4
tv1198 = -6688						; size = 4
tv1146 = -6688						; size = 4
tv1461 = -6684						; size = 4
tv1425 = -6684						; size = 4
tv1402 = -6684						; size = 4
tv1376 = -6684						; size = 4
tv1314 = -6680						; size = 4
tv1242 = -6680						; size = 4
tv1196 = -6680						; size = 4
tv1144 = -6680						; size = 4
tv1460 = -6676						; size = 4
tv1424 = -6676						; size = 4
tv1401 = -6676						; size = 4
tv1375 = -6676						; size = 4
tv1312 = -6672						; size = 4
tv1240 = -6672						; size = 4
tv1194 = -6672						; size = 4
tv1142 = -6672						; size = 4
tv1459 = -6668						; size = 4
tv1423 = -6668						; size = 4
tv1400 = -6668						; size = 4
tv1374 = -6668						; size = 4
tv1310 = -6664						; size = 4
tv1238 = -6664						; size = 4
tv1192 = -6664						; size = 4
tv1140 = -6664						; size = 4
tv1458 = -6660						; size = 4
tv1422 = -6660						; size = 4
tv1399 = -6660						; size = 4
tv1373 = -6660						; size = 4
tv1308 = -6656						; size = 4
tv1236 = -6656						; size = 4
tv1190 = -6656						; size = 4
tv1138 = -6656						; size = 4
tv1457 = -6652						; size = 4
tv1421 = -6652						; size = 4
tv1398 = -6652						; size = 4
tv1372 = -6652						; size = 4
tv1306 = -6648						; size = 4
tv1234 = -6648						; size = 4
tv1188 = -6648						; size = 4
tv1136 = -6648						; size = 4
tv1456 = -6644						; size = 4
tv1420 = -6644						; size = 4
tv1397 = -6644						; size = 4
tv1371 = -6644						; size = 4
tv1304 = -6640						; size = 4
tv1232 = -6640						; size = 4
tv1186 = -6640						; size = 4
tv1134 = -6640						; size = 4
tv1455 = -6636						; size = 4
tv1419 = -6636						; size = 4
tv1396 = -6636						; size = 4
tv1370 = -6636						; size = 4
tv1302 = -6632						; size = 4
tv1230 = -6632						; size = 4
tv1184 = -6632						; size = 4
tv1132 = -6632						; size = 4
tv1454 = -6628						; size = 4
tv1418 = -6628						; size = 4
tv1395 = -6628						; size = 4
tv1369 = -6628						; size = 4
tv1300 = -6624						; size = 4
tv1228 = -6624						; size = 4
tv1182 = -6624						; size = 4
tv1130 = -6624						; size = 4
tv1453 = -6620						; size = 4
tv1417 = -6620						; size = 4
tv1394 = -6620						; size = 4
tv1368 = -6620						; size = 4
tv1298 = -6616						; size = 4
tv1226 = -6616						; size = 4
tv1180 = -6616						; size = 4
tv1128 = -6616						; size = 4
tv1452 = -6612						; size = 4
tv1416 = -6612						; size = 4
tv1393 = -6612						; size = 4
tv1367 = -6612						; size = 4
tv1296 = -6608						; size = 4
tv1224 = -6608						; size = 4
tv1178 = -6608						; size = 4
tv1126 = -6608						; size = 4
tv1451 = -6604						; size = 4
tv1415 = -6604						; size = 4
tv1392 = -6604						; size = 4
tv1366 = -6604						; size = 4
tv1294 = -6600						; size = 4
tv1222 = -6600						; size = 4
tv1176 = -6600						; size = 4
tv1124 = -6600						; size = 4
tv1450 = -6596						; size = 4
tv1414 = -6596						; size = 4
tv1391 = -6596						; size = 4
tv1365 = -6596						; size = 4
tv1292 = -6592						; size = 4
tv1220 = -6592						; size = 4
tv1174 = -6592						; size = 4
tv1122 = -6592						; size = 4
tv1449 = -6588						; size = 4
tv1413 = -6588						; size = 4
tv1390 = -6588						; size = 4
tv86 = -6588						; size = 4
$T2 = -6580						; size = 28
$T3 = -6544						; size = 28
$T4 = -6508						; size = 28
$T5 = -6472						; size = 28
$T6 = -6436						; size = 28
$T7 = -6400						; size = 28
$T8 = -6364						; size = 28
$T9 = -6328						; size = 28
$T10 = -6292						; size = 28
$T11 = -6256						; size = 28
$T12 = -6220						; size = 28
$T13 = -6184						; size = 28
$T14 = -6148						; size = 28
$T15 = -6112						; size = 28
$T16 = -6076						; size = 28
$T17 = -6040						; size = 28
$T18 = -6004						; size = 28
$T19 = -5968						; size = 28
$T20 = -5932						; size = 28
$T21 = -5896						; size = 28
$T22 = -5860						; size = 28
$T23 = -5824						; size = 28
$T24 = -5788						; size = 28
$T25 = -5752						; size = 28
$T26 = -5716						; size = 28
$T27 = -5680						; size = 28
$T28 = -5644						; size = 28
$T29 = -5608						; size = 28
$T30 = -5572						; size = 28
$T31 = -5536						; size = 28
$T32 = -5500						; size = 28
$T33 = -5464						; size = 28
$T34 = -5428						; size = 28
$T35 = -5392						; size = 28
$T36 = -5356						; size = 28
$T37 = -5320						; size = 28
$T38 = -5284						; size = 12
$T39 = -5264						; size = 12
$T40 = -5244						; size = 12
$T41 = -5224						; size = 12
$T42 = -5204						; size = 28
$T43 = -5168						; size = 28
$T44 = -5132						; size = 28
$T45 = -5096						; size = 28
$T46 = -5060						; size = 28
$T47 = -5024						; size = 28
$T48 = -4988						; size = 28
$T49 = -4952						; size = 28
$T50 = -4916						; size = 28
$T51 = -4880						; size = 28
$T52 = -4844						; size = 28
$T53 = -4808						; size = 28
$T54 = -4772						; size = 28
$T55 = -4736						; size = 28
$T56 = -4700						; size = 28
$T57 = -4664						; size = 28
$T58 = -4628						; size = 28
$T59 = -4592						; size = 28
$T60 = -4556						; size = 28
$T61 = -4520						; size = 28
$T62 = -4484						; size = 28
$T63 = -4448						; size = 28
$T64 = -4412						; size = 28
$T65 = -4376						; size = 28
$T66 = -4340						; size = 28
$T67 = -4304						; size = 28
$T68 = -4268						; size = 28
$T69 = -4232						; size = 28
$T70 = -4196						; size = 28
$T71 = -4160						; size = 28
$T72 = -4124						; size = 28
$T73 = -4088						; size = 28
$T74 = -4052						; size = 28
$T75 = -4016						; size = 28
$T76 = -3980						; size = 28
$T77 = -3944						; size = 28
$T78 = -3908						; size = 12
$T79 = -3888						; size = 12
$T80 = -3868						; size = 12
$T81 = -3848						; size = 12
$T82 = -3828						; size = 28
$T83 = -3792						; size = 28
$T84 = -3756						; size = 28
$T85 = -3720						; size = 28
$T86 = -3684						; size = 28
$T87 = -3648						; size = 28
$T88 = -3612						; size = 28
$T89 = -3576						; size = 28
$T90 = -3540						; size = 28
$T91 = -3504						; size = 28
$T92 = -3468						; size = 28
$T93 = -3432						; size = 28
$T94 = -3396						; size = 28
$T95 = -3360						; size = 28
$T96 = -3324						; size = 28
$T97 = -3288						; size = 28
$T98 = -3252						; size = 28
$T99 = -3216						; size = 28
$T100 = -3180						; size = 28
$T101 = -3144						; size = 28
$T102 = -3108						; size = 28
$T103 = -3072						; size = 28
$T104 = -3036						; size = 28
$T105 = -3000						; size = 12
$T106 = -2980						; size = 12
$T107 = -2960						; size = 12
$T108 = -2940						; size = 12
$T109 = -2920						; size = 28
$T110 = -2884						; size = 28
$T111 = -2848						; size = 28
$T112 = -2812						; size = 28
$T113 = -2776						; size = 28
$T114 = -2740						; size = 28
$T115 = -2704						; size = 28
$T116 = -2668						; size = 28
$T117 = -2632						; size = 28
$T118 = -2596						; size = 28
$T119 = -2560						; size = 28
$T120 = -2524						; size = 28
$T121 = -2488						; size = 28
$T122 = -2452						; size = 28
$T123 = -2416						; size = 28
$T124 = -2380						; size = 28
$T125 = -2344						; size = 28
$T126 = -2308						; size = 28
$T127 = -2272						; size = 28
$T128 = -2236						; size = 28
$T129 = -2200						; size = 28
$T130 = -2164						; size = 28
$T131 = -2128						; size = 28
$T132 = -2092						; size = 28
$T133 = -2056						; size = 28
$T134 = -2020						; size = 28
$T135 = -1984						; size = 12
$T136 = -1964						; size = 12
$T137 = -1944						; size = 12
$T138 = -1924						; size = 12
_outc$139 = -368					; size = 12
_fill$140 = -348					; size = 12
_outc$141 = -328					; size = 12
_fill$142 = -308					; size = 12
_outc$143 = -288					; size = 12
_fill$144 = -268					; size = 12
_outc$145 = -248					; size = 12
_fill$146 = -228					; size = 12
_out$ = -208						; size = 176
_id_type$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_figp$ = 8						; size = 16120
_filename$ = 16128					; size = 28
?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; SaveFigurePartToSvgW, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 479
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6860				; 00001accH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-6872]
	mov	ecx, 1715				; 000006b3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 480
	mov	eax, DWORD PTR _figp$[ebp+12]
	mov	DWORD PTR _id_type$[ebp], eax
; Line 481
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 3
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 4
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 5
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 10		; 0000000aH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 20		; 00000014H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 30		; 0000001eH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 40		; 00000028H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 50		; 00000032H
	je	SHORT $LN10@SaveFigure
	mov	eax, DWORD PTR ?__LINE__Var@?0??SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@
	push	OFFSET ??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@SaveFigure:
; Line 482
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 483
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1FI@OHEDHLJN@?$AA?$DM?$AA?$DP?$AAx?$AAm?$AAl?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 484
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1MG@LPBBAEDP@?$AA?$DM?$AA?$CB?$AAD?$AAO?$AAC?$AAT?$AAY?$AAP?$AAE?$AA?5?$AAs?$AAv?$AAg?$AA?5?$AAP@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 485
	mov	esi, esp
	push	OFFSET ??$endl@_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
	push	OFFSET ??_C@_1BHA@MHEFOIFM@?$AA?$DM?$AAs?$AAv?$AAg?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$DN?$AA?$CC?$AA1@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	cmp	DWORD PTR _figp$[ebp+12], 1
	jne	$LN2@SaveFigure
; Line 487
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T137[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T138[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T138[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T138[ebp+8], edx
	mov	eax, DWORD PTR $T138[ebp]
	mov	DWORD PTR _fill$146[ebp], eax
	mov	ecx, DWORD PTR $T138[ebp+4]
	mov	DWORD PTR _fill$146[ebp+4], ecx
	mov	edx, DWORD PTR $T138[ebp+8]
	mov	DWORD PTR _fill$146[ebp+8], edx
; Line 488
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T135[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T136[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T136[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T136[ebp+8], edx
	mov	eax, DWORD PTR $T136[ebp]
	mov	DWORD PTR _outc$145[ebp], eax
	mov	ecx, DWORD PTR $T136[ebp+4]
	mov	DWORD PTR _outc$145[ebp+4], ecx
	mov	edx, DWORD PTR $T136[ebp+8]
	mov	DWORD PTR _outc$145[ebp+8], edx
; Line 489
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$145[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T134[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv1122[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1122[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$145[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T133[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1365[ebp], eax
	mov	eax, DWORD PTR tv1365[ebp]
	mov	DWORD PTR tv1124[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv1124[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$145[ebp]
	push	edx
	lea	eax, DWORD PTR $T132[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1366[ebp], eax
	mov	ecx, DWORD PTR tv1366[ebp]
	mov	DWORD PTR tv1126[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv1126[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T131[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1367[ebp], eax
	mov	edx, DWORD PTR tv1367[ebp]
	mov	DWORD PTR tv1128[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1128[ebp]
	push	eax
	push	OFFSET ??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	ecx, DWORD PTR _fill$146[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T130[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1368[ebp], eax
	mov	eax, DWORD PTR tv1368[ebp]
	mov	DWORD PTR tv1130[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv1130[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$146[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T129[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1369[ebp], eax
	mov	ecx, DWORD PTR tv1369[ebp]
	mov	DWORD PTR tv1132[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv1132[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _fill$146[ebp]
	push	eax
	lea	ecx, DWORD PTR $T128[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1370[ebp], eax
	mov	edx, DWORD PTR tv1370[ebp]
	mov	DWORD PTR tv1134[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv1134[ebp]
	push	eax
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	ecx, DWORD PTR _figp$[ebp+20]
	push	ecx
	lea	edx, DWORD PTR $T127[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1371[ebp], eax
	mov	eax, DWORD PTR tv1371[ebp]
	mov	DWORD PTR tv1136[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv1136[ebp]
	push	ecx
	push	OFFSET ??_C@_1BG@HONDCOFM@?$AA?$CC?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$DN?$AA?$CC@
	mov	edx, DWORD PTR _figp$[ebp+16]
	push	edx
	lea	eax, DWORD PTR $T126[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1372[ebp], eax
	mov	ecx, DWORD PTR tv1372[ebp]
	mov	DWORD PTR tv1138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv1138[ebp]
	push	edx
	push	OFFSET ??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@
	lea	eax, DWORD PTR $T125[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1373[ebp], eax
	mov	ecx, DWORD PTR tv1373[ebp]
	mov	DWORD PTR tv1140[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv1140[ebp]
	push	edx
	lea	eax, DWORD PTR $T124[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1374[ebp], eax
	mov	ecx, DWORD PTR tv1374[ebp]
	mov	DWORD PTR tv1142[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv1142[ebp]
	push	edx
	lea	eax, DWORD PTR $T123[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1375[ebp], eax
	mov	ecx, DWORD PTR tv1375[ebp]
	mov	DWORD PTR tv1144[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv1144[ebp]
	push	edx
	lea	eax, DWORD PTR $T122[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1376[ebp], eax
	mov	ecx, DWORD PTR tv1376[ebp]
	mov	DWORD PTR tv1146[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv1146[ebp]
	push	edx
	lea	eax, DWORD PTR $T121[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1377[ebp], eax
	mov	ecx, DWORD PTR tv1377[ebp]
	mov	DWORD PTR tv1148[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv1148[ebp]
	push	edx
	lea	eax, DWORD PTR $T120[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1378[ebp], eax
	mov	ecx, DWORD PTR tv1378[ebp]
	mov	DWORD PTR tv1150[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv1150[ebp]
	push	edx
	lea	eax, DWORD PTR $T119[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1379[ebp], eax
	mov	ecx, DWORD PTR tv1379[ebp]
	mov	DWORD PTR tv1152[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR tv1152[ebp]
	push	edx
	lea	eax, DWORD PTR $T118[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1380[ebp], eax
	mov	ecx, DWORD PTR tv1380[ebp]
	mov	DWORD PTR tv1154[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv1154[ebp]
	push	edx
	lea	eax, DWORD PTR $T117[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1381[ebp], eax
	mov	ecx, DWORD PTR tv1381[ebp]
	mov	DWORD PTR tv1156[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR tv1156[ebp]
	push	edx
	lea	eax, DWORD PTR $T116[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1382[ebp], eax
	mov	ecx, DWORD PTR tv1382[ebp]
	mov	DWORD PTR tv1158[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR tv1158[ebp]
	push	edx
	lea	eax, DWORD PTR $T115[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1383[ebp], eax
	mov	ecx, DWORD PTR tv1383[ebp]
	mov	DWORD PTR tv1160[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	edx, DWORD PTR tv1160[ebp]
	push	edx
	lea	eax, DWORD PTR $T114[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1384[ebp], eax
	mov	ecx, DWORD PTR tv1384[ebp]
	mov	DWORD PTR tv1162[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR tv1162[ebp]
	push	edx
	lea	eax, DWORD PTR $T113[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1385[ebp], eax
	mov	ecx, DWORD PTR tv1385[ebp]
	mov	DWORD PTR tv1164[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR tv1164[ebp]
	push	edx
	lea	eax, DWORD PTR $T112[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1386[ebp], eax
	mov	ecx, DWORD PTR tv1386[ebp]
	mov	DWORD PTR tv1166[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR tv1166[ebp]
	push	edx
	lea	eax, DWORD PTR $T111[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1387[ebp], eax
	mov	ecx, DWORD PTR tv1387[ebp]
	mov	DWORD PTR tv1168[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR tv1168[ebp]
	push	edx
	lea	eax, DWORD PTR $T110[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1388[ebp], eax
	mov	ecx, DWORD PTR tv1388[ebp]
	mov	DWORD PTR tv1170[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	edx, DWORD PTR tv1170[ebp]
	push	edx
	lea	eax, DWORD PTR $T109[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1389[ebp], eax
	mov	ecx, DWORD PTR tv1389[ebp]
	mov	DWORD PTR tv1172[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv1172[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T109[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T110[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T111[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T112[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T113[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T114[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T115[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T116[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T117[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T118[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T119[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T120[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T121[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T122[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T123[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T124[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T125[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T126[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T127[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T128[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T129[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T130[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T131[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T132[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T133[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T134[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 490
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 491
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 492
	jmp	$LN3@SaveFigure
$LN2@SaveFigure:
; Line 493
	cmp	DWORD PTR _figp$[ebp+12], 2
	jne	$LN4@SaveFigure
; Line 494
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T107[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T108[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T108[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T108[ebp+8], edx
	mov	eax, DWORD PTR $T108[ebp]
	mov	DWORD PTR _fill$144[ebp], eax
	mov	ecx, DWORD PTR $T108[ebp+4]
	mov	DWORD PTR _fill$144[ebp+4], ecx
	mov	edx, DWORD PTR $T108[ebp+8]
	mov	DWORD PTR _fill$144[ebp+8], edx
; Line 495
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T105[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T106[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T106[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T106[ebp+8], edx
	mov	eax, DWORD PTR $T106[ebp]
	mov	DWORD PTR _outc$143[ebp], eax
	mov	ecx, DWORD PTR $T106[ebp+4]
	mov	DWORD PTR _outc$143[ebp+4], ecx
	mov	edx, DWORD PTR $T106[ebp+8]
	mov	DWORD PTR _outc$143[ebp+8], edx
; Line 496
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$143[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T104[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1390[ebp], eax
	mov	edx, DWORD PTR tv1390[ebp]
	mov	DWORD PTR tv1174[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	eax, DWORD PTR tv1174[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$143[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T103[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1391[ebp], eax
	mov	eax, DWORD PTR tv1391[ebp]
	mov	DWORD PTR tv1176[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv1176[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$143[ebp]
	push	edx
	lea	eax, DWORD PTR $T102[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1392[ebp], eax
	mov	ecx, DWORD PTR tv1392[ebp]
	mov	DWORD PTR tv1178[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	edx, DWORD PTR tv1178[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T101[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1393[ebp], eax
	mov	edx, DWORD PTR tv1393[ebp]
	mov	DWORD PTR tv1180[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	eax, DWORD PTR tv1180[ebp]
	push	eax
	push	OFFSET ??_C@_1DO@FLLNOOJM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	ecx, DWORD PTR _fill$144[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T100[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1394[ebp], eax
	mov	eax, DWORD PTR tv1394[ebp]
	mov	DWORD PTR tv1182[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv1182[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$144[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T99[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1395[ebp], eax
	mov	ecx, DWORD PTR tv1395[ebp]
	mov	DWORD PTR tv1184[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	edx, DWORD PTR tv1184[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _fill$144[ebp]
	push	eax
	lea	ecx, DWORD PTR $T98[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1396[ebp], eax
	mov	edx, DWORD PTR tv1396[ebp]
	mov	DWORD PTR tv1186[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	eax, DWORD PTR tv1186[ebp]
	push	eax
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	ecx, DWORD PTR _figp$[ebp+16]
	push	ecx
	lea	edx, DWORD PTR $T97[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1397[ebp], eax
	mov	eax, DWORD PTR tv1397[ebp]
	mov	DWORD PTR tv1188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR tv1188[ebp]
	push	ecx
	push	OFFSET ??_C@_1BO@NLLIPPNA@?$AA?7?$AA?$DM?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$DN?$AA?$CC@
	lea	edx, DWORD PTR $T96[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1398[ebp], eax
	mov	eax, DWORD PTR tv1398[ebp]
	mov	DWORD PTR tv1190[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	ecx, DWORD PTR tv1190[ebp]
	push	ecx
	lea	edx, DWORD PTR $T95[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1399[ebp], eax
	mov	eax, DWORD PTR tv1399[ebp]
	mov	DWORD PTR tv1192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR tv1192[ebp]
	push	ecx
	lea	edx, DWORD PTR $T94[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1400[ebp], eax
	mov	eax, DWORD PTR tv1400[ebp]
	mov	DWORD PTR tv1194[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	ecx, DWORD PTR tv1194[ebp]
	push	ecx
	lea	edx, DWORD PTR $T93[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1401[ebp], eax
	mov	eax, DWORD PTR tv1401[ebp]
	mov	DWORD PTR tv1196[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR tv1196[ebp]
	push	ecx
	lea	edx, DWORD PTR $T92[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1402[ebp], eax
	mov	eax, DWORD PTR tv1402[ebp]
	mov	DWORD PTR tv1198[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR tv1198[ebp]
	push	ecx
	lea	edx, DWORD PTR $T91[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1403[ebp], eax
	mov	eax, DWORD PTR tv1403[ebp]
	mov	DWORD PTR tv1200[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	ecx, DWORD PTR tv1200[ebp]
	push	ecx
	lea	edx, DWORD PTR $T90[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1404[ebp], eax
	mov	eax, DWORD PTR tv1404[ebp]
	mov	DWORD PTR tv1202[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	ecx, DWORD PTR tv1202[ebp]
	push	ecx
	lea	edx, DWORD PTR $T89[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1405[ebp], eax
	mov	eax, DWORD PTR tv1405[ebp]
	mov	DWORD PTR tv1204[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	ecx, DWORD PTR tv1204[ebp]
	push	ecx
	lea	edx, DWORD PTR $T88[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1406[ebp], eax
	mov	eax, DWORD PTR tv1406[ebp]
	mov	DWORD PTR tv1206[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, DWORD PTR tv1206[ebp]
	push	ecx
	lea	edx, DWORD PTR $T87[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1407[ebp], eax
	mov	eax, DWORD PTR tv1407[ebp]
	mov	DWORD PTR tv1208[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	ecx, DWORD PTR tv1208[ebp]
	push	ecx
	lea	edx, DWORD PTR $T86[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1408[ebp], eax
	mov	eax, DWORD PTR tv1408[ebp]
	mov	DWORD PTR tv1210[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	ecx, DWORD PTR tv1210[ebp]
	push	ecx
	lea	edx, DWORD PTR $T85[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1409[ebp], eax
	mov	eax, DWORD PTR tv1409[ebp]
	mov	DWORD PTR tv1212[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	ecx, DWORD PTR tv1212[ebp]
	push	ecx
	lea	edx, DWORD PTR $T84[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1410[ebp], eax
	mov	eax, DWORD PTR tv1410[ebp]
	mov	DWORD PTR tv1214[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	ecx, DWORD PTR tv1214[ebp]
	push	ecx
	lea	edx, DWORD PTR $T83[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1411[ebp], eax
	mov	eax, DWORD PTR tv1411[ebp]
	mov	DWORD PTR tv1216[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	ecx, DWORD PTR tv1216[ebp]
	push	ecx
	lea	edx, DWORD PTR $T82[ebp]
	push	edx
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1412[ebp], eax
	mov	eax, DWORD PTR tv1412[ebp]
	mov	DWORD PTR tv1218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	ecx, DWORD PTR tv1218[ebp]
	push	ecx
	lea	edx, DWORD PTR _out$[ebp]
	push	edx
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T82[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T83[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	lea	ecx, DWORD PTR $T84[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T85[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T86[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T87[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	lea	ecx, DWORD PTR $T88[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T89[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T90[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T91[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T92[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T93[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T94[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T95[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T96[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T97[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T98[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T99[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T100[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T101[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T102[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR $T103[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T104[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 497
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 498
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 499
	jmp	$LN3@SaveFigure
$LN4@SaveFigure:
; Line 500
	cmp	DWORD PTR _figp$[ebp+12], 3
	jne	$LN6@SaveFigure
; Line 501
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T80[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T81[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T81[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T81[ebp+8], edx
	mov	eax, DWORD PTR $T81[ebp]
	mov	DWORD PTR _fill$142[ebp], eax
	mov	ecx, DWORD PTR $T81[ebp+4]
	mov	DWORD PTR _fill$142[ebp+4], ecx
	mov	edx, DWORD PTR $T81[ebp+8]
	mov	DWORD PTR _fill$142[ebp+8], edx
; Line 502
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T78[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T79[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T79[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T79[ebp+8], edx
	mov	eax, DWORD PTR $T79[ebp]
	mov	DWORD PTR _outc$141[ebp], eax
	mov	ecx, DWORD PTR $T79[ebp+4]
	mov	DWORD PTR _outc$141[ebp+4], ecx
	mov	edx, DWORD PTR $T79[ebp+8]
	mov	DWORD PTR _outc$141[ebp+8], edx
; Line 503
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$141[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T77[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1413[ebp], eax
	mov	edx, DWORD PTR tv1413[ebp]
	mov	DWORD PTR tv1220[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	mov	eax, DWORD PTR tv1220[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$141[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T76[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1414[ebp], eax
	mov	eax, DWORD PTR tv1414[ebp]
	mov	DWORD PTR tv1222[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	ecx, DWORD PTR tv1222[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$141[ebp]
	push	edx
	lea	eax, DWORD PTR $T75[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1415[ebp], eax
	mov	ecx, DWORD PTR tv1415[ebp]
	mov	DWORD PTR tv1224[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	edx, DWORD PTR tv1224[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	eax, DWORD PTR _fill$142[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T74[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1416[ebp], eax
	mov	edx, DWORD PTR tv1416[ebp]
	mov	DWORD PTR tv1226[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	eax, DWORD PTR tv1226[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _fill$142[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T73[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1417[ebp], eax
	mov	eax, DWORD PTR tv1417[ebp]
	mov	DWORD PTR tv1228[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	ecx, DWORD PTR tv1228[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _fill$142[ebp]
	push	edx
	lea	eax, DWORD PTR $T72[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1418[ebp], eax
	mov	ecx, DWORD PTR tv1418[ebp]
	mov	DWORD PTR tv1230[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	edx, DWORD PTR tv1230[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T71[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1419[ebp], eax
	mov	edx, DWORD PTR tv1419[ebp]
	mov	DWORD PTR tv1232[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	eax, DWORD PTR tv1232[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T70[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1420[ebp], eax
	mov	eax, DWORD PTR tv1420[ebp]
	mov	DWORD PTR tv1234[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR tv1234[ebp]
	push	ecx
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T69[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1421[ebp], eax
	mov	ecx, DWORD PTR tv1421[ebp]
	mov	DWORD PTR tv1236[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	mov	edx, DWORD PTR tv1236[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T68[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1422[ebp], eax
	mov	edx, DWORD PTR tv1422[ebp]
	mov	DWORD PTR tv1238[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	eax, DWORD PTR tv1238[ebp]
	push	eax
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T67[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1423[ebp], eax
	mov	eax, DWORD PTR tv1423[ebp]
	mov	DWORD PTR tv1240[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	ecx, DWORD PTR tv1240[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T66[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1424[ebp], eax
	mov	ecx, DWORD PTR tv1424[ebp]
	mov	DWORD PTR tv1242[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	edx, DWORD PTR tv1242[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@
	lea	eax, DWORD PTR $T65[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1425[ebp], eax
	mov	ecx, DWORD PTR tv1425[ebp]
	mov	DWORD PTR tv1244[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	edx, DWORD PTR tv1244[ebp]
	push	edx
	lea	eax, DWORD PTR $T64[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1426[ebp], eax
	mov	ecx, DWORD PTR tv1426[ebp]
	mov	DWORD PTR tv1246[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	edx, DWORD PTR tv1246[ebp]
	push	edx
	lea	eax, DWORD PTR $T63[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1427[ebp], eax
	mov	ecx, DWORD PTR tv1427[ebp]
	mov	DWORD PTR tv1248[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	mov	edx, DWORD PTR tv1248[ebp]
	push	edx
	lea	eax, DWORD PTR $T62[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1428[ebp], eax
	mov	ecx, DWORD PTR tv1428[ebp]
	mov	DWORD PTR tv1250[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR tv1250[ebp]
	push	edx
	lea	eax, DWORD PTR $T61[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1429[ebp], eax
	mov	ecx, DWORD PTR tv1429[ebp]
	mov	DWORD PTR tv1252[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	mov	edx, DWORD PTR tv1252[ebp]
	push	edx
	lea	eax, DWORD PTR $T60[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1430[ebp], eax
	mov	ecx, DWORD PTR tv1430[ebp]
	mov	DWORD PTR tv1254[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	edx, DWORD PTR tv1254[ebp]
	push	edx
	lea	eax, DWORD PTR $T59[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1431[ebp], eax
	mov	ecx, DWORD PTR tv1431[ebp]
	mov	DWORD PTR tv1256[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	mov	edx, DWORD PTR tv1256[ebp]
	push	edx
	lea	eax, DWORD PTR $T58[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1432[ebp], eax
	mov	ecx, DWORD PTR tv1432[ebp]
	mov	DWORD PTR tv1258[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	edx, DWORD PTR tv1258[ebp]
	push	edx
	lea	eax, DWORD PTR $T57[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1433[ebp], eax
	mov	ecx, DWORD PTR tv1433[ebp]
	mov	DWORD PTR tv1260[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	edx, DWORD PTR tv1260[ebp]
	push	edx
	lea	eax, DWORD PTR $T56[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1434[ebp], eax
	mov	ecx, DWORD PTR tv1434[ebp]
	mov	DWORD PTR tv1262[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	edx, DWORD PTR tv1262[ebp]
	push	edx
	lea	eax, DWORD PTR $T55[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1435[ebp], eax
	mov	ecx, DWORD PTR tv1435[ebp]
	mov	DWORD PTR tv1264[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	mov	edx, DWORD PTR tv1264[ebp]
	push	edx
	lea	eax, DWORD PTR $T54[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1436[ebp], eax
	mov	ecx, DWORD PTR tv1436[ebp]
	mov	DWORD PTR tv1266[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	edx, DWORD PTR tv1266[ebp]
	push	edx
	lea	eax, DWORD PTR $T53[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1437[ebp], eax
	mov	ecx, DWORD PTR tv1437[ebp]
	mov	DWORD PTR tv1268[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	edx, DWORD PTR tv1268[ebp]
	push	edx
	lea	eax, DWORD PTR $T52[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1438[ebp], eax
	mov	ecx, DWORD PTR tv1438[ebp]
	mov	DWORD PTR tv1270[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	edx, DWORD PTR tv1270[ebp]
	push	edx
	lea	eax, DWORD PTR $T51[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1439[ebp], eax
	mov	ecx, DWORD PTR tv1439[ebp]
	mov	DWORD PTR tv1272[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	mov	edx, DWORD PTR tv1272[ebp]
	push	edx
	lea	eax, DWORD PTR $T50[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1440[ebp], eax
	mov	ecx, DWORD PTR tv1440[ebp]
	mov	DWORD PTR tv1274[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	edx, DWORD PTR tv1274[ebp]
	push	edx
	lea	eax, DWORD PTR $T49[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1441[ebp], eax
	mov	ecx, DWORD PTR tv1441[ebp]
	mov	DWORD PTR tv1276[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	mov	edx, DWORD PTR tv1276[ebp]
	push	edx
	lea	eax, DWORD PTR $T48[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1442[ebp], eax
	mov	ecx, DWORD PTR tv1442[ebp]
	mov	DWORD PTR tv1278[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	edx, DWORD PTR tv1278[ebp]
	push	edx
	lea	eax, DWORD PTR $T47[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1443[ebp], eax
	mov	ecx, DWORD PTR tv1443[ebp]
	mov	DWORD PTR tv1280[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	edx, DWORD PTR tv1280[ebp]
	push	edx
	lea	eax, DWORD PTR $T46[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1444[ebp], eax
	mov	ecx, DWORD PTR tv1444[ebp]
	mov	DWORD PTR tv1282[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	edx, DWORD PTR tv1282[ebp]
	push	edx
	lea	eax, DWORD PTR $T45[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1445[ebp], eax
	mov	ecx, DWORD PTR tv1445[ebp]
	mov	DWORD PTR tv1284[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	mov	edx, DWORD PTR tv1284[ebp]
	push	edx
	lea	eax, DWORD PTR $T44[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1446[ebp], eax
	mov	ecx, DWORD PTR tv1446[ebp]
	mov	DWORD PTR tv1286[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR tv1286[ebp]
	push	edx
	lea	eax, DWORD PTR $T43[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1447[ebp], eax
	mov	ecx, DWORD PTR tv1447[ebp]
	mov	DWORD PTR tv1288[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	mov	edx, DWORD PTR tv1288[ebp]
	push	edx
	lea	eax, DWORD PTR $T42[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1448[ebp], eax
	mov	ecx, DWORD PTR tv1448[ebp]
	mov	DWORD PTR tv1290[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	edx, DWORD PTR tv1290[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T42[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T43[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T44[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	lea	ecx, DWORD PTR $T45[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	lea	ecx, DWORD PTR $T46[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	lea	ecx, DWORD PTR $T47[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	lea	ecx, DWORD PTR $T48[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	lea	ecx, DWORD PTR $T49[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	lea	ecx, DWORD PTR $T50[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	lea	ecx, DWORD PTR $T51[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T52[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T53[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T54[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	lea	ecx, DWORD PTR $T55[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	lea	ecx, DWORD PTR $T56[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	lea	ecx, DWORD PTR $T57[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	lea	ecx, DWORD PTR $T58[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	lea	ecx, DWORD PTR $T59[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR $T60[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR $T61[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR $T62[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	lea	ecx, DWORD PTR $T63[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T64[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T65[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T66[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T67[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T68[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T69[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T70[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T71[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T72[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T73[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	lea	ecx, DWORD PTR $T74[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	lea	ecx, DWORD PTR $T75[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR $T76[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T77[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 504
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 505
	jmp	$LN3@SaveFigure
$LN6@SaveFigure:
; Line 506
	cmp	DWORD PTR _figp$[ebp+12], 4
	jne	$LN3@SaveFigure
; Line 507
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T40[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T41[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T41[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T41[ebp+8], edx
	mov	eax, DWORD PTR $T41[ebp]
	mov	DWORD PTR _fill$140[ebp], eax
	mov	ecx, DWORD PTR $T41[ebp+4]
	mov	DWORD PTR _fill$140[ebp+4], ecx
	mov	edx, DWORD PTR $T41[ebp+8]
	mov	DWORD PTR _fill$140[ebp+8], edx
; Line 508
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T38[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T39[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T39[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T39[ebp+8], edx
	mov	eax, DWORD PTR $T39[ebp]
	mov	DWORD PTR _outc$139[ebp], eax
	mov	ecx, DWORD PTR $T39[ebp+4]
	mov	DWORD PTR _outc$139[ebp+4], ecx
	mov	edx, DWORD PTR $T39[ebp+8]
	mov	DWORD PTR _outc$139[ebp+8], edx
; Line 509
	push	OFFSET ??_C@_1O@IHLKLBFE@?$AA?$CJ?$AA?$CC?$AA?5?$AA?1?$AA?$DO?$AA?6@
	mov	eax, DWORD PTR _outc$139[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1449[ebp], eax
	mov	edx, DWORD PTR tv1449[ebp]
	mov	DWORD PTR tv1292[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	mov	eax, DWORD PTR tv1292[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _outc$139[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T36[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1450[ebp], eax
	mov	eax, DWORD PTR tv1450[ebp]
	mov	DWORD PTR tv1294[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	ecx, DWORD PTR tv1294[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _outc$139[ebp]
	push	edx
	lea	eax, DWORD PTR $T35[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1451[ebp], eax
	mov	ecx, DWORD PTR tv1451[ebp]
	mov	DWORD PTR tv1296[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	mov	edx, DWORD PTR tv1296[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@CDHMCIIM@?$AA?$CJ?$AA?$DL?$AA?5?$AAs?$AAt?$AAr?$AAo?$AAk?$AAe?$AA?9?$AAw?$AAi?$AAd?$AAt?$AAh@
	mov	eax, DWORD PTR _fill$140[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1452[ebp], eax
	mov	edx, DWORD PTR tv1452[ebp]
	mov	DWORD PTR tv1298[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	eax, DWORD PTR tv1298[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _fill$140[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T33[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1453[ebp], eax
	mov	eax, DWORD PTR tv1453[ebp]
	mov	DWORD PTR tv1300[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	mov	ecx, DWORD PTR tv1300[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _fill$140[ebp]
	push	edx
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1454[ebp], eax
	mov	ecx, DWORD PTR tv1454[ebp]
	mov	DWORD PTR tv1302[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	edx, DWORD PTR tv1302[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@IEBCKNNC@?$AA?$CC?$AA?5?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?$DN?$AA?$CC?$AAf?$AAi?$AAl?$AAl?$AA?3?$AAr@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1455[ebp], eax
	mov	edx, DWORD PTR tv1455[ebp]
	mov	DWORD PTR tv1304[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	eax, DWORD PTR tv1304[ebp]
	push	eax
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1456[ebp], eax
	mov	eax, DWORD PTR tv1456[ebp]
	mov	DWORD PTR tv1306[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	ecx, DWORD PTR tv1306[ebp]
	push	ecx
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1457[ebp], eax
	mov	ecx, DWORD PTR tv1457[ebp]
	mov	DWORD PTR tv1308[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	edx, DWORD PTR tv1308[ebp]
	push	edx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T28[ebp]
	push	ecx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1458[ebp], eax
	mov	edx, DWORD PTR tv1458[ebp]
	mov	DWORD PTR tv1310[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	eax, DWORD PTR tv1310[ebp]
	push	eax
	push	OFFSET ??_C@_13HOIJIPNN@?$AA?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1459[ebp], eax
	mov	eax, DWORD PTR tv1459[ebp]
	mov	DWORD PTR tv1312[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	mov	ecx, DWORD PTR tv1312[ebp]
	push	ecx
	push	OFFSET ??_C@_13DEFPDAGF@?$AA?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	call	?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::to_wstring
	add	esp, 8
	mov	DWORD PTR tv1460[ebp], eax
	mov	ecx, DWORD PTR tv1460[ebp]
	mov	DWORD PTR tv1314[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	edx, DWORD PTR tv1314[ebp]
	push	edx
	push	OFFSET ??_C@_1CG@LEFFFFLD@?$AA?7?$AA?$DM?$AAp?$AAo?$AAl?$AAy?$AAg?$AAo?$AAn?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt@
	lea	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W$$QAV10@@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1461[ebp], eax
	mov	ecx, DWORD PTR tv1461[ebp]
	mov	DWORD PTR tv1316[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	mov	edx, DWORD PTR tv1316[ebp]
	push	edx
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1462[ebp], eax
	mov	ecx, DWORD PTR tv1462[ebp]
	mov	DWORD PTR tv1318[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	edx, DWORD PTR tv1318[ebp]
	push	edx
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1463[ebp], eax
	mov	ecx, DWORD PTR tv1463[ebp]
	mov	DWORD PTR tv1320[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	mov	edx, DWORD PTR tv1320[ebp]
	push	edx
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1464[ebp], eax
	mov	ecx, DWORD PTR tv1464[ebp]
	mov	DWORD PTR tv1322[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	edx, DWORD PTR tv1322[ebp]
	push	edx
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1465[ebp], eax
	mov	ecx, DWORD PTR tv1465[ebp]
	mov	DWORD PTR tv1324[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	edx, DWORD PTR tv1324[ebp]
	push	edx
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1466[ebp], eax
	mov	ecx, DWORD PTR tv1466[ebp]
	mov	DWORD PTR tv1326[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	edx, DWORD PTR tv1326[ebp]
	push	edx
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1467[ebp], eax
	mov	ecx, DWORD PTR tv1467[ebp]
	mov	DWORD PTR tv1328[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	mov	edx, DWORD PTR tv1328[ebp]
	push	edx
	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1468[ebp], eax
	mov	ecx, DWORD PTR tv1468[ebp]
	mov	DWORD PTR tv1330[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	edx, DWORD PTR tv1330[ebp]
	push	edx
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1469[ebp], eax
	mov	ecx, DWORD PTR tv1469[ebp]
	mov	DWORD PTR tv1332[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	edx, DWORD PTR tv1332[ebp]
	push	edx
	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1470[ebp], eax
	mov	ecx, DWORD PTR tv1470[ebp]
	mov	DWORD PTR tv1334[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	edx, DWORD PTR tv1334[ebp]
	push	edx
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1471[ebp], eax
	mov	ecx, DWORD PTR tv1471[ebp]
	mov	DWORD PTR tv1336[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	mov	edx, DWORD PTR tv1336[ebp]
	push	edx
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1472[ebp], eax
	mov	ecx, DWORD PTR tv1472[ebp]
	mov	DWORD PTR tv1338[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	edx, DWORD PTR tv1338[ebp]
	push	edx
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1473[ebp], eax
	mov	ecx, DWORD PTR tv1473[ebp]
	mov	DWORD PTR tv1340[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	mov	edx, DWORD PTR tv1340[ebp]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1474[ebp], eax
	mov	ecx, DWORD PTR tv1474[ebp]
	mov	DWORD PTR tv1342[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	edx, DWORD PTR tv1342[ebp]
	push	edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1475[ebp], eax
	mov	ecx, DWORD PTR tv1475[ebp]
	mov	DWORD PTR tv1344[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	edx, DWORD PTR tv1344[ebp]
	push	edx
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1476[ebp], eax
	mov	ecx, DWORD PTR tv1476[ebp]
	mov	DWORD PTR tv1346[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	edx, DWORD PTR tv1346[ebp]
	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1477[ebp], eax
	mov	ecx, DWORD PTR tv1477[ebp]
	mov	DWORD PTR tv1348[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	edx, DWORD PTR tv1348[ebp]
	push	edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1478[ebp], eax
	mov	ecx, DWORD PTR tv1478[ebp]
	mov	DWORD PTR tv1350[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	edx, DWORD PTR tv1350[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1479[ebp], eax
	mov	ecx, DWORD PTR tv1479[ebp]
	mov	DWORD PTR tv1352[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	mov	edx, DWORD PTR tv1352[ebp]
	push	edx
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1480[ebp], eax
	mov	ecx, DWORD PTR tv1480[ebp]
	mov	DWORD PTR tv1354[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	edx, DWORD PTR tv1354[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1481[ebp], eax
	mov	ecx, DWORD PTR tv1481[ebp]
	mov	DWORD PTR tv1356[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	edx, DWORD PTR tv1356[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1482[ebp], eax
	mov	ecx, DWORD PTR tv1482[ebp]
	mov	DWORD PTR tv1358[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	mov	edx, DWORD PTR tv1358[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1483[ebp], eax
	mov	ecx, DWORD PTR tv1483[ebp]
	mov	DWORD PTR tv1360[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR tv1360[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1484[ebp], eax
	mov	ecx, DWORD PTR tv1484[ebp]
	mov	DWORD PTR tv1362[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	mov	edx, DWORD PTR tv1362[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 510
	push	OFFSET ??_C@_1O@LHIGABNE@?$AA?$DM?$AA?1?$AAs?$AAv?$AAg?$AA?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
$LN3@SaveFigure:
; Line 512
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 513
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _figp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN146@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 6872				; 00001ad8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN146@SaveFigure:
	DD	9
	DD	$LN145@SaveFigure
$LN145@SaveFigure:
	DD	-208					; ffffff30H
	DD	176					; 000000b0H
	DD	$LN135@SaveFigure
	DD	-228					; ffffff1cH
	DD	12					; 0000000cH
	DD	$LN136@SaveFigure
	DD	-248					; ffffff08H
	DD	12					; 0000000cH
	DD	$LN137@SaveFigure
	DD	-268					; fffffef4H
	DD	12					; 0000000cH
	DD	$LN138@SaveFigure
	DD	-288					; fffffee0H
	DD	12					; 0000000cH
	DD	$LN139@SaveFigure
	DD	-308					; fffffeccH
	DD	12					; 0000000cH
	DD	$LN140@SaveFigure
	DD	-328					; fffffeb8H
	DD	12					; 0000000cH
	DD	$LN141@SaveFigure
	DD	-348					; fffffea4H
	DD	12					; 0000000cH
	DD	$LN142@SaveFigure
	DD	-368					; fffffe90H
	DD	12					; 0000000cH
	DD	$LN143@SaveFigure
$LN143@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN142@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN141@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN140@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN139@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN138@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN137@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN136@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN135@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _figp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T134[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T133[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T132[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T131[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T130[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T129[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T128[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T127[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T126[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T125[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T124[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T123[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T122[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T121[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T120[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T119[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T118[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T117[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T116[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T115[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T114[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$24:
	lea	ecx, DWORD PTR $T113[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T112[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$26:
	lea	ecx, DWORD PTR $T111[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T110[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$28:
	lea	ecx, DWORD PTR $T109[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T104[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$30:
	lea	ecx, DWORD PTR $T103[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$31:
	lea	ecx, DWORD PTR $T102[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T101[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$33:
	lea	ecx, DWORD PTR $T100[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T99[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$35:
	lea	ecx, DWORD PTR $T98[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T97[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T96[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$38:
	lea	ecx, DWORD PTR $T95[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$39:
	lea	ecx, DWORD PTR $T94[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T93[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T92[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T91[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$43:
	lea	ecx, DWORD PTR $T90[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$44:
	lea	ecx, DWORD PTR $T89[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$45:
	lea	ecx, DWORD PTR $T88[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$46:
	lea	ecx, DWORD PTR $T87[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$47:
	lea	ecx, DWORD PTR $T86[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$48:
	lea	ecx, DWORD PTR $T85[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$49:
	lea	ecx, DWORD PTR $T84[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$50:
	lea	ecx, DWORD PTR $T83[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$51:
	lea	ecx, DWORD PTR $T82[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$52:
	lea	ecx, DWORD PTR $T77[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$53:
	lea	ecx, DWORD PTR $T76[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$54:
	lea	ecx, DWORD PTR $T75[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$55:
	lea	ecx, DWORD PTR $T74[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$56:
	lea	ecx, DWORD PTR $T73[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$57:
	lea	ecx, DWORD PTR $T72[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$58:
	lea	ecx, DWORD PTR $T71[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$59:
	lea	ecx, DWORD PTR $T70[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$60:
	lea	ecx, DWORD PTR $T69[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$61:
	lea	ecx, DWORD PTR $T68[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$62:
	lea	ecx, DWORD PTR $T67[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$63:
	lea	ecx, DWORD PTR $T66[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$64:
	lea	ecx, DWORD PTR $T65[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$65:
	lea	ecx, DWORD PTR $T64[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$66:
	lea	ecx, DWORD PTR $T63[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$67:
	lea	ecx, DWORD PTR $T62[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$68:
	lea	ecx, DWORD PTR $T61[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$69:
	lea	ecx, DWORD PTR $T60[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$70:
	lea	ecx, DWORD PTR $T59[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$71:
	lea	ecx, DWORD PTR $T58[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$72:
	lea	ecx, DWORD PTR $T57[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$73:
	lea	ecx, DWORD PTR $T56[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$74:
	lea	ecx, DWORD PTR $T55[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$75:
	lea	ecx, DWORD PTR $T54[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$76:
	lea	ecx, DWORD PTR $T53[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$77:
	lea	ecx, DWORD PTR $T52[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$78:
	lea	ecx, DWORD PTR $T51[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$79:
	lea	ecx, DWORD PTR $T50[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$80:
	lea	ecx, DWORD PTR $T49[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$81:
	lea	ecx, DWORD PTR $T48[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$82:
	lea	ecx, DWORD PTR $T47[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$83:
	lea	ecx, DWORD PTR $T46[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$84:
	lea	ecx, DWORD PTR $T45[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$85:
	lea	ecx, DWORD PTR $T44[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$86:
	lea	ecx, DWORD PTR $T43[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$87:
	lea	ecx, DWORD PTR $T42[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$88:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$89:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$90:
	lea	ecx, DWORD PTR $T35[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$91:
	lea	ecx, DWORD PTR $T34[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$92:
	lea	ecx, DWORD PTR $T33[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$93:
	lea	ecx, DWORD PTR $T32[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$94:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$95:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$96:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$97:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$98:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$99:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$100:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$101:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$102:
	lea	ecx, DWORD PTR $T23[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$103:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$104:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$105:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$106:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$107:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$108:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$109:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$110:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$111:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$112:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$113:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$114:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$115:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$116:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$117:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$118:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$119:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$120:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$121:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$122:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$123:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6876]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigurePartToSvgW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; SaveFigurePartToSvgW
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv1424 = -6980						; size = 4
tv1352 = -6980						; size = 4
tv1549 = -6976						; size = 4
tv1513 = -6976						; size = 4
tv1422 = -6972						; size = 4
tv1350 = -6972						; size = 4
tv1548 = -6968						; size = 4
tv1512 = -6968						; size = 4
tv1420 = -6964						; size = 4
tv1348 = -6964						; size = 4
tv1547 = -6960						; size = 4
tv1511 = -6960						; size = 4
tv1418 = -6956						; size = 4
tv1346 = -6956						; size = 4
tv1546 = -6952						; size = 4
tv1510 = -6952						; size = 4
tv1416 = -6948						; size = 4
tv1344 = -6948						; size = 4
tv1545 = -6944						; size = 4
tv1509 = -6944						; size = 4
tv1414 = -6940						; size = 4
tv1342 = -6940						; size = 4
tv1544 = -6936						; size = 4
tv1508 = -6936						; size = 4
tv1412 = -6932						; size = 4
tv1340 = -6932						; size = 4
tv1543 = -6928						; size = 4
tv1507 = -6928						; size = 4
tv1410 = -6924						; size = 4
tv1338 = -6924						; size = 4
tv1542 = -6920						; size = 4
tv1506 = -6920						; size = 4
tv1408 = -6916						; size = 4
tv1336 = -6916						; size = 4
tv1541 = -6912						; size = 4
tv1505 = -6912						; size = 4
tv1406 = -6908						; size = 4
tv1334 = -6908						; size = 4
tv1540 = -6904						; size = 4
tv1504 = -6904						; size = 4
tv1404 = -6900						; size = 4
tv1332 = -6900						; size = 4
tv1280 = -6900						; size = 4
tv1228 = -6900						; size = 4
tv1539 = -6896						; size = 4
tv1503 = -6896						; size = 4
tv1477 = -6896						; size = 4
tv1451 = -6896						; size = 4
tv1402 = -6892						; size = 4
tv1330 = -6892						; size = 4
tv1278 = -6892						; size = 4
tv1226 = -6892						; size = 4
tv1538 = -6888						; size = 4
tv1502 = -6888						; size = 4
tv1476 = -6888						; size = 4
tv1450 = -6888						; size = 4
tv1400 = -6884						; size = 4
tv1328 = -6884						; size = 4
tv1276 = -6884						; size = 4
tv1224 = -6884						; size = 4
tv1537 = -6880						; size = 4
tv1501 = -6880						; size = 4
tv1475 = -6880						; size = 4
tv1449 = -6880						; size = 4
tv1398 = -6876						; size = 4
tv1326 = -6876						; size = 4
tv1274 = -6876						; size = 4
tv1222 = -6876						; size = 4
tv1536 = -6872						; size = 4
tv1500 = -6872						; size = 4
tv1474 = -6872						; size = 4
tv1448 = -6872						; size = 4
tv1396 = -6868						; size = 4
tv1324 = -6868						; size = 4
tv1272 = -6868						; size = 4
tv1220 = -6868						; size = 4
tv1535 = -6864						; size = 4
tv1499 = -6864						; size = 4
tv1473 = -6864						; size = 4
tv1447 = -6864						; size = 4
tv1394 = -6860						; size = 4
tv1322 = -6860						; size = 4
tv1270 = -6860						; size = 4
tv1218 = -6860						; size = 4
tv1534 = -6856						; size = 4
tv1498 = -6856						; size = 4
tv1472 = -6856						; size = 4
tv1446 = -6856						; size = 4
tv1392 = -6852						; size = 4
tv1320 = -6852						; size = 4
tv1268 = -6852						; size = 4
tv1216 = -6852						; size = 4
tv1533 = -6848						; size = 4
tv1497 = -6848						; size = 4
tv1471 = -6848						; size = 4
tv1445 = -6848						; size = 4
tv1390 = -6844						; size = 4
tv1318 = -6844						; size = 4
tv1266 = -6844						; size = 4
tv1214 = -6844						; size = 4
tv1532 = -6840						; size = 4
tv1496 = -6840						; size = 4
tv1470 = -6840						; size = 4
tv1444 = -6840						; size = 4
tv1388 = -6836						; size = 4
tv1316 = -6836						; size = 4
tv1264 = -6836						; size = 4
tv1212 = -6836						; size = 4
tv1531 = -6832						; size = 4
tv1495 = -6832						; size = 4
tv1469 = -6832						; size = 4
tv1443 = -6832						; size = 4
tv1386 = -6828						; size = 4
tv1314 = -6828						; size = 4
tv1262 = -6828						; size = 4
tv1210 = -6828						; size = 4
tv1530 = -6824						; size = 4
tv1494 = -6824						; size = 4
tv1468 = -6824						; size = 4
tv1442 = -6824						; size = 4
tv1384 = -6820						; size = 4
tv1312 = -6820						; size = 4
tv1260 = -6820						; size = 4
tv1208 = -6820						; size = 4
tv1529 = -6816						; size = 4
tv1493 = -6816						; size = 4
tv1467 = -6816						; size = 4
tv1441 = -6816						; size = 4
tv1382 = -6812						; size = 4
tv1310 = -6812						; size = 4
tv1258 = -6812						; size = 4
tv1206 = -6812						; size = 4
tv1528 = -6808						; size = 4
tv1492 = -6808						; size = 4
tv1466 = -6808						; size = 4
tv1440 = -6808						; size = 4
tv1380 = -6804						; size = 4
tv1308 = -6804						; size = 4
tv1256 = -6804						; size = 4
tv1204 = -6804						; size = 4
tv1527 = -6800						; size = 4
tv1491 = -6800						; size = 4
tv1465 = -6800						; size = 4
tv1439 = -6800						; size = 4
tv1378 = -6796						; size = 4
tv1306 = -6796						; size = 4
tv1254 = -6796						; size = 4
tv1202 = -6796						; size = 4
tv1526 = -6792						; size = 4
tv1490 = -6792						; size = 4
tv1464 = -6792						; size = 4
tv1438 = -6792						; size = 4
tv1376 = -6788						; size = 4
tv1304 = -6788						; size = 4
tv1252 = -6788						; size = 4
tv1200 = -6788						; size = 4
tv1525 = -6784						; size = 4
tv1489 = -6784						; size = 4
tv1463 = -6784						; size = 4
tv1437 = -6784						; size = 4
tv1374 = -6780						; size = 4
tv1302 = -6780						; size = 4
tv1250 = -6780						; size = 4
tv1198 = -6780						; size = 4
tv1524 = -6776						; size = 4
tv1488 = -6776						; size = 4
tv1462 = -6776						; size = 4
tv1436 = -6776						; size = 4
tv1372 = -6772						; size = 4
tv1300 = -6772						; size = 4
tv1248 = -6772						; size = 4
tv1196 = -6772						; size = 4
tv1523 = -6768						; size = 4
tv1487 = -6768						; size = 4
tv1461 = -6768						; size = 4
tv1435 = -6768						; size = 4
tv1370 = -6764						; size = 4
tv1298 = -6764						; size = 4
tv1246 = -6764						; size = 4
tv1194 = -6764						; size = 4
tv1522 = -6760						; size = 4
tv1486 = -6760						; size = 4
tv1460 = -6760						; size = 4
tv1434 = -6760						; size = 4
tv1368 = -6756						; size = 4
tv1296 = -6756						; size = 4
tv1244 = -6756						; size = 4
tv1192 = -6756						; size = 4
tv1521 = -6752						; size = 4
tv1485 = -6752						; size = 4
tv1459 = -6752						; size = 4
tv1433 = -6752						; size = 4
tv1366 = -6748						; size = 4
tv1294 = -6748						; size = 4
tv1242 = -6748						; size = 4
tv1190 = -6748						; size = 4
tv1520 = -6744						; size = 4
tv1484 = -6744						; size = 4
tv1458 = -6744						; size = 4
tv1432 = -6744						; size = 4
tv1364 = -6740						; size = 4
tv1292 = -6740						; size = 4
tv1240 = -6740						; size = 4
tv1188 = -6740						; size = 4
tv1519 = -6736						; size = 4
tv1483 = -6736						; size = 4
tv1457 = -6736						; size = 4
tv1431 = -6736						; size = 4
tv1362 = -6732						; size = 4
tv1290 = -6732						; size = 4
tv1238 = -6732						; size = 4
tv1186 = -6732						; size = 4
tv1518 = -6728						; size = 4
tv1482 = -6728						; size = 4
tv1456 = -6728						; size = 4
tv1430 = -6728						; size = 4
tv1360 = -6724						; size = 4
tv1288 = -6724						; size = 4
tv1236 = -6724						; size = 4
tv1184 = -6724						; size = 4
tv1517 = -6720						; size = 4
tv1481 = -6720						; size = 4
tv1455 = -6720						; size = 4
tv1429 = -6720						; size = 4
tv1358 = -6716						; size = 4
tv1286 = -6716						; size = 4
tv1234 = -6716						; size = 4
tv1182 = -6716						; size = 4
tv1516 = -6712						; size = 4
tv1480 = -6712						; size = 4
tv1454 = -6712						; size = 4
tv1428 = -6712						; size = 4
tv1356 = -6708						; size = 4
tv1284 = -6708						; size = 4
tv1232 = -6708						; size = 4
tv1180 = -6708						; size = 4
tv1515 = -6704						; size = 4
tv1479 = -6704						; size = 4
tv1453 = -6704						; size = 4
tv1427 = -6704						; size = 4
tv1354 = -6700						; size = 4
tv1282 = -6700						; size = 4
tv1230 = -6700						; size = 4
tv1178 = -6700						; size = 4
tv1514 = -6696						; size = 4
tv1478 = -6696						; size = 4
tv1452 = -6696						; size = 4
tv86 = -6696						; size = 4
$T2 = -6688						; size = 28
$T3 = -6652						; size = 28
$T4 = -6616						; size = 28
$T5 = -6580						; size = 28
$T6 = -6544						; size = 28
$T7 = -6508						; size = 28
$T8 = -6472						; size = 28
$T9 = -6436						; size = 28
$T10 = -6400						; size = 28
$T11 = -6364						; size = 28
$T12 = -6328						; size = 28
$T13 = -6292						; size = 28
$T14 = -6256						; size = 28
$T15 = -6220						; size = 28
$T16 = -6184						; size = 28
$T17 = -6148						; size = 28
$T18 = -6112						; size = 28
$T19 = -6076						; size = 28
$T20 = -6040						; size = 28
$T21 = -6004						; size = 28
$T22 = -5968						; size = 28
$T23 = -5932						; size = 28
$T24 = -5896						; size = 28
$T25 = -5860						; size = 28
$T26 = -5824						; size = 28
$T27 = -5788						; size = 28
$T28 = -5752						; size = 28
$T29 = -5716						; size = 28
$T30 = -5680						; size = 28
$T31 = -5644						; size = 28
$T32 = -5608						; size = 28
$T33 = -5572						; size = 28
$T34 = -5536						; size = 28
$T35 = -5500						; size = 28
$T36 = -5464						; size = 28
$T37 = -5428						; size = 28
$T38 = -5392						; size = 12
$T39 = -5372						; size = 12
$T40 = -5352						; size = 12
$T41 = -5332						; size = 12
$T42 = -5312						; size = 28
$T43 = -5276						; size = 28
$T44 = -5240						; size = 28
$T45 = -5204						; size = 28
$T46 = -5168						; size = 28
$T47 = -5132						; size = 28
$T48 = -5096						; size = 28
$T49 = -5060						; size = 28
$T50 = -5024						; size = 28
$T51 = -4988						; size = 28
$T52 = -4952						; size = 28
$T53 = -4916						; size = 28
$T54 = -4880						; size = 28
$T55 = -4844						; size = 28
$T56 = -4808						; size = 28
$T57 = -4772						; size = 28
$T58 = -4736						; size = 28
$T59 = -4700						; size = 28
$T60 = -4664						; size = 28
$T61 = -4628						; size = 28
$T62 = -4592						; size = 28
$T63 = -4556						; size = 28
$T64 = -4520						; size = 28
$T65 = -4484						; size = 28
$T66 = -4448						; size = 28
$T67 = -4412						; size = 28
$T68 = -4376						; size = 28
$T69 = -4340						; size = 28
$T70 = -4304						; size = 28
$T71 = -4268						; size = 28
$T72 = -4232						; size = 28
$T73 = -4196						; size = 28
$T74 = -4160						; size = 28
$T75 = -4124						; size = 28
$T76 = -4088						; size = 28
$T77 = -4052						; size = 28
$T78 = -4016						; size = 12
$T79 = -3996						; size = 12
$T80 = -3976						; size = 12
$T81 = -3956						; size = 12
$T82 = -3936						; size = 28
$T83 = -3900						; size = 28
$T84 = -3864						; size = 28
$T85 = -3828						; size = 28
$T86 = -3792						; size = 28
$T87 = -3756						; size = 28
$T88 = -3720						; size = 28
$T89 = -3684						; size = 28
$T90 = -3648						; size = 28
$T91 = -3612						; size = 28
$T92 = -3576						; size = 28
$T93 = -3540						; size = 28
$T94 = -3504						; size = 28
$T95 = -3468						; size = 28
$T96 = -3432						; size = 28
$T97 = -3396						; size = 28
$T98 = -3360						; size = 28
$T99 = -3324						; size = 28
$T100 = -3288						; size = 28
$T101 = -3252						; size = 28
$T102 = -3216						; size = 28
$T103 = -3180						; size = 28
$T104 = -3144						; size = 28
$T105 = -3108						; size = 28
$T106 = -3072						; size = 28
$T107 = -3036						; size = 28
$T108 = -3000						; size = 12
$T109 = -2980						; size = 12
$T110 = -2960						; size = 12
$T111 = -2940						; size = 12
$T112 = -2920						; size = 28
$T113 = -2884						; size = 28
$T114 = -2848						; size = 28
$T115 = -2812						; size = 28
$T116 = -2776						; size = 28
$T117 = -2740						; size = 28
$T118 = -2704						; size = 28
$T119 = -2668						; size = 28
$T120 = -2632						; size = 28
$T121 = -2596						; size = 28
$T122 = -2560						; size = 28
$T123 = -2524						; size = 28
$T124 = -2488						; size = 28
$T125 = -2452						; size = 28
$T126 = -2416						; size = 28
$T127 = -2380						; size = 28
$T128 = -2344						; size = 28
$T129 = -2308						; size = 28
$T130 = -2272						; size = 28
$T131 = -2236						; size = 28
$T132 = -2200						; size = 28
$T133 = -2164						; size = 28
$T134 = -2128						; size = 28
$T135 = -2092						; size = 28
$T136 = -2056						; size = 28
$T137 = -2020						; size = 28
$T138 = -1984						; size = 12
$T139 = -1964						; size = 12
$T140 = -1944						; size = 12
$T141 = -1924						; size = 12
_outc$142 = -368					; size = 12
_fill$143 = -348					; size = 12
_outc$144 = -328					; size = 12
_fill$145 = -308					; size = 12
_outc$146 = -288					; size = 12
_fill$147 = -268					; size = 12
_outc$148 = -248					; size = 12
_fill$149 = -228					; size = 12
_out$ = -208						; size = 176
_id_type$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_figp$ = 8						; size = 16120
_filename$ = 16128					; size = 28
?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; SaveFigurePartToHtml, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 438
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6968				; 00001b38H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-6980]
	mov	ecx, 1742				; 000006ceH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 439
	mov	eax, DWORD PTR _figp$[ebp+12]
	mov	DWORD PTR _id_type$[ebp], eax
; Line 440
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 3
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 4
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 5
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 10		; 0000000aH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 20		; 00000014H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 30		; 0000001eH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 40		; 00000028H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 50		; 00000032H
	je	SHORT $LN10@SaveFigure
	mov	eax, DWORD PTR ?__LINE__Var@?0??SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@
	push	OFFSET ??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@SaveFigure:
; Line 441
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 442
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_06GMAAMPJO@?$DMhmtl?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 443
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_06DFKEHCEK@?$DMhead?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 444
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0CA@NKEDGCOF@?$DMtitle?$DO?5Figure?5to?5html?5?$DM?1title?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 445
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_07EJLOLCDM@?$DM?1head?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 446
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_06PNKPIJJM@?$DMbody?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 447
	push	OFFSET ??_C@_0CE@MNEHCCIE@?$DMsvg?5width?$DN?$CC10000?$CC?5height?$DN?$CC1000@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 448
	cmp	DWORD PTR _figp$[ebp+12], 1
	jne	$LN2@SaveFigure
; Line 449
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T140[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T141[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T141[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T141[ebp+8], edx
	mov	eax, DWORD PTR $T141[ebp]
	mov	DWORD PTR _fill$149[ebp], eax
	mov	ecx, DWORD PTR $T141[ebp+4]
	mov	DWORD PTR _fill$149[ebp+4], ecx
	mov	edx, DWORD PTR $T141[ebp+8]
	mov	DWORD PTR _fill$149[ebp+8], edx
; Line 450
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T138[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T139[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T139[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T139[ebp+8], edx
	mov	eax, DWORD PTR $T139[ebp]
	mov	DWORD PTR _outc$148[ebp], eax
	mov	ecx, DWORD PTR $T139[ebp+4]
	mov	DWORD PTR _outc$148[ebp+4], ecx
	mov	edx, DWORD PTR $T139[ebp+8]
	mov	DWORD PTR _outc$148[ebp+8], edx
; Line 451
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$148[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T137[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv1178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1178[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$148[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T136[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1427[ebp], eax
	mov	eax, DWORD PTR tv1427[ebp]
	mov	DWORD PTR tv1180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv1180[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$148[ebp]
	push	edx
	lea	eax, DWORD PTR $T135[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1428[ebp], eax
	mov	ecx, DWORD PTR tv1428[ebp]
	mov	DWORD PTR tv1182[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv1182[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T134[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1429[ebp], eax
	mov	edx, DWORD PTR tv1429[ebp]
	mov	DWORD PTR tv1184[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1184[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	ecx, DWORD PTR _fill$149[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T133[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1430[ebp], eax
	mov	eax, DWORD PTR tv1430[ebp]
	mov	DWORD PTR tv1186[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv1186[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$149[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T132[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1431[ebp], eax
	mov	ecx, DWORD PTR tv1431[ebp]
	mov	DWORD PTR tv1188[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv1188[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _fill$149[ebp]
	push	eax
	lea	ecx, DWORD PTR $T131[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1432[ebp], eax
	mov	edx, DWORD PTR tv1432[ebp]
	mov	DWORD PTR tv1190[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv1190[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	ecx, DWORD PTR _figp$[ebp+20]
	push	ecx
	lea	edx, DWORD PTR $T130[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1433[ebp], eax
	mov	eax, DWORD PTR tv1433[ebp]
	mov	DWORD PTR tv1192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv1192[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@
	mov	edx, DWORD PTR _figp$[ebp+16]
	push	edx
	lea	eax, DWORD PTR $T129[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1434[ebp], eax
	mov	ecx, DWORD PTR tv1434[ebp]
	mov	DWORD PTR tv1194[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv1194[ebp]
	push	edx
	push	OFFSET ??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@
	lea	eax, DWORD PTR $T128[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1435[ebp], eax
	mov	ecx, DWORD PTR tv1435[ebp]
	mov	DWORD PTR tv1196[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv1196[ebp]
	push	edx
	lea	eax, DWORD PTR $T127[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1436[ebp], eax
	mov	ecx, DWORD PTR tv1436[ebp]
	mov	DWORD PTR tv1198[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv1198[ebp]
	push	edx
	lea	eax, DWORD PTR $T126[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1437[ebp], eax
	mov	ecx, DWORD PTR tv1437[ebp]
	mov	DWORD PTR tv1200[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv1200[ebp]
	push	edx
	lea	eax, DWORD PTR $T125[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1438[ebp], eax
	mov	ecx, DWORD PTR tv1438[ebp]
	mov	DWORD PTR tv1202[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv1202[ebp]
	push	edx
	lea	eax, DWORD PTR $T124[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1439[ebp], eax
	mov	ecx, DWORD PTR tv1439[ebp]
	mov	DWORD PTR tv1204[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv1204[ebp]
	push	edx
	lea	eax, DWORD PTR $T123[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1440[ebp], eax
	mov	ecx, DWORD PTR tv1440[ebp]
	mov	DWORD PTR tv1206[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv1206[ebp]
	push	edx
	lea	eax, DWORD PTR $T122[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1441[ebp], eax
	mov	ecx, DWORD PTR tv1441[ebp]
	mov	DWORD PTR tv1208[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR tv1208[ebp]
	push	edx
	lea	eax, DWORD PTR $T121[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1442[ebp], eax
	mov	ecx, DWORD PTR tv1442[ebp]
	mov	DWORD PTR tv1210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv1210[ebp]
	push	edx
	lea	eax, DWORD PTR $T120[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1443[ebp], eax
	mov	ecx, DWORD PTR tv1443[ebp]
	mov	DWORD PTR tv1212[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR tv1212[ebp]
	push	edx
	lea	eax, DWORD PTR $T119[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1444[ebp], eax
	mov	ecx, DWORD PTR tv1444[ebp]
	mov	DWORD PTR tv1214[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR tv1214[ebp]
	push	edx
	lea	eax, DWORD PTR $T118[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1445[ebp], eax
	mov	ecx, DWORD PTR tv1445[ebp]
	mov	DWORD PTR tv1216[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	edx, DWORD PTR tv1216[ebp]
	push	edx
	lea	eax, DWORD PTR $T117[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1446[ebp], eax
	mov	ecx, DWORD PTR tv1446[ebp]
	mov	DWORD PTR tv1218[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR tv1218[ebp]
	push	edx
	lea	eax, DWORD PTR $T116[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1447[ebp], eax
	mov	ecx, DWORD PTR tv1447[ebp]
	mov	DWORD PTR tv1220[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR tv1220[ebp]
	push	edx
	lea	eax, DWORD PTR $T115[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1448[ebp], eax
	mov	ecx, DWORD PTR tv1448[ebp]
	mov	DWORD PTR tv1222[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR tv1222[ebp]
	push	edx
	lea	eax, DWORD PTR $T114[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1449[ebp], eax
	mov	ecx, DWORD PTR tv1449[ebp]
	mov	DWORD PTR tv1224[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR tv1224[ebp]
	push	edx
	lea	eax, DWORD PTR $T113[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1450[ebp], eax
	mov	ecx, DWORD PTR tv1450[ebp]
	mov	DWORD PTR tv1226[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	edx, DWORD PTR tv1226[ebp]
	push	edx
	lea	eax, DWORD PTR $T112[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1451[ebp], eax
	mov	ecx, DWORD PTR tv1451[ebp]
	mov	DWORD PTR tv1228[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv1228[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T112[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T113[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T114[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T115[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T116[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T117[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T118[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T119[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T120[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T121[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T122[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T123[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T124[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T125[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T126[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T127[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T128[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T129[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T130[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T131[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T132[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T133[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T134[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T135[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T136[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T137[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 452
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 453
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 454
	jmp	$LN3@SaveFigure
$LN2@SaveFigure:
; Line 455
	cmp	DWORD PTR _figp$[ebp+12], 2
	jne	$LN4@SaveFigure
; Line 456
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T110[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T111[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T111[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T111[ebp+8], edx
	mov	eax, DWORD PTR $T111[ebp]
	mov	DWORD PTR _fill$147[ebp], eax
	mov	ecx, DWORD PTR $T111[ebp+4]
	mov	DWORD PTR _fill$147[ebp+4], ecx
	mov	edx, DWORD PTR $T111[ebp+8]
	mov	DWORD PTR _fill$147[ebp+8], edx
; Line 457
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T108[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T109[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T109[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T109[ebp+8], edx
	mov	eax, DWORD PTR $T109[ebp]
	mov	DWORD PTR _outc$146[ebp], eax
	mov	ecx, DWORD PTR $T109[ebp+4]
	mov	DWORD PTR _outc$146[ebp+4], ecx
	mov	edx, DWORD PTR $T109[ebp+8]
	mov	DWORD PTR _outc$146[ebp+8], edx
; Line 458
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$146[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T107[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1452[ebp], eax
	mov	edx, DWORD PTR tv1452[ebp]
	mov	DWORD PTR tv1230[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	eax, DWORD PTR tv1230[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$146[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T106[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1453[ebp], eax
	mov	eax, DWORD PTR tv1453[ebp]
	mov	DWORD PTR tv1232[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv1232[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$146[ebp]
	push	edx
	lea	eax, DWORD PTR $T105[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1454[ebp], eax
	mov	ecx, DWORD PTR tv1454[ebp]
	mov	DWORD PTR tv1234[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	edx, DWORD PTR tv1234[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T104[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1455[ebp], eax
	mov	edx, DWORD PTR tv1455[ebp]
	mov	DWORD PTR tv1236[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	eax, DWORD PTR tv1236[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	ecx, DWORD PTR _fill$147[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T103[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1456[ebp], eax
	mov	eax, DWORD PTR tv1456[ebp]
	mov	DWORD PTR tv1238[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv1238[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$147[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T102[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1457[ebp], eax
	mov	ecx, DWORD PTR tv1457[ebp]
	mov	DWORD PTR tv1240[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	edx, DWORD PTR tv1240[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _fill$147[ebp]
	push	eax
	lea	ecx, DWORD PTR $T101[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1458[ebp], eax
	mov	edx, DWORD PTR tv1458[ebp]
	mov	DWORD PTR tv1242[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	eax, DWORD PTR tv1242[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	ecx, DWORD PTR _figp$[ebp+16]
	push	ecx
	lea	edx, DWORD PTR $T100[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1459[ebp], eax
	mov	eax, DWORD PTR tv1459[ebp]
	mov	DWORD PTR tv1244[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR tv1244[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@
	mov	edx, DWORD PTR _figp$[ebp+16]
	push	edx
	lea	eax, DWORD PTR $T99[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1460[ebp], eax
	mov	ecx, DWORD PTR tv1460[ebp]
	mov	DWORD PTR tv1246[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	edx, DWORD PTR tv1246[ebp]
	push	edx
	push	OFFSET ??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@
	lea	eax, DWORD PTR $T98[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1461[ebp], eax
	mov	ecx, DWORD PTR tv1461[ebp]
	mov	DWORD PTR tv1248[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	edx, DWORD PTR tv1248[ebp]
	push	edx
	lea	eax, DWORD PTR $T97[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1462[ebp], eax
	mov	ecx, DWORD PTR tv1462[ebp]
	mov	DWORD PTR tv1250[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	edx, DWORD PTR tv1250[ebp]
	push	edx
	lea	eax, DWORD PTR $T96[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1463[ebp], eax
	mov	ecx, DWORD PTR tv1463[ebp]
	mov	DWORD PTR tv1252[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	edx, DWORD PTR tv1252[ebp]
	push	edx
	lea	eax, DWORD PTR $T95[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1464[ebp], eax
	mov	ecx, DWORD PTR tv1464[ebp]
	mov	DWORD PTR tv1254[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	edx, DWORD PTR tv1254[ebp]
	push	edx
	lea	eax, DWORD PTR $T94[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1465[ebp], eax
	mov	ecx, DWORD PTR tv1465[ebp]
	mov	DWORD PTR tv1256[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	edx, DWORD PTR tv1256[ebp]
	push	edx
	lea	eax, DWORD PTR $T93[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1466[ebp], eax
	mov	ecx, DWORD PTR tv1466[ebp]
	mov	DWORD PTR tv1258[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	edx, DWORD PTR tv1258[ebp]
	push	edx
	lea	eax, DWORD PTR $T92[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1467[ebp], eax
	mov	ecx, DWORD PTR tv1467[ebp]
	mov	DWORD PTR tv1260[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	edx, DWORD PTR tv1260[ebp]
	push	edx
	lea	eax, DWORD PTR $T91[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1468[ebp], eax
	mov	ecx, DWORD PTR tv1468[ebp]
	mov	DWORD PTR tv1262[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	edx, DWORD PTR tv1262[ebp]
	push	edx
	lea	eax, DWORD PTR $T90[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1469[ebp], eax
	mov	ecx, DWORD PTR tv1469[ebp]
	mov	DWORD PTR tv1264[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	edx, DWORD PTR tv1264[ebp]
	push	edx
	lea	eax, DWORD PTR $T89[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1470[ebp], eax
	mov	ecx, DWORD PTR tv1470[ebp]
	mov	DWORD PTR tv1266[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	edx, DWORD PTR tv1266[ebp]
	push	edx
	lea	eax, DWORD PTR $T88[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1471[ebp], eax
	mov	ecx, DWORD PTR tv1471[ebp]
	mov	DWORD PTR tv1268[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	edx, DWORD PTR tv1268[ebp]
	push	edx
	lea	eax, DWORD PTR $T87[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1472[ebp], eax
	mov	ecx, DWORD PTR tv1472[ebp]
	mov	DWORD PTR tv1270[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	edx, DWORD PTR tv1270[ebp]
	push	edx
	lea	eax, DWORD PTR $T86[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1473[ebp], eax
	mov	ecx, DWORD PTR tv1473[ebp]
	mov	DWORD PTR tv1272[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	edx, DWORD PTR tv1272[ebp]
	push	edx
	lea	eax, DWORD PTR $T85[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1474[ebp], eax
	mov	ecx, DWORD PTR tv1474[ebp]
	mov	DWORD PTR tv1274[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	edx, DWORD PTR tv1274[ebp]
	push	edx
	lea	eax, DWORD PTR $T84[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1475[ebp], eax
	mov	ecx, DWORD PTR tv1475[ebp]
	mov	DWORD PTR tv1276[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	mov	edx, DWORD PTR tv1276[ebp]
	push	edx
	lea	eax, DWORD PTR $T83[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1476[ebp], eax
	mov	ecx, DWORD PTR tv1476[ebp]
	mov	DWORD PTR tv1278[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	edx, DWORD PTR tv1278[ebp]
	push	edx
	lea	eax, DWORD PTR $T82[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1477[ebp], eax
	mov	ecx, DWORD PTR tv1477[ebp]
	mov	DWORD PTR tv1280[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	edx, DWORD PTR tv1280[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	lea	ecx, DWORD PTR $T82[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR $T83[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	lea	ecx, DWORD PTR $T84[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T85[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T86[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	lea	ecx, DWORD PTR $T87[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T88[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T89[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T90[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	lea	ecx, DWORD PTR $T91[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T92[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T93[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T94[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T95[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T96[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T97[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T98[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T99[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T100[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T101[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T102[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T103[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T104[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T105[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR $T106[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T107[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 459
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 460
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 461
	jmp	$LN3@SaveFigure
$LN4@SaveFigure:
; Line 462
	cmp	DWORD PTR _figp$[ebp+12], 3
	jne	$LN6@SaveFigure
; Line 463
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T80[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T81[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T81[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T81[ebp+8], edx
	mov	eax, DWORD PTR $T81[ebp]
	mov	DWORD PTR _fill$145[ebp], eax
	mov	ecx, DWORD PTR $T81[ebp+4]
	mov	DWORD PTR _fill$145[ebp+4], ecx
	mov	edx, DWORD PTR $T81[ebp+8]
	mov	DWORD PTR _fill$145[ebp+8], edx
; Line 464
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T78[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T79[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T79[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T79[ebp+8], edx
	mov	eax, DWORD PTR $T79[ebp]
	mov	DWORD PTR _outc$144[ebp], eax
	mov	ecx, DWORD PTR $T79[ebp+4]
	mov	DWORD PTR _outc$144[ebp+4], ecx
	mov	edx, DWORD PTR $T79[ebp+8]
	mov	DWORD PTR _outc$144[ebp+8], edx
; Line 465
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$144[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T77[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1478[ebp], eax
	mov	edx, DWORD PTR tv1478[ebp]
	mov	DWORD PTR tv1282[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	eax, DWORD PTR tv1282[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$144[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T76[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1479[ebp], eax
	mov	eax, DWORD PTR tv1479[ebp]
	mov	DWORD PTR tv1284[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	ecx, DWORD PTR tv1284[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$144[ebp]
	push	edx
	lea	eax, DWORD PTR $T75[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1480[ebp], eax
	mov	ecx, DWORD PTR tv1480[ebp]
	mov	DWORD PTR tv1286[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	edx, DWORD PTR tv1286[ebp]
	push	edx
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	eax, DWORD PTR _fill$145[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T74[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1481[ebp], eax
	mov	edx, DWORD PTR tv1481[ebp]
	mov	DWORD PTR tv1288[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	eax, DWORD PTR tv1288[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _fill$145[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T73[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1482[ebp], eax
	mov	eax, DWORD PTR tv1482[ebp]
	mov	DWORD PTR tv1290[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR tv1290[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _fill$145[ebp]
	push	edx
	lea	eax, DWORD PTR $T72[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1483[ebp], eax
	mov	ecx, DWORD PTR tv1483[ebp]
	mov	DWORD PTR tv1292[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	mov	edx, DWORD PTR tv1292[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T71[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1484[ebp], eax
	mov	edx, DWORD PTR tv1484[ebp]
	mov	DWORD PTR tv1294[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	eax, DWORD PTR tv1294[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T70[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1485[ebp], eax
	mov	eax, DWORD PTR tv1485[ebp]
	mov	DWORD PTR tv1296[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	ecx, DWORD PTR tv1296[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T69[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1486[ebp], eax
	mov	ecx, DWORD PTR tv1486[ebp]
	mov	DWORD PTR tv1298[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	edx, DWORD PTR tv1298[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T68[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1487[ebp], eax
	mov	edx, DWORD PTR tv1487[ebp]
	mov	DWORD PTR tv1300[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	eax, DWORD PTR tv1300[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T67[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1488[ebp], eax
	mov	eax, DWORD PTR tv1488[ebp]
	mov	DWORD PTR tv1302[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	ecx, DWORD PTR tv1302[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T66[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1489[ebp], eax
	mov	ecx, DWORD PTR tv1489[ebp]
	mov	DWORD PTR tv1304[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	mov	edx, DWORD PTR tv1304[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@
	lea	eax, DWORD PTR $T65[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1490[ebp], eax
	mov	ecx, DWORD PTR tv1490[ebp]
	mov	DWORD PTR tv1306[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR tv1306[ebp]
	push	edx
	lea	eax, DWORD PTR $T64[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1491[ebp], eax
	mov	ecx, DWORD PTR tv1491[ebp]
	mov	DWORD PTR tv1308[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	mov	edx, DWORD PTR tv1308[ebp]
	push	edx
	lea	eax, DWORD PTR $T63[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1492[ebp], eax
	mov	ecx, DWORD PTR tv1492[ebp]
	mov	DWORD PTR tv1310[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	edx, DWORD PTR tv1310[ebp]
	push	edx
	lea	eax, DWORD PTR $T62[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1493[ebp], eax
	mov	ecx, DWORD PTR tv1493[ebp]
	mov	DWORD PTR tv1312[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	mov	edx, DWORD PTR tv1312[ebp]
	push	edx
	lea	eax, DWORD PTR $T61[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1494[ebp], eax
	mov	ecx, DWORD PTR tv1494[ebp]
	mov	DWORD PTR tv1314[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	edx, DWORD PTR tv1314[ebp]
	push	edx
	lea	eax, DWORD PTR $T60[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1495[ebp], eax
	mov	ecx, DWORD PTR tv1495[ebp]
	mov	DWORD PTR tv1316[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	edx, DWORD PTR tv1316[ebp]
	push	edx
	lea	eax, DWORD PTR $T59[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1496[ebp], eax
	mov	ecx, DWORD PTR tv1496[ebp]
	mov	DWORD PTR tv1318[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	edx, DWORD PTR tv1318[ebp]
	push	edx
	lea	eax, DWORD PTR $T58[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1497[ebp], eax
	mov	ecx, DWORD PTR tv1497[ebp]
	mov	DWORD PTR tv1320[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	mov	edx, DWORD PTR tv1320[ebp]
	push	edx
	lea	eax, DWORD PTR $T57[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1498[ebp], eax
	mov	ecx, DWORD PTR tv1498[ebp]
	mov	DWORD PTR tv1322[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	edx, DWORD PTR tv1322[ebp]
	push	edx
	lea	eax, DWORD PTR $T56[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1499[ebp], eax
	mov	ecx, DWORD PTR tv1499[ebp]
	mov	DWORD PTR tv1324[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	edx, DWORD PTR tv1324[ebp]
	push	edx
	lea	eax, DWORD PTR $T55[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1500[ebp], eax
	mov	ecx, DWORD PTR tv1500[ebp]
	mov	DWORD PTR tv1326[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	edx, DWORD PTR tv1326[ebp]
	push	edx
	lea	eax, DWORD PTR $T54[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1501[ebp], eax
	mov	ecx, DWORD PTR tv1501[ebp]
	mov	DWORD PTR tv1328[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	mov	edx, DWORD PTR tv1328[ebp]
	push	edx
	lea	eax, DWORD PTR $T53[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1502[ebp], eax
	mov	ecx, DWORD PTR tv1502[ebp]
	mov	DWORD PTR tv1330[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	edx, DWORD PTR tv1330[ebp]
	push	edx
	lea	eax, DWORD PTR $T52[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1503[ebp], eax
	mov	ecx, DWORD PTR tv1503[ebp]
	mov	DWORD PTR tv1332[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	mov	edx, DWORD PTR tv1332[ebp]
	push	edx
	lea	eax, DWORD PTR $T51[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1504[ebp], eax
	mov	ecx, DWORD PTR tv1504[ebp]
	mov	DWORD PTR tv1334[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	edx, DWORD PTR tv1334[ebp]
	push	edx
	lea	eax, DWORD PTR $T50[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1505[ebp], eax
	mov	ecx, DWORD PTR tv1505[ebp]
	mov	DWORD PTR tv1336[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	edx, DWORD PTR tv1336[ebp]
	push	edx
	lea	eax, DWORD PTR $T49[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1506[ebp], eax
	mov	ecx, DWORD PTR tv1506[ebp]
	mov	DWORD PTR tv1338[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	edx, DWORD PTR tv1338[ebp]
	push	edx
	lea	eax, DWORD PTR $T48[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1507[ebp], eax
	mov	ecx, DWORD PTR tv1507[ebp]
	mov	DWORD PTR tv1340[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	mov	edx, DWORD PTR tv1340[ebp]
	push	edx
	lea	eax, DWORD PTR $T47[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1508[ebp], eax
	mov	ecx, DWORD PTR tv1508[ebp]
	mov	DWORD PTR tv1342[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR tv1342[ebp]
	push	edx
	lea	eax, DWORD PTR $T46[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1509[ebp], eax
	mov	ecx, DWORD PTR tv1509[ebp]
	mov	DWORD PTR tv1344[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	mov	edx, DWORD PTR tv1344[ebp]
	push	edx
	lea	eax, DWORD PTR $T45[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1510[ebp], eax
	mov	ecx, DWORD PTR tv1510[ebp]
	mov	DWORD PTR tv1346[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	edx, DWORD PTR tv1346[ebp]
	push	edx
	lea	eax, DWORD PTR $T44[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1511[ebp], eax
	mov	ecx, DWORD PTR tv1511[ebp]
	mov	DWORD PTR tv1348[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	mov	edx, DWORD PTR tv1348[ebp]
	push	edx
	lea	eax, DWORD PTR $T43[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1512[ebp], eax
	mov	ecx, DWORD PTR tv1512[ebp]
	mov	DWORD PTR tv1350[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	edx, DWORD PTR tv1350[ebp]
	push	edx
	lea	eax, DWORD PTR $T42[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1513[ebp], eax
	mov	ecx, DWORD PTR tv1513[ebp]
	mov	DWORD PTR tv1352[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	mov	edx, DWORD PTR tv1352[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T42[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T43[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	lea	ecx, DWORD PTR $T44[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T45[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T46[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T47[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	lea	ecx, DWORD PTR $T48[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	lea	ecx, DWORD PTR $T49[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	lea	ecx, DWORD PTR $T50[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	lea	ecx, DWORD PTR $T51[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	lea	ecx, DWORD PTR $T52[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	lea	ecx, DWORD PTR $T53[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	lea	ecx, DWORD PTR $T54[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T55[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T56[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T57[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	lea	ecx, DWORD PTR $T58[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	lea	ecx, DWORD PTR $T59[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	lea	ecx, DWORD PTR $T60[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	lea	ecx, DWORD PTR $T61[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	lea	ecx, DWORD PTR $T62[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR $T63[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR $T64[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR $T65[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	lea	ecx, DWORD PTR $T66[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T67[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T68[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T69[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T70[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T71[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T72[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T73[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T74[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T75[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T76[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T77[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 466
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 467
	jmp	$LN3@SaveFigure
$LN6@SaveFigure:
; Line 468
	cmp	DWORD PTR _figp$[ebp+12], 4
	jne	$LN3@SaveFigure
; Line 469
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T40[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T41[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T41[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T41[ebp+8], edx
	mov	eax, DWORD PTR $T41[ebp]
	mov	DWORD PTR _fill$143[ebp], eax
	mov	ecx, DWORD PTR $T41[ebp+4]
	mov	DWORD PTR _fill$143[ebp+4], ecx
	mov	edx, DWORD PTR $T41[ebp+8]
	mov	DWORD PTR _fill$143[ebp+8], edx
; Line 470
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T38[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T39[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T39[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T39[ebp+8], edx
	mov	eax, DWORD PTR $T39[ebp]
	mov	DWORD PTR _outc$142[ebp], eax
	mov	ecx, DWORD PTR $T39[ebp+4]
	mov	DWORD PTR _outc$142[ebp+4], ecx
	mov	edx, DWORD PTR $T39[ebp+8]
	mov	DWORD PTR _outc$142[ebp+8], edx
; Line 471
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$142[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1514[ebp], eax
	mov	edx, DWORD PTR tv1514[ebp]
	mov	DWORD PTR tv1354[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	eax, DWORD PTR tv1354[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$142[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T36[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1515[ebp], eax
	mov	eax, DWORD PTR tv1515[ebp]
	mov	DWORD PTR tv1356[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	mov	ecx, DWORD PTR tv1356[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$142[ebp]
	push	edx
	lea	eax, DWORD PTR $T35[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1516[ebp], eax
	mov	ecx, DWORD PTR tv1516[ebp]
	mov	DWORD PTR tv1358[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	edx, DWORD PTR tv1358[ebp]
	push	edx
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	eax, DWORD PTR _fill$143[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1517[ebp], eax
	mov	edx, DWORD PTR tv1517[ebp]
	mov	DWORD PTR tv1360[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	eax, DWORD PTR tv1360[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _fill$143[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T33[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1518[ebp], eax
	mov	eax, DWORD PTR tv1518[ebp]
	mov	DWORD PTR tv1362[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	ecx, DWORD PTR tv1362[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _fill$143[ebp]
	push	edx
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1519[ebp], eax
	mov	ecx, DWORD PTR tv1519[ebp]
	mov	DWORD PTR tv1364[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	edx, DWORD PTR tv1364[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1520[ebp], eax
	mov	edx, DWORD PTR tv1520[ebp]
	mov	DWORD PTR tv1366[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	eax, DWORD PTR tv1366[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1521[ebp], eax
	mov	eax, DWORD PTR tv1521[ebp]
	mov	DWORD PTR tv1368[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	mov	ecx, DWORD PTR tv1368[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1522[ebp], eax
	mov	ecx, DWORD PTR tv1522[ebp]
	mov	DWORD PTR tv1370[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	edx, DWORD PTR tv1370[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T28[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1523[ebp], eax
	mov	edx, DWORD PTR tv1523[ebp]
	mov	DWORD PTR tv1372[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	mov	eax, DWORD PTR tv1372[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1524[ebp], eax
	mov	eax, DWORD PTR tv1524[ebp]
	mov	DWORD PTR tv1374[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	ecx, DWORD PTR tv1374[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1525[ebp], eax
	mov	ecx, DWORD PTR tv1525[ebp]
	mov	DWORD PTR tv1376[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	mov	edx, DWORD PTR tv1376[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@
	lea	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1526[ebp], eax
	mov	ecx, DWORD PTR tv1526[ebp]
	mov	DWORD PTR tv1378[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	edx, DWORD PTR tv1378[ebp]
	push	edx
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1527[ebp], eax
	mov	ecx, DWORD PTR tv1527[ebp]
	mov	DWORD PTR tv1380[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	edx, DWORD PTR tv1380[ebp]
	push	edx
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1528[ebp], eax
	mov	ecx, DWORD PTR tv1528[ebp]
	mov	DWORD PTR tv1382[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	edx, DWORD PTR tv1382[ebp]
	push	edx
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1529[ebp], eax
	mov	ecx, DWORD PTR tv1529[ebp]
	mov	DWORD PTR tv1384[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	mov	edx, DWORD PTR tv1384[ebp]
	push	edx
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1530[ebp], eax
	mov	ecx, DWORD PTR tv1530[ebp]
	mov	DWORD PTR tv1386[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	edx, DWORD PTR tv1386[ebp]
	push	edx
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1531[ebp], eax
	mov	ecx, DWORD PTR tv1531[ebp]
	mov	DWORD PTR tv1388[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	edx, DWORD PTR tv1388[ebp]
	push	edx
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1532[ebp], eax
	mov	ecx, DWORD PTR tv1532[ebp]
	mov	DWORD PTR tv1390[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	edx, DWORD PTR tv1390[ebp]
	push	edx
	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1533[ebp], eax
	mov	ecx, DWORD PTR tv1533[ebp]
	mov	DWORD PTR tv1392[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	mov	edx, DWORD PTR tv1392[ebp]
	push	edx
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1534[ebp], eax
	mov	ecx, DWORD PTR tv1534[ebp]
	mov	DWORD PTR tv1394[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	edx, DWORD PTR tv1394[ebp]
	push	edx
	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1535[ebp], eax
	mov	ecx, DWORD PTR tv1535[ebp]
	mov	DWORD PTR tv1396[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	mov	edx, DWORD PTR tv1396[ebp]
	push	edx
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1536[ebp], eax
	mov	ecx, DWORD PTR tv1536[ebp]
	mov	DWORD PTR tv1398[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	edx, DWORD PTR tv1398[ebp]
	push	edx
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1537[ebp], eax
	mov	ecx, DWORD PTR tv1537[ebp]
	mov	DWORD PTR tv1400[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	edx, DWORD PTR tv1400[ebp]
	push	edx
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1538[ebp], eax
	mov	ecx, DWORD PTR tv1538[ebp]
	mov	DWORD PTR tv1402[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	edx, DWORD PTR tv1402[ebp]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1539[ebp], eax
	mov	ecx, DWORD PTR tv1539[ebp]
	mov	DWORD PTR tv1404[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	edx, DWORD PTR tv1404[ebp]
	push	edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1540[ebp], eax
	mov	ecx, DWORD PTR tv1540[ebp]
	mov	DWORD PTR tv1406[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	edx, DWORD PTR tv1406[ebp]
	push	edx
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1541[ebp], eax
	mov	ecx, DWORD PTR tv1541[ebp]
	mov	DWORD PTR tv1408[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	mov	edx, DWORD PTR tv1408[ebp]
	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1542[ebp], eax
	mov	ecx, DWORD PTR tv1542[ebp]
	mov	DWORD PTR tv1410[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	edx, DWORD PTR tv1410[ebp]
	push	edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1543[ebp], eax
	mov	ecx, DWORD PTR tv1543[ebp]
	mov	DWORD PTR tv1412[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	edx, DWORD PTR tv1412[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1544[ebp], eax
	mov	ecx, DWORD PTR tv1544[ebp]
	mov	DWORD PTR tv1414[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	mov	edx, DWORD PTR tv1414[ebp]
	push	edx
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1545[ebp], eax
	mov	ecx, DWORD PTR tv1545[ebp]
	mov	DWORD PTR tv1416[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR tv1416[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1546[ebp], eax
	mov	ecx, DWORD PTR tv1546[ebp]
	mov	DWORD PTR tv1418[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	mov	edx, DWORD PTR tv1418[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1547[ebp], eax
	mov	ecx, DWORD PTR tv1547[ebp]
	mov	DWORD PTR tv1420[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	mov	edx, DWORD PTR tv1420[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1548[ebp], eax
	mov	ecx, DWORD PTR tv1548[ebp]
	mov	DWORD PTR tv1422[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	mov	edx, DWORD PTR tv1422[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1549[ebp], eax
	mov	ecx, DWORD PTR tv1549[ebp]
	mov	DWORD PTR tv1424[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	mov	edx, DWORD PTR tv1424[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 472
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN3@SaveFigure:
; Line 474
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_07IBLFEJOK@?$DM?1body?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 475
	push	OFFSET ??_C@_07FAPLOCAO@?$DM?1html?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 476
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 477
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _figp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN149@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 6980				; 00001b44H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN149@SaveFigure:
	DD	9
	DD	$LN148@SaveFigure
$LN148@SaveFigure:
	DD	-208					; ffffff30H
	DD	176					; 000000b0H
	DD	$LN138@SaveFigure
	DD	-228					; ffffff1cH
	DD	12					; 0000000cH
	DD	$LN139@SaveFigure
	DD	-248					; ffffff08H
	DD	12					; 0000000cH
	DD	$LN140@SaveFigure
	DD	-268					; fffffef4H
	DD	12					; 0000000cH
	DD	$LN141@SaveFigure
	DD	-288					; fffffee0H
	DD	12					; 0000000cH
	DD	$LN142@SaveFigure
	DD	-308					; fffffeccH
	DD	12					; 0000000cH
	DD	$LN143@SaveFigure
	DD	-328					; fffffeb8H
	DD	12					; 0000000cH
	DD	$LN144@SaveFigure
	DD	-348					; fffffea4H
	DD	12					; 0000000cH
	DD	$LN145@SaveFigure
	DD	-368					; fffffe90H
	DD	12					; 0000000cH
	DD	$LN146@SaveFigure
$LN146@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN145@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN144@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN143@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN142@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN141@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN140@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN139@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN138@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _figp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T137[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T136[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T135[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T134[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T133[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T132[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T131[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T130[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T129[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T128[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T127[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T126[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T125[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T124[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T123[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T122[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T121[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T120[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T119[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T118[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T117[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24:
	lea	ecx, DWORD PTR $T116[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T115[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26:
	lea	ecx, DWORD PTR $T114[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T113[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28:
	lea	ecx, DWORD PTR $T112[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T107[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$30:
	lea	ecx, DWORD PTR $T106[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31:
	lea	ecx, DWORD PTR $T105[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T104[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33:
	lea	ecx, DWORD PTR $T103[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T102[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35:
	lea	ecx, DWORD PTR $T101[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T100[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T99[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38:
	lea	ecx, DWORD PTR $T98[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39:
	lea	ecx, DWORD PTR $T97[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T96[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T95[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T94[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$43:
	lea	ecx, DWORD PTR $T93[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$44:
	lea	ecx, DWORD PTR $T92[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$45:
	lea	ecx, DWORD PTR $T91[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$46:
	lea	ecx, DWORD PTR $T90[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$47:
	lea	ecx, DWORD PTR $T89[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$48:
	lea	ecx, DWORD PTR $T88[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$49:
	lea	ecx, DWORD PTR $T87[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$50:
	lea	ecx, DWORD PTR $T86[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$51:
	lea	ecx, DWORD PTR $T85[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$52:
	lea	ecx, DWORD PTR $T84[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$53:
	lea	ecx, DWORD PTR $T83[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$54:
	lea	ecx, DWORD PTR $T82[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$55:
	lea	ecx, DWORD PTR $T77[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$56:
	lea	ecx, DWORD PTR $T76[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$57:
	lea	ecx, DWORD PTR $T75[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$58:
	lea	ecx, DWORD PTR $T74[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$59:
	lea	ecx, DWORD PTR $T73[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$60:
	lea	ecx, DWORD PTR $T72[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$61:
	lea	ecx, DWORD PTR $T71[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$62:
	lea	ecx, DWORD PTR $T70[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$63:
	lea	ecx, DWORD PTR $T69[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$64:
	lea	ecx, DWORD PTR $T68[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$65:
	lea	ecx, DWORD PTR $T67[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$66:
	lea	ecx, DWORD PTR $T66[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$67:
	lea	ecx, DWORD PTR $T65[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$68:
	lea	ecx, DWORD PTR $T64[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$69:
	lea	ecx, DWORD PTR $T63[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$70:
	lea	ecx, DWORD PTR $T62[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$71:
	lea	ecx, DWORD PTR $T61[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$72:
	lea	ecx, DWORD PTR $T60[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$73:
	lea	ecx, DWORD PTR $T59[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$74:
	lea	ecx, DWORD PTR $T58[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$75:
	lea	ecx, DWORD PTR $T57[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$76:
	lea	ecx, DWORD PTR $T56[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$77:
	lea	ecx, DWORD PTR $T55[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$78:
	lea	ecx, DWORD PTR $T54[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$79:
	lea	ecx, DWORD PTR $T53[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$80:
	lea	ecx, DWORD PTR $T52[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$81:
	lea	ecx, DWORD PTR $T51[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$82:
	lea	ecx, DWORD PTR $T50[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$83:
	lea	ecx, DWORD PTR $T49[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$84:
	lea	ecx, DWORD PTR $T48[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$85:
	lea	ecx, DWORD PTR $T47[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$86:
	lea	ecx, DWORD PTR $T46[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$87:
	lea	ecx, DWORD PTR $T45[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$88:
	lea	ecx, DWORD PTR $T44[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$89:
	lea	ecx, DWORD PTR $T43[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$90:
	lea	ecx, DWORD PTR $T42[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$91:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$92:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$93:
	lea	ecx, DWORD PTR $T35[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$94:
	lea	ecx, DWORD PTR $T34[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$95:
	lea	ecx, DWORD PTR $T33[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$96:
	lea	ecx, DWORD PTR $T32[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$97:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$98:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$99:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$100:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$101:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$102:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$103:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$104:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$105:
	lea	ecx, DWORD PTR $T23[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$106:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$107:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$108:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$109:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$110:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$111:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$112:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$113:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$114:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$115:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$116:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$117:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$118:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$119:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$120:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$121:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$122:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$123:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$124:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$125:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$126:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6984]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigurePartToHtml@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; SaveFigurePartToHtml
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4530
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4531
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 978
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 979
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 980
	mov	esi, esp
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 981
	mov	eax, DWORD PTR __Ostr$[ebp]
; Line 982
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv1385 = -6980						; size = 4
tv1313 = -6980						; size = 4
tv1510 = -6976						; size = 4
tv1474 = -6976						; size = 4
tv1383 = -6972						; size = 4
tv1311 = -6972						; size = 4
tv1509 = -6968						; size = 4
tv1473 = -6968						; size = 4
tv1381 = -6964						; size = 4
tv1309 = -6964						; size = 4
tv1508 = -6960						; size = 4
tv1472 = -6960						; size = 4
tv1379 = -6956						; size = 4
tv1307 = -6956						; size = 4
tv1507 = -6952						; size = 4
tv1471 = -6952						; size = 4
tv1377 = -6948						; size = 4
tv1305 = -6948						; size = 4
tv1506 = -6944						; size = 4
tv1470 = -6944						; size = 4
tv1375 = -6940						; size = 4
tv1303 = -6940						; size = 4
tv1505 = -6936						; size = 4
tv1469 = -6936						; size = 4
tv1373 = -6932						; size = 4
tv1301 = -6932						; size = 4
tv1504 = -6928						; size = 4
tv1468 = -6928						; size = 4
tv1371 = -6924						; size = 4
tv1299 = -6924						; size = 4
tv1503 = -6920						; size = 4
tv1467 = -6920						; size = 4
tv1369 = -6916						; size = 4
tv1297 = -6916						; size = 4
tv1502 = -6912						; size = 4
tv1466 = -6912						; size = 4
tv1367 = -6908						; size = 4
tv1295 = -6908						; size = 4
tv1501 = -6904						; size = 4
tv1465 = -6904						; size = 4
tv1365 = -6900						; size = 4
tv1293 = -6900						; size = 4
tv1241 = -6900						; size = 4
tv1189 = -6900						; size = 4
tv1500 = -6896						; size = 4
tv1464 = -6896						; size = 4
tv1438 = -6896						; size = 4
tv1412 = -6896						; size = 4
tv1363 = -6892						; size = 4
tv1291 = -6892						; size = 4
tv1239 = -6892						; size = 4
tv1187 = -6892						; size = 4
tv1499 = -6888						; size = 4
tv1463 = -6888						; size = 4
tv1437 = -6888						; size = 4
tv1411 = -6888						; size = 4
tv1361 = -6884						; size = 4
tv1289 = -6884						; size = 4
tv1237 = -6884						; size = 4
tv1185 = -6884						; size = 4
tv1498 = -6880						; size = 4
tv1462 = -6880						; size = 4
tv1436 = -6880						; size = 4
tv1410 = -6880						; size = 4
tv1359 = -6876						; size = 4
tv1287 = -6876						; size = 4
tv1235 = -6876						; size = 4
tv1183 = -6876						; size = 4
tv1497 = -6872						; size = 4
tv1461 = -6872						; size = 4
tv1435 = -6872						; size = 4
tv1409 = -6872						; size = 4
tv1357 = -6868						; size = 4
tv1285 = -6868						; size = 4
tv1233 = -6868						; size = 4
tv1181 = -6868						; size = 4
tv1496 = -6864						; size = 4
tv1460 = -6864						; size = 4
tv1434 = -6864						; size = 4
tv1408 = -6864						; size = 4
tv1355 = -6860						; size = 4
tv1283 = -6860						; size = 4
tv1231 = -6860						; size = 4
tv1179 = -6860						; size = 4
tv1495 = -6856						; size = 4
tv1459 = -6856						; size = 4
tv1433 = -6856						; size = 4
tv1407 = -6856						; size = 4
tv1353 = -6852						; size = 4
tv1281 = -6852						; size = 4
tv1229 = -6852						; size = 4
tv1177 = -6852						; size = 4
tv1494 = -6848						; size = 4
tv1458 = -6848						; size = 4
tv1432 = -6848						; size = 4
tv1406 = -6848						; size = 4
tv1351 = -6844						; size = 4
tv1279 = -6844						; size = 4
tv1227 = -6844						; size = 4
tv1175 = -6844						; size = 4
tv1493 = -6840						; size = 4
tv1457 = -6840						; size = 4
tv1431 = -6840						; size = 4
tv1405 = -6840						; size = 4
tv1349 = -6836						; size = 4
tv1277 = -6836						; size = 4
tv1225 = -6836						; size = 4
tv1173 = -6836						; size = 4
tv1492 = -6832						; size = 4
tv1456 = -6832						; size = 4
tv1430 = -6832						; size = 4
tv1404 = -6832						; size = 4
tv1347 = -6828						; size = 4
tv1275 = -6828						; size = 4
tv1223 = -6828						; size = 4
tv1171 = -6828						; size = 4
tv1491 = -6824						; size = 4
tv1455 = -6824						; size = 4
tv1429 = -6824						; size = 4
tv1403 = -6824						; size = 4
tv1345 = -6820						; size = 4
tv1273 = -6820						; size = 4
tv1221 = -6820						; size = 4
tv1169 = -6820						; size = 4
tv1490 = -6816						; size = 4
tv1454 = -6816						; size = 4
tv1428 = -6816						; size = 4
tv1402 = -6816						; size = 4
tv1343 = -6812						; size = 4
tv1271 = -6812						; size = 4
tv1219 = -6812						; size = 4
tv1167 = -6812						; size = 4
tv1489 = -6808						; size = 4
tv1453 = -6808						; size = 4
tv1427 = -6808						; size = 4
tv1401 = -6808						; size = 4
tv1341 = -6804						; size = 4
tv1269 = -6804						; size = 4
tv1217 = -6804						; size = 4
tv1165 = -6804						; size = 4
tv1488 = -6800						; size = 4
tv1452 = -6800						; size = 4
tv1426 = -6800						; size = 4
tv1400 = -6800						; size = 4
tv1339 = -6796						; size = 4
tv1267 = -6796						; size = 4
tv1215 = -6796						; size = 4
tv1163 = -6796						; size = 4
tv1487 = -6792						; size = 4
tv1451 = -6792						; size = 4
tv1425 = -6792						; size = 4
tv1399 = -6792						; size = 4
tv1337 = -6788						; size = 4
tv1265 = -6788						; size = 4
tv1213 = -6788						; size = 4
tv1161 = -6788						; size = 4
tv1486 = -6784						; size = 4
tv1450 = -6784						; size = 4
tv1424 = -6784						; size = 4
tv1398 = -6784						; size = 4
tv1335 = -6780						; size = 4
tv1263 = -6780						; size = 4
tv1211 = -6780						; size = 4
tv1159 = -6780						; size = 4
tv1485 = -6776						; size = 4
tv1449 = -6776						; size = 4
tv1423 = -6776						; size = 4
tv1397 = -6776						; size = 4
tv1333 = -6772						; size = 4
tv1261 = -6772						; size = 4
tv1209 = -6772						; size = 4
tv1157 = -6772						; size = 4
tv1484 = -6768						; size = 4
tv1448 = -6768						; size = 4
tv1422 = -6768						; size = 4
tv1396 = -6768						; size = 4
tv1331 = -6764						; size = 4
tv1259 = -6764						; size = 4
tv1207 = -6764						; size = 4
tv1155 = -6764						; size = 4
tv1483 = -6760						; size = 4
tv1447 = -6760						; size = 4
tv1421 = -6760						; size = 4
tv1395 = -6760						; size = 4
tv1329 = -6756						; size = 4
tv1257 = -6756						; size = 4
tv1205 = -6756						; size = 4
tv1153 = -6756						; size = 4
tv1482 = -6752						; size = 4
tv1446 = -6752						; size = 4
tv1420 = -6752						; size = 4
tv1394 = -6752						; size = 4
tv1327 = -6748						; size = 4
tv1255 = -6748						; size = 4
tv1203 = -6748						; size = 4
tv1151 = -6748						; size = 4
tv1481 = -6744						; size = 4
tv1445 = -6744						; size = 4
tv1419 = -6744						; size = 4
tv1393 = -6744						; size = 4
tv1325 = -6740						; size = 4
tv1253 = -6740						; size = 4
tv1201 = -6740						; size = 4
tv1149 = -6740						; size = 4
tv1480 = -6736						; size = 4
tv1444 = -6736						; size = 4
tv1418 = -6736						; size = 4
tv1392 = -6736						; size = 4
tv1323 = -6732						; size = 4
tv1251 = -6732						; size = 4
tv1199 = -6732						; size = 4
tv1147 = -6732						; size = 4
tv1479 = -6728						; size = 4
tv1443 = -6728						; size = 4
tv1417 = -6728						; size = 4
tv1391 = -6728						; size = 4
tv1321 = -6724						; size = 4
tv1249 = -6724						; size = 4
tv1197 = -6724						; size = 4
tv1145 = -6724						; size = 4
tv1478 = -6720						; size = 4
tv1442 = -6720						; size = 4
tv1416 = -6720						; size = 4
tv1390 = -6720						; size = 4
tv1319 = -6716						; size = 4
tv1247 = -6716						; size = 4
tv1195 = -6716						; size = 4
tv1143 = -6716						; size = 4
tv1477 = -6712						; size = 4
tv1441 = -6712						; size = 4
tv1415 = -6712						; size = 4
tv1389 = -6712						; size = 4
tv1317 = -6708						; size = 4
tv1245 = -6708						; size = 4
tv1193 = -6708						; size = 4
tv1141 = -6708						; size = 4
tv1476 = -6704						; size = 4
tv1440 = -6704						; size = 4
tv1414 = -6704						; size = 4
tv1388 = -6704						; size = 4
tv1315 = -6700						; size = 4
tv1243 = -6700						; size = 4
tv1191 = -6700						; size = 4
tv1139 = -6700						; size = 4
tv1475 = -6696						; size = 4
tv1439 = -6696						; size = 4
tv1413 = -6696						; size = 4
tv86 = -6696						; size = 4
$T2 = -6688						; size = 28
$T3 = -6652						; size = 28
$T4 = -6616						; size = 28
$T5 = -6580						; size = 28
$T6 = -6544						; size = 28
$T7 = -6508						; size = 28
$T8 = -6472						; size = 28
$T9 = -6436						; size = 28
$T10 = -6400						; size = 28
$T11 = -6364						; size = 28
$T12 = -6328						; size = 28
$T13 = -6292						; size = 28
$T14 = -6256						; size = 28
$T15 = -6220						; size = 28
$T16 = -6184						; size = 28
$T17 = -6148						; size = 28
$T18 = -6112						; size = 28
$T19 = -6076						; size = 28
$T20 = -6040						; size = 28
$T21 = -6004						; size = 28
$T22 = -5968						; size = 28
$T23 = -5932						; size = 28
$T24 = -5896						; size = 28
$T25 = -5860						; size = 28
$T26 = -5824						; size = 28
$T27 = -5788						; size = 28
$T28 = -5752						; size = 28
$T29 = -5716						; size = 28
$T30 = -5680						; size = 28
$T31 = -5644						; size = 28
$T32 = -5608						; size = 28
$T33 = -5572						; size = 28
$T34 = -5536						; size = 28
$T35 = -5500						; size = 28
$T36 = -5464						; size = 28
$T37 = -5428						; size = 28
$T38 = -5392						; size = 12
$T39 = -5372						; size = 12
$T40 = -5352						; size = 12
$T41 = -5332						; size = 12
$T42 = -5312						; size = 28
$T43 = -5276						; size = 28
$T44 = -5240						; size = 28
$T45 = -5204						; size = 28
$T46 = -5168						; size = 28
$T47 = -5132						; size = 28
$T48 = -5096						; size = 28
$T49 = -5060						; size = 28
$T50 = -5024						; size = 28
$T51 = -4988						; size = 28
$T52 = -4952						; size = 28
$T53 = -4916						; size = 28
$T54 = -4880						; size = 28
$T55 = -4844						; size = 28
$T56 = -4808						; size = 28
$T57 = -4772						; size = 28
$T58 = -4736						; size = 28
$T59 = -4700						; size = 28
$T60 = -4664						; size = 28
$T61 = -4628						; size = 28
$T62 = -4592						; size = 28
$T63 = -4556						; size = 28
$T64 = -4520						; size = 28
$T65 = -4484						; size = 28
$T66 = -4448						; size = 28
$T67 = -4412						; size = 28
$T68 = -4376						; size = 28
$T69 = -4340						; size = 28
$T70 = -4304						; size = 28
$T71 = -4268						; size = 28
$T72 = -4232						; size = 28
$T73 = -4196						; size = 28
$T74 = -4160						; size = 28
$T75 = -4124						; size = 28
$T76 = -4088						; size = 28
$T77 = -4052						; size = 28
$T78 = -4016						; size = 12
$T79 = -3996						; size = 12
$T80 = -3976						; size = 12
$T81 = -3956						; size = 12
$T82 = -3936						; size = 28
$T83 = -3900						; size = 28
$T84 = -3864						; size = 28
$T85 = -3828						; size = 28
$T86 = -3792						; size = 28
$T87 = -3756						; size = 28
$T88 = -3720						; size = 28
$T89 = -3684						; size = 28
$T90 = -3648						; size = 28
$T91 = -3612						; size = 28
$T92 = -3576						; size = 28
$T93 = -3540						; size = 28
$T94 = -3504						; size = 28
$T95 = -3468						; size = 28
$T96 = -3432						; size = 28
$T97 = -3396						; size = 28
$T98 = -3360						; size = 28
$T99 = -3324						; size = 28
$T100 = -3288						; size = 28
$T101 = -3252						; size = 28
$T102 = -3216						; size = 28
$T103 = -3180						; size = 28
$T104 = -3144						; size = 28
$T105 = -3108						; size = 28
$T106 = -3072						; size = 28
$T107 = -3036						; size = 28
$T108 = -3000						; size = 12
$T109 = -2980						; size = 12
$T110 = -2960						; size = 12
$T111 = -2940						; size = 12
$T112 = -2920						; size = 28
$T113 = -2884						; size = 28
$T114 = -2848						; size = 28
$T115 = -2812						; size = 28
$T116 = -2776						; size = 28
$T117 = -2740						; size = 28
$T118 = -2704						; size = 28
$T119 = -2668						; size = 28
$T120 = -2632						; size = 28
$T121 = -2596						; size = 28
$T122 = -2560						; size = 28
$T123 = -2524						; size = 28
$T124 = -2488						; size = 28
$T125 = -2452						; size = 28
$T126 = -2416						; size = 28
$T127 = -2380						; size = 28
$T128 = -2344						; size = 28
$T129 = -2308						; size = 28
$T130 = -2272						; size = 28
$T131 = -2236						; size = 28
$T132 = -2200						; size = 28
$T133 = -2164						; size = 28
$T134 = -2128						; size = 28
$T135 = -2092						; size = 28
$T136 = -2056						; size = 28
$T137 = -2020						; size = 28
$T138 = -1984						; size = 12
$T139 = -1964						; size = 12
$T140 = -1944						; size = 12
$T141 = -1924						; size = 12
_outc$142 = -368					; size = 12
_fill$143 = -348					; size = 12
_outc$144 = -328					; size = 12
_fill$145 = -308					; size = 12
_outc$146 = -288					; size = 12
_fill$147 = -268					; size = 12
_outc$148 = -248					; size = 12
_fill$149 = -228					; size = 12
_out$ = -208						; size = 176
_id_type$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_figp$ = 8						; size = 16120
_filename$ = 16128					; size = 28
?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; SaveFigurePartToSvg, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 402
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6968				; 00001b38H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-6980]
	mov	ecx, 1742				; 000006ceH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 403
	mov	eax, DWORD PTR _figp$[ebp+12]
	mov	DWORD PTR _id_type$[ebp], eax
; Line 404
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 3
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 4
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 5
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 10		; 0000000aH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 20		; 00000014H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 30		; 0000001eH
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 40		; 00000028H
	je	SHORT $LN10@SaveFigure
	cmp	DWORD PTR _id_type$[ebp], 50		; 00000032H
	je	SHORT $LN10@SaveFigure
	mov	eax, DWORD PTR ?__LINE__Var@?0??SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@
	push	OFFSET ??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@SaveFigure:
; Line 405
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 406
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0CM@CBKGBNFK@?$DM?$DPxml?5version?5?$DN?5?$CC1?40?$CC?5encoding?5@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 407
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0GD@CJBBGBLP@?$DM?$CBDOCTYPE?5svg?5PUBLIC?5?$CC?9?1?1W3C?1?1D@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 408
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0LI@FFEFNLND@?$DMsvg?5version?$DN?$CC1?41?$CC?5id?$DN?$CCLayer_2?$CC@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 409
	cmp	DWORD PTR _figp$[ebp+12], 1
	jne	$LN2@SaveFigure
; Line 410
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T140[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T141[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T141[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T141[ebp+8], edx
	mov	eax, DWORD PTR $T141[ebp]
	mov	DWORD PTR _fill$149[ebp], eax
	mov	ecx, DWORD PTR $T141[ebp+4]
	mov	DWORD PTR _fill$149[ebp+4], ecx
	mov	edx, DWORD PTR $T141[ebp+8]
	mov	DWORD PTR _fill$149[ebp+8], edx
; Line 411
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T138[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T139[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T139[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T139[ebp+8], edx
	mov	eax, DWORD PTR $T139[ebp]
	mov	DWORD PTR _outc$148[ebp], eax
	mov	ecx, DWORD PTR $T139[ebp+4]
	mov	DWORD PTR _outc$148[ebp+4], ecx
	mov	edx, DWORD PTR $T139[ebp+8]
	mov	DWORD PTR _outc$148[ebp+8], edx
; Line 412
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$148[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T137[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv1139[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1139[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$148[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T136[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1388[ebp], eax
	mov	eax, DWORD PTR tv1388[ebp]
	mov	DWORD PTR tv1141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv1141[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$148[ebp]
	push	edx
	lea	eax, DWORD PTR $T135[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1389[ebp], eax
	mov	ecx, DWORD PTR tv1389[ebp]
	mov	DWORD PTR tv1143[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv1143[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T134[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1390[ebp], eax
	mov	edx, DWORD PTR tv1390[ebp]
	mov	DWORD PTR tv1145[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1145[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	ecx, DWORD PTR _fill$149[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T133[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1391[ebp], eax
	mov	eax, DWORD PTR tv1391[ebp]
	mov	DWORD PTR tv1147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv1147[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$149[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T132[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1392[ebp], eax
	mov	ecx, DWORD PTR tv1392[ebp]
	mov	DWORD PTR tv1149[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv1149[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _fill$149[ebp]
	push	eax
	lea	ecx, DWORD PTR $T131[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1393[ebp], eax
	mov	edx, DWORD PTR tv1393[ebp]
	mov	DWORD PTR tv1151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv1151[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	ecx, DWORD PTR _figp$[ebp+20]
	push	ecx
	lea	edx, DWORD PTR $T130[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1394[ebp], eax
	mov	eax, DWORD PTR tv1394[ebp]
	mov	DWORD PTR tv1153[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv1153[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@
	mov	edx, DWORD PTR _figp$[ebp+16]
	push	edx
	lea	eax, DWORD PTR $T129[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1395[ebp], eax
	mov	ecx, DWORD PTR tv1395[ebp]
	mov	DWORD PTR tv1155[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv1155[ebp]
	push	edx
	push	OFFSET ??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@
	lea	eax, DWORD PTR $T128[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1396[ebp], eax
	mov	ecx, DWORD PTR tv1396[ebp]
	mov	DWORD PTR tv1157[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv1157[ebp]
	push	edx
	lea	eax, DWORD PTR $T127[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1397[ebp], eax
	mov	ecx, DWORD PTR tv1397[ebp]
	mov	DWORD PTR tv1159[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv1159[ebp]
	push	edx
	lea	eax, DWORD PTR $T126[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1398[ebp], eax
	mov	ecx, DWORD PTR tv1398[ebp]
	mov	DWORD PTR tv1161[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv1161[ebp]
	push	edx
	lea	eax, DWORD PTR $T125[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1399[ebp], eax
	mov	ecx, DWORD PTR tv1399[ebp]
	mov	DWORD PTR tv1163[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv1163[ebp]
	push	edx
	lea	eax, DWORD PTR $T124[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1400[ebp], eax
	mov	ecx, DWORD PTR tv1400[ebp]
	mov	DWORD PTR tv1165[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv1165[ebp]
	push	edx
	lea	eax, DWORD PTR $T123[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1401[ebp], eax
	mov	ecx, DWORD PTR tv1401[ebp]
	mov	DWORD PTR tv1167[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv1167[ebp]
	push	edx
	lea	eax, DWORD PTR $T122[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1402[ebp], eax
	mov	ecx, DWORD PTR tv1402[ebp]
	mov	DWORD PTR tv1169[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR tv1169[ebp]
	push	edx
	lea	eax, DWORD PTR $T121[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1403[ebp], eax
	mov	ecx, DWORD PTR tv1403[ebp]
	mov	DWORD PTR tv1171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv1171[ebp]
	push	edx
	lea	eax, DWORD PTR $T120[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1404[ebp], eax
	mov	ecx, DWORD PTR tv1404[ebp]
	mov	DWORD PTR tv1173[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR tv1173[ebp]
	push	edx
	lea	eax, DWORD PTR $T119[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1405[ebp], eax
	mov	ecx, DWORD PTR tv1405[ebp]
	mov	DWORD PTR tv1175[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR tv1175[ebp]
	push	edx
	lea	eax, DWORD PTR $T118[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1406[ebp], eax
	mov	ecx, DWORD PTR tv1406[ebp]
	mov	DWORD PTR tv1177[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	edx, DWORD PTR tv1177[ebp]
	push	edx
	lea	eax, DWORD PTR $T117[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1407[ebp], eax
	mov	ecx, DWORD PTR tv1407[ebp]
	mov	DWORD PTR tv1179[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR tv1179[ebp]
	push	edx
	lea	eax, DWORD PTR $T116[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1408[ebp], eax
	mov	ecx, DWORD PTR tv1408[ebp]
	mov	DWORD PTR tv1181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR tv1181[ebp]
	push	edx
	lea	eax, DWORD PTR $T115[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1409[ebp], eax
	mov	ecx, DWORD PTR tv1409[ebp]
	mov	DWORD PTR tv1183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR tv1183[ebp]
	push	edx
	lea	eax, DWORD PTR $T114[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1410[ebp], eax
	mov	ecx, DWORD PTR tv1410[ebp]
	mov	DWORD PTR tv1185[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR tv1185[ebp]
	push	edx
	lea	eax, DWORD PTR $T113[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1411[ebp], eax
	mov	ecx, DWORD PTR tv1411[ebp]
	mov	DWORD PTR tv1187[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	edx, DWORD PTR tv1187[ebp]
	push	edx
	lea	eax, DWORD PTR $T112[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1412[ebp], eax
	mov	ecx, DWORD PTR tv1412[ebp]
	mov	DWORD PTR tv1189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv1189[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T112[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T113[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T114[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T115[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T116[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T117[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T118[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T119[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T120[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T121[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T122[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T123[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T124[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T125[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T126[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T127[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T128[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T129[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T130[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T131[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T132[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T133[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T134[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T135[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T136[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T137[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 413
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 414
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 415
	jmp	$LN3@SaveFigure
$LN2@SaveFigure:
; Line 416
	cmp	DWORD PTR _figp$[ebp+12], 2
	jne	$LN4@SaveFigure
; Line 417
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T110[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T111[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T111[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T111[ebp+8], edx
	mov	eax, DWORD PTR $T111[ebp]
	mov	DWORD PTR _fill$147[ebp], eax
	mov	ecx, DWORD PTR $T111[ebp+4]
	mov	DWORD PTR _fill$147[ebp+4], ecx
	mov	edx, DWORD PTR $T111[ebp+8]
	mov	DWORD PTR _fill$147[ebp+8], edx
; Line 418
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T108[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T109[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T109[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T109[ebp+8], edx
	mov	eax, DWORD PTR $T109[ebp]
	mov	DWORD PTR _outc$146[ebp], eax
	mov	ecx, DWORD PTR $T109[ebp+4]
	mov	DWORD PTR _outc$146[ebp+4], ecx
	mov	edx, DWORD PTR $T109[ebp+8]
	mov	DWORD PTR _outc$146[ebp+8], edx
; Line 419
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$146[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T107[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1413[ebp], eax
	mov	edx, DWORD PTR tv1413[ebp]
	mov	DWORD PTR tv1191[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	eax, DWORD PTR tv1191[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$146[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T106[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1414[ebp], eax
	mov	eax, DWORD PTR tv1414[ebp]
	mov	DWORD PTR tv1193[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv1193[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$146[ebp]
	push	edx
	lea	eax, DWORD PTR $T105[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1415[ebp], eax
	mov	ecx, DWORD PTR tv1415[ebp]
	mov	DWORD PTR tv1195[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	edx, DWORD PTR tv1195[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR $T104[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1416[ebp], eax
	mov	edx, DWORD PTR tv1416[ebp]
	mov	DWORD PTR tv1197[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	eax, DWORD PTR tv1197[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	ecx, DWORD PTR _fill$147[ebp+8]
	push	ecx
	lea	edx, DWORD PTR $T103[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1417[ebp], eax
	mov	eax, DWORD PTR tv1417[ebp]
	mov	DWORD PTR tv1199[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv1199[ebp]
	push	ecx
	mov	edx, DWORD PTR _fill$147[ebp+4]
	push	edx
	lea	eax, DWORD PTR $T102[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1418[ebp], eax
	mov	ecx, DWORD PTR tv1418[ebp]
	mov	DWORD PTR tv1201[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	edx, DWORD PTR tv1201[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _fill$147[ebp]
	push	eax
	lea	ecx, DWORD PTR $T101[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1419[ebp], eax
	mov	edx, DWORD PTR tv1419[ebp]
	mov	DWORD PTR tv1203[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	eax, DWORD PTR tv1203[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	ecx, DWORD PTR _figp$[ebp+16]
	push	ecx
	lea	edx, DWORD PTR $T100[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1420[ebp], eax
	mov	eax, DWORD PTR tv1420[ebp]
	mov	DWORD PTR tv1205[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR tv1205[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@LHKEPLMG@?$CC?5height?$DN?$CC@
	mov	edx, DWORD PTR _figp$[ebp+16]
	push	edx
	lea	eax, DWORD PTR $T99[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1421[ebp], eax
	mov	ecx, DWORD PTR tv1421[ebp]
	mov	DWORD PTR tv1207[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	edx, DWORD PTR tv1207[ebp]
	push	edx
	push	OFFSET ??_C@_0P@FDFOMOLC@?7?$DMrect?5width?$DN?$CC@
	lea	eax, DWORD PTR $T98[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1422[ebp], eax
	mov	ecx, DWORD PTR tv1422[ebp]
	mov	DWORD PTR tv1209[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	edx, DWORD PTR tv1209[ebp]
	push	edx
	lea	eax, DWORD PTR $T97[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1423[ebp], eax
	mov	ecx, DWORD PTR tv1423[ebp]
	mov	DWORD PTR tv1211[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	edx, DWORD PTR tv1211[ebp]
	push	edx
	lea	eax, DWORD PTR $T96[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1424[ebp], eax
	mov	ecx, DWORD PTR tv1424[ebp]
	mov	DWORD PTR tv1213[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	edx, DWORD PTR tv1213[ebp]
	push	edx
	lea	eax, DWORD PTR $T95[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1425[ebp], eax
	mov	ecx, DWORD PTR tv1425[ebp]
	mov	DWORD PTR tv1215[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	edx, DWORD PTR tv1215[ebp]
	push	edx
	lea	eax, DWORD PTR $T94[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1426[ebp], eax
	mov	ecx, DWORD PTR tv1426[ebp]
	mov	DWORD PTR tv1217[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	edx, DWORD PTR tv1217[ebp]
	push	edx
	lea	eax, DWORD PTR $T93[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1427[ebp], eax
	mov	ecx, DWORD PTR tv1427[ebp]
	mov	DWORD PTR tv1219[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	edx, DWORD PTR tv1219[ebp]
	push	edx
	lea	eax, DWORD PTR $T92[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1428[ebp], eax
	mov	ecx, DWORD PTR tv1428[ebp]
	mov	DWORD PTR tv1221[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	edx, DWORD PTR tv1221[ebp]
	push	edx
	lea	eax, DWORD PTR $T91[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1429[ebp], eax
	mov	ecx, DWORD PTR tv1429[ebp]
	mov	DWORD PTR tv1223[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	edx, DWORD PTR tv1223[ebp]
	push	edx
	lea	eax, DWORD PTR $T90[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1430[ebp], eax
	mov	ecx, DWORD PTR tv1430[ebp]
	mov	DWORD PTR tv1225[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	edx, DWORD PTR tv1225[ebp]
	push	edx
	lea	eax, DWORD PTR $T89[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1431[ebp], eax
	mov	ecx, DWORD PTR tv1431[ebp]
	mov	DWORD PTR tv1227[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	edx, DWORD PTR tv1227[ebp]
	push	edx
	lea	eax, DWORD PTR $T88[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1432[ebp], eax
	mov	ecx, DWORD PTR tv1432[ebp]
	mov	DWORD PTR tv1229[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	edx, DWORD PTR tv1229[ebp]
	push	edx
	lea	eax, DWORD PTR $T87[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1433[ebp], eax
	mov	ecx, DWORD PTR tv1433[ebp]
	mov	DWORD PTR tv1231[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	edx, DWORD PTR tv1231[ebp]
	push	edx
	lea	eax, DWORD PTR $T86[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1434[ebp], eax
	mov	ecx, DWORD PTR tv1434[ebp]
	mov	DWORD PTR tv1233[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	edx, DWORD PTR tv1233[ebp]
	push	edx
	lea	eax, DWORD PTR $T85[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1435[ebp], eax
	mov	ecx, DWORD PTR tv1435[ebp]
	mov	DWORD PTR tv1235[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	edx, DWORD PTR tv1235[ebp]
	push	edx
	lea	eax, DWORD PTR $T84[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1436[ebp], eax
	mov	ecx, DWORD PTR tv1436[ebp]
	mov	DWORD PTR tv1237[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	mov	edx, DWORD PTR tv1237[ebp]
	push	edx
	lea	eax, DWORD PTR $T83[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1437[ebp], eax
	mov	ecx, DWORD PTR tv1437[ebp]
	mov	DWORD PTR tv1239[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	edx, DWORD PTR tv1239[ebp]
	push	edx
	lea	eax, DWORD PTR $T82[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1438[ebp], eax
	mov	ecx, DWORD PTR tv1438[ebp]
	mov	DWORD PTR tv1241[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	edx, DWORD PTR tv1241[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	lea	ecx, DWORD PTR $T82[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR $T83[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	lea	ecx, DWORD PTR $T84[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T85[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T86[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	lea	ecx, DWORD PTR $T87[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T88[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T89[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T90[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	lea	ecx, DWORD PTR $T91[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T92[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T93[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T94[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T95[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T96[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T97[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T98[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T99[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T100[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T101[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T102[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T103[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T104[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T105[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR $T106[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T107[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 420
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 421
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 422
	jmp	$LN3@SaveFigure
$LN4@SaveFigure:
; Line 423
	cmp	DWORD PTR _figp$[ebp+12], 3
	jne	$LN6@SaveFigure
; Line 424
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T80[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T81[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T81[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T81[ebp+8], edx
	mov	eax, DWORD PTR $T81[ebp]
	mov	DWORD PTR _fill$145[ebp], eax
	mov	ecx, DWORD PTR $T81[ebp+4]
	mov	DWORD PTR _fill$145[ebp+4], ecx
	mov	edx, DWORD PTR $T81[ebp+8]
	mov	DWORD PTR _fill$145[ebp+8], edx
; Line 425
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T78[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T79[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T79[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T79[ebp+8], edx
	mov	eax, DWORD PTR $T79[ebp]
	mov	DWORD PTR _outc$144[ebp], eax
	mov	ecx, DWORD PTR $T79[ebp+4]
	mov	DWORD PTR _outc$144[ebp+4], ecx
	mov	edx, DWORD PTR $T79[ebp+8]
	mov	DWORD PTR _outc$144[ebp+8], edx
; Line 426
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$144[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T77[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1439[ebp], eax
	mov	edx, DWORD PTR tv1439[ebp]
	mov	DWORD PTR tv1243[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	eax, DWORD PTR tv1243[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$144[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T76[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1440[ebp], eax
	mov	eax, DWORD PTR tv1440[ebp]
	mov	DWORD PTR tv1245[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	ecx, DWORD PTR tv1245[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$144[ebp]
	push	edx
	lea	eax, DWORD PTR $T75[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1441[ebp], eax
	mov	ecx, DWORD PTR tv1441[ebp]
	mov	DWORD PTR tv1247[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	edx, DWORD PTR tv1247[ebp]
	push	edx
	push	OFFSET ??_C@_0BP@NDPCLPIP@?$CJ?$DL?5stroke?9width?31?$DL?5stroke?3rgb?$CI@
	mov	eax, DWORD PTR _fill$145[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T74[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1442[ebp], eax
	mov	edx, DWORD PTR tv1442[ebp]
	mov	DWORD PTR tv1249[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	eax, DWORD PTR tv1249[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _fill$145[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T73[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1443[ebp], eax
	mov	eax, DWORD PTR tv1443[ebp]
	mov	DWORD PTR tv1251[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR tv1251[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _fill$145[ebp]
	push	edx
	lea	eax, DWORD PTR $T72[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1444[ebp], eax
	mov	ecx, DWORD PTR tv1444[ebp]
	mov	DWORD PTR tv1253[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	mov	edx, DWORD PTR tv1253[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T71[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1445[ebp], eax
	mov	edx, DWORD PTR tv1445[ebp]
	mov	DWORD PTR tv1255[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	eax, DWORD PTR tv1255[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T70[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1446[ebp], eax
	mov	eax, DWORD PTR tv1446[ebp]
	mov	DWORD PTR tv1257[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	ecx, DWORD PTR tv1257[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T69[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1447[ebp], eax
	mov	ecx, DWORD PTR tv1447[ebp]
	mov	DWORD PTR tv1259[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	edx, DWORD PTR tv1259[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T68[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1448[ebp], eax
	mov	edx, DWORD PTR tv1448[ebp]
	mov	DWORD PTR tv1261[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	eax, DWORD PTR tv1261[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T67[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1449[ebp], eax
	mov	eax, DWORD PTR tv1449[ebp]
	mov	DWORD PTR tv1263[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	ecx, DWORD PTR tv1263[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T66[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1450[ebp], eax
	mov	ecx, DWORD PTR tv1450[ebp]
	mov	DWORD PTR tv1265[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	mov	edx, DWORD PTR tv1265[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@
	lea	eax, DWORD PTR $T65[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1451[ebp], eax
	mov	ecx, DWORD PTR tv1451[ebp]
	mov	DWORD PTR tv1267[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR tv1267[ebp]
	push	edx
	lea	eax, DWORD PTR $T64[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1452[ebp], eax
	mov	ecx, DWORD PTR tv1452[ebp]
	mov	DWORD PTR tv1269[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	mov	edx, DWORD PTR tv1269[ebp]
	push	edx
	lea	eax, DWORD PTR $T63[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1453[ebp], eax
	mov	ecx, DWORD PTR tv1453[ebp]
	mov	DWORD PTR tv1271[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	edx, DWORD PTR tv1271[ebp]
	push	edx
	lea	eax, DWORD PTR $T62[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1454[ebp], eax
	mov	ecx, DWORD PTR tv1454[ebp]
	mov	DWORD PTR tv1273[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	mov	edx, DWORD PTR tv1273[ebp]
	push	edx
	lea	eax, DWORD PTR $T61[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1455[ebp], eax
	mov	ecx, DWORD PTR tv1455[ebp]
	mov	DWORD PTR tv1275[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	edx, DWORD PTR tv1275[ebp]
	push	edx
	lea	eax, DWORD PTR $T60[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1456[ebp], eax
	mov	ecx, DWORD PTR tv1456[ebp]
	mov	DWORD PTR tv1277[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	edx, DWORD PTR tv1277[ebp]
	push	edx
	lea	eax, DWORD PTR $T59[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1457[ebp], eax
	mov	ecx, DWORD PTR tv1457[ebp]
	mov	DWORD PTR tv1279[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	edx, DWORD PTR tv1279[ebp]
	push	edx
	lea	eax, DWORD PTR $T58[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1458[ebp], eax
	mov	ecx, DWORD PTR tv1458[ebp]
	mov	DWORD PTR tv1281[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	mov	edx, DWORD PTR tv1281[ebp]
	push	edx
	lea	eax, DWORD PTR $T57[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1459[ebp], eax
	mov	ecx, DWORD PTR tv1459[ebp]
	mov	DWORD PTR tv1283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	edx, DWORD PTR tv1283[ebp]
	push	edx
	lea	eax, DWORD PTR $T56[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1460[ebp], eax
	mov	ecx, DWORD PTR tv1460[ebp]
	mov	DWORD PTR tv1285[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	edx, DWORD PTR tv1285[ebp]
	push	edx
	lea	eax, DWORD PTR $T55[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1461[ebp], eax
	mov	ecx, DWORD PTR tv1461[ebp]
	mov	DWORD PTR tv1287[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	edx, DWORD PTR tv1287[ebp]
	push	edx
	lea	eax, DWORD PTR $T54[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1462[ebp], eax
	mov	ecx, DWORD PTR tv1462[ebp]
	mov	DWORD PTR tv1289[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	mov	edx, DWORD PTR tv1289[ebp]
	push	edx
	lea	eax, DWORD PTR $T53[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1463[ebp], eax
	mov	ecx, DWORD PTR tv1463[ebp]
	mov	DWORD PTR tv1291[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	edx, DWORD PTR tv1291[ebp]
	push	edx
	lea	eax, DWORD PTR $T52[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1464[ebp], eax
	mov	ecx, DWORD PTR tv1464[ebp]
	mov	DWORD PTR tv1293[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	mov	edx, DWORD PTR tv1293[ebp]
	push	edx
	lea	eax, DWORD PTR $T51[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1465[ebp], eax
	mov	ecx, DWORD PTR tv1465[ebp]
	mov	DWORD PTR tv1295[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	edx, DWORD PTR tv1295[ebp]
	push	edx
	lea	eax, DWORD PTR $T50[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1466[ebp], eax
	mov	ecx, DWORD PTR tv1466[ebp]
	mov	DWORD PTR tv1297[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	edx, DWORD PTR tv1297[ebp]
	push	edx
	lea	eax, DWORD PTR $T49[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1467[ebp], eax
	mov	ecx, DWORD PTR tv1467[ebp]
	mov	DWORD PTR tv1299[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	edx, DWORD PTR tv1299[ebp]
	push	edx
	lea	eax, DWORD PTR $T48[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1468[ebp], eax
	mov	ecx, DWORD PTR tv1468[ebp]
	mov	DWORD PTR tv1301[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	mov	edx, DWORD PTR tv1301[ebp]
	push	edx
	lea	eax, DWORD PTR $T47[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1469[ebp], eax
	mov	ecx, DWORD PTR tv1469[ebp]
	mov	DWORD PTR tv1303[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR tv1303[ebp]
	push	edx
	lea	eax, DWORD PTR $T46[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1470[ebp], eax
	mov	ecx, DWORD PTR tv1470[ebp]
	mov	DWORD PTR tv1305[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	mov	edx, DWORD PTR tv1305[ebp]
	push	edx
	lea	eax, DWORD PTR $T45[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1471[ebp], eax
	mov	ecx, DWORD PTR tv1471[ebp]
	mov	DWORD PTR tv1307[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	edx, DWORD PTR tv1307[ebp]
	push	edx
	lea	eax, DWORD PTR $T44[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1472[ebp], eax
	mov	ecx, DWORD PTR tv1472[ebp]
	mov	DWORD PTR tv1309[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	mov	edx, DWORD PTR tv1309[ebp]
	push	edx
	lea	eax, DWORD PTR $T43[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1473[ebp], eax
	mov	ecx, DWORD PTR tv1473[ebp]
	mov	DWORD PTR tv1311[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	edx, DWORD PTR tv1311[ebp]
	push	edx
	lea	eax, DWORD PTR $T42[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1474[ebp], eax
	mov	ecx, DWORD PTR tv1474[ebp]
	mov	DWORD PTR tv1313[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	mov	edx, DWORD PTR tv1313[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T42[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T43[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	lea	ecx, DWORD PTR $T44[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T45[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T46[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T47[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	lea	ecx, DWORD PTR $T48[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	lea	ecx, DWORD PTR $T49[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	lea	ecx, DWORD PTR $T50[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	lea	ecx, DWORD PTR $T51[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	lea	ecx, DWORD PTR $T52[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	lea	ecx, DWORD PTR $T53[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	lea	ecx, DWORD PTR $T54[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T55[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T56[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T57[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	lea	ecx, DWORD PTR $T58[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	lea	ecx, DWORD PTR $T59[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	lea	ecx, DWORD PTR $T60[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	lea	ecx, DWORD PTR $T61[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	lea	ecx, DWORD PTR $T62[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR $T63[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR $T64[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR $T65[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	lea	ecx, DWORD PTR $T66[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T67[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T68[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T69[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T70[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T71[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T72[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T73[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T74[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T75[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T76[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T77[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 427
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 428
	jmp	$LN3@SaveFigure
$LN6@SaveFigure:
; Line 429
	cmp	DWORD PTR _figp$[ebp+12], 4
	jne	$LN3@SaveFigure
; Line 430
	mov	eax, DWORD PTR _figp$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR $T40[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T41[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T41[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T41[ebp+8], edx
	mov	eax, DWORD PTR $T41[ebp]
	mov	DWORD PTR _fill$143[ebp], eax
	mov	ecx, DWORD PTR $T41[ebp+4]
	mov	DWORD PTR _fill$143[ebp+4], ecx
	mov	edx, DWORD PTR $T41[ebp+8]
	mov	DWORD PTR _fill$143[ebp+8], edx
; Line 431
	mov	eax, DWORD PTR _figp$[ebp+28]
	push	eax
	lea	ecx, DWORD PTR $T38[ebp]
	push	ecx
	call	?GetRGBfromColorref@@YA?AUrgb@@K@Z	; GetRGBfromColorref
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T39[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T39[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T39[ebp+8], edx
	mov	eax, DWORD PTR $T39[ebp]
	mov	DWORD PTR _outc$142[ebp], eax
	mov	ecx, DWORD PTR $T39[ebp+4]
	mov	DWORD PTR _outc$142[ebp+4], ecx
	mov	edx, DWORD PTR $T39[ebp+8]
	mov	DWORD PTR _outc$142[ebp+8], edx
; Line 432
	push	OFFSET ??_C@_06JPFIEIIP@?$CJ?$CC?5?1?$DO?6@
	mov	eax, DWORD PTR _outc$142[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1475[ebp], eax
	mov	edx, DWORD PTR tv1475[ebp]
	mov	DWORD PTR tv1315[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	eax, DWORD PTR tv1315[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _outc$142[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T36[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1476[ebp], eax
	mov	eax, DWORD PTR tv1476[ebp]
	mov	DWORD PTR tv1317[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	mov	ecx, DWORD PTR tv1317[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _outc$142[ebp]
	push	edx
	lea	eax, DWORD PTR $T35[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1477[ebp], eax
	mov	ecx, DWORD PTR tv1477[ebp]
	mov	DWORD PTR tv1319[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	edx, DWORD PTR tv1319[ebp]
	push	edx
	push	OFFSET ??_C@_0BP@HLHEAOBO@?$CJ?$DL?5stroke?9width?33?$DL?5stroke?3rgb?$CI@
	mov	eax, DWORD PTR _fill$143[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1478[ebp], eax
	mov	edx, DWORD PTR tv1478[ebp]
	mov	DWORD PTR tv1321[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	eax, DWORD PTR tv1321[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _fill$143[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T33[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1479[ebp], eax
	mov	eax, DWORD PTR tv1479[ebp]
	mov	DWORD PTR tv1323[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	ecx, DWORD PTR tv1323[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _fill$143[ebp]
	push	edx
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1480[ebp], eax
	mov	ecx, DWORD PTR tv1480[ebp]
	mov	DWORD PTR tv1325[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	edx, DWORD PTR tv1325[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@PGDDBGMN@?$CC?5style?$DN?$CCfill?3rgb?$CI@
	mov	eax, DWORD PTR _figp$[ebp+60]
	push	eax
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1481[ebp], eax
	mov	edx, DWORD PTR tv1481[ebp]
	mov	DWORD PTR tv1327[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	eax, DWORD PTR tv1327[ebp]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	ecx, DWORD PTR _figp$[ebp+56]
	push	ecx
	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1482[ebp], eax
	mov	eax, DWORD PTR tv1482[ebp]
	mov	DWORD PTR tv1329[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	mov	ecx, DWORD PTR tv1329[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	edx, DWORD PTR _figp$[ebp+52]
	push	edx
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1483[ebp], eax
	mov	ecx, DWORD PTR tv1483[ebp]
	mov	DWORD PTR tv1331[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	edx, DWORD PTR tv1331[ebp]
	push	edx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	eax, DWORD PTR _figp$[ebp+48]
	push	eax
	lea	ecx, DWORD PTR $T28[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1484[ebp], eax
	mov	edx, DWORD PTR tv1484[ebp]
	mov	DWORD PTR tv1333[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	mov	eax, DWORD PTR tv1333[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _figp$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1485[ebp], eax
	mov	eax, DWORD PTR tv1485[ebp]
	mov	DWORD PTR tv1335[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	ecx, DWORD PTR tv1335[ebp]
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0@
	mov	edx, DWORD PTR _figp$[ebp+40]
	push	edx
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1486[ebp], eax
	mov	ecx, DWORD PTR tv1486[ebp]
	mov	DWORD PTR tv1337[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	mov	edx, DWORD PTR tv1337[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@ELJNEMHC@?7?$DMpolygon?5points?$DN?$CC@
	lea	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1487[ebp], eax
	mov	ecx, DWORD PTR tv1487[ebp]
	mov	DWORD PTR tv1339[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	edx, DWORD PTR tv1339[ebp]
	push	edx
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1488[ebp], eax
	mov	ecx, DWORD PTR tv1488[ebp]
	mov	DWORD PTR tv1341[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	edx, DWORD PTR tv1341[ebp]
	push	edx
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1489[ebp], eax
	mov	ecx, DWORD PTR tv1489[ebp]
	mov	DWORD PTR tv1343[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	edx, DWORD PTR tv1343[ebp]
	push	edx
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1490[ebp], eax
	mov	ecx, DWORD PTR tv1490[ebp]
	mov	DWORD PTR tv1345[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	mov	edx, DWORD PTR tv1345[ebp]
	push	edx
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1491[ebp], eax
	mov	ecx, DWORD PTR tv1491[ebp]
	mov	DWORD PTR tv1347[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	edx, DWORD PTR tv1347[ebp]
	push	edx
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1492[ebp], eax
	mov	ecx, DWORD PTR tv1492[ebp]
	mov	DWORD PTR tv1349[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	edx, DWORD PTR tv1349[ebp]
	push	edx
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1493[ebp], eax
	mov	ecx, DWORD PTR tv1493[ebp]
	mov	DWORD PTR tv1351[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	edx, DWORD PTR tv1351[ebp]
	push	edx
	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1494[ebp], eax
	mov	ecx, DWORD PTR tv1494[ebp]
	mov	DWORD PTR tv1353[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	mov	edx, DWORD PTR tv1353[ebp]
	push	edx
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1495[ebp], eax
	mov	ecx, DWORD PTR tv1495[ebp]
	mov	DWORD PTR tv1355[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	edx, DWORD PTR tv1355[ebp]
	push	edx
	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1496[ebp], eax
	mov	ecx, DWORD PTR tv1496[ebp]
	mov	DWORD PTR tv1357[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	mov	edx, DWORD PTR tv1357[ebp]
	push	edx
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1497[ebp], eax
	mov	ecx, DWORD PTR tv1497[ebp]
	mov	DWORD PTR tv1359[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	edx, DWORD PTR tv1359[ebp]
	push	edx
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1498[ebp], eax
	mov	ecx, DWORD PTR tv1498[ebp]
	mov	DWORD PTR tv1361[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	edx, DWORD PTR tv1361[ebp]
	push	edx
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1499[ebp], eax
	mov	ecx, DWORD PTR tv1499[ebp]
	mov	DWORD PTR tv1363[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	edx, DWORD PTR tv1363[ebp]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1500[ebp], eax
	mov	ecx, DWORD PTR tv1500[ebp]
	mov	DWORD PTR tv1365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	edx, DWORD PTR tv1365[ebp]
	push	edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1501[ebp], eax
	mov	ecx, DWORD PTR tv1501[ebp]
	mov	DWORD PTR tv1367[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	edx, DWORD PTR tv1367[ebp]
	push	edx
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1502[ebp], eax
	mov	ecx, DWORD PTR tv1502[ebp]
	mov	DWORD PTR tv1369[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	mov	edx, DWORD PTR tv1369[ebp]
	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1503[ebp], eax
	mov	ecx, DWORD PTR tv1503[ebp]
	mov	DWORD PTR tv1371[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	edx, DWORD PTR tv1371[ebp]
	push	edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1504[ebp], eax
	mov	ecx, DWORD PTR tv1504[ebp]
	mov	DWORD PTR tv1373[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	edx, DWORD PTR tv1373[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1505[ebp], eax
	mov	ecx, DWORD PTR tv1505[ebp]
	mov	DWORD PTR tv1375[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	mov	edx, DWORD PTR tv1375[ebp]
	push	edx
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1506[ebp], eax
	mov	ecx, DWORD PTR tv1506[ebp]
	mov	DWORD PTR tv1377[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR tv1377[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1507[ebp], eax
	mov	ecx, DWORD PTR tv1507[ebp]
	mov	DWORD PTR tv1379[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	mov	edx, DWORD PTR tv1379[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1508[ebp], eax
	mov	ecx, DWORD PTR tv1508[ebp]
	mov	DWORD PTR tv1381[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	mov	edx, DWORD PTR tv1381[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1509[ebp], eax
	mov	ecx, DWORD PTR tv1509[ebp]
	mov	DWORD PTR tv1383[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	mov	edx, DWORD PTR tv1383[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1510[ebp], eax
	mov	ecx, DWORD PTR tv1510[ebp]
	mov	DWORD PTR tv1385[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	mov	edx, DWORD PTR tv1385[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 433
	push	OFFSET ??_C@_06HNBPLMD@?$DM?1svg?$DO@
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN3@SaveFigure:
; Line 435
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 436
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _figp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN149@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 6980				; 00001b44H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN149@SaveFigure:
	DD	9
	DD	$LN148@SaveFigure
$LN148@SaveFigure:
	DD	-208					; ffffff30H
	DD	176					; 000000b0H
	DD	$LN138@SaveFigure
	DD	-228					; ffffff1cH
	DD	12					; 0000000cH
	DD	$LN139@SaveFigure
	DD	-248					; ffffff08H
	DD	12					; 0000000cH
	DD	$LN140@SaveFigure
	DD	-268					; fffffef4H
	DD	12					; 0000000cH
	DD	$LN141@SaveFigure
	DD	-288					; fffffee0H
	DD	12					; 0000000cH
	DD	$LN142@SaveFigure
	DD	-308					; fffffeccH
	DD	12					; 0000000cH
	DD	$LN143@SaveFigure
	DD	-328					; fffffeb8H
	DD	12					; 0000000cH
	DD	$LN144@SaveFigure
	DD	-348					; fffffea4H
	DD	12					; 0000000cH
	DD	$LN145@SaveFigure
	DD	-368					; fffffe90H
	DD	12					; 0000000cH
	DD	$LN146@SaveFigure
$LN146@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN145@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN144@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN143@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN142@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN141@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN140@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN139@SaveFigure:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN138@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _figp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T137[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T136[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T135[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T134[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T133[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T132[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T131[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T130[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T129[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T128[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T127[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T126[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T125[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T124[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T123[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T122[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T121[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T120[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T119[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T118[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T117[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24:
	lea	ecx, DWORD PTR $T116[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T115[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26:
	lea	ecx, DWORD PTR $T114[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T113[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28:
	lea	ecx, DWORD PTR $T112[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T107[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$30:
	lea	ecx, DWORD PTR $T106[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31:
	lea	ecx, DWORD PTR $T105[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T104[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33:
	lea	ecx, DWORD PTR $T103[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T102[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35:
	lea	ecx, DWORD PTR $T101[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T100[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T99[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38:
	lea	ecx, DWORD PTR $T98[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39:
	lea	ecx, DWORD PTR $T97[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T96[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T95[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T94[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$43:
	lea	ecx, DWORD PTR $T93[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$44:
	lea	ecx, DWORD PTR $T92[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$45:
	lea	ecx, DWORD PTR $T91[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$46:
	lea	ecx, DWORD PTR $T90[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$47:
	lea	ecx, DWORD PTR $T89[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$48:
	lea	ecx, DWORD PTR $T88[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$49:
	lea	ecx, DWORD PTR $T87[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$50:
	lea	ecx, DWORD PTR $T86[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$51:
	lea	ecx, DWORD PTR $T85[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$52:
	lea	ecx, DWORD PTR $T84[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$53:
	lea	ecx, DWORD PTR $T83[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$54:
	lea	ecx, DWORD PTR $T82[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$55:
	lea	ecx, DWORD PTR $T77[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$56:
	lea	ecx, DWORD PTR $T76[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$57:
	lea	ecx, DWORD PTR $T75[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$58:
	lea	ecx, DWORD PTR $T74[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$59:
	lea	ecx, DWORD PTR $T73[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$60:
	lea	ecx, DWORD PTR $T72[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$61:
	lea	ecx, DWORD PTR $T71[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$62:
	lea	ecx, DWORD PTR $T70[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$63:
	lea	ecx, DWORD PTR $T69[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$64:
	lea	ecx, DWORD PTR $T68[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$65:
	lea	ecx, DWORD PTR $T67[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$66:
	lea	ecx, DWORD PTR $T66[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$67:
	lea	ecx, DWORD PTR $T65[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$68:
	lea	ecx, DWORD PTR $T64[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$69:
	lea	ecx, DWORD PTR $T63[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$70:
	lea	ecx, DWORD PTR $T62[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$71:
	lea	ecx, DWORD PTR $T61[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$72:
	lea	ecx, DWORD PTR $T60[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$73:
	lea	ecx, DWORD PTR $T59[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$74:
	lea	ecx, DWORD PTR $T58[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$75:
	lea	ecx, DWORD PTR $T57[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$76:
	lea	ecx, DWORD PTR $T56[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$77:
	lea	ecx, DWORD PTR $T55[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$78:
	lea	ecx, DWORD PTR $T54[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$79:
	lea	ecx, DWORD PTR $T53[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$80:
	lea	ecx, DWORD PTR $T52[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$81:
	lea	ecx, DWORD PTR $T51[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$82:
	lea	ecx, DWORD PTR $T50[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$83:
	lea	ecx, DWORD PTR $T49[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$84:
	lea	ecx, DWORD PTR $T48[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$85:
	lea	ecx, DWORD PTR $T47[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$86:
	lea	ecx, DWORD PTR $T46[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$87:
	lea	ecx, DWORD PTR $T45[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$88:
	lea	ecx, DWORD PTR $T44[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$89:
	lea	ecx, DWORD PTR $T43[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$90:
	lea	ecx, DWORD PTR $T42[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$91:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$92:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$93:
	lea	ecx, DWORD PTR $T35[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$94:
	lea	ecx, DWORD PTR $T34[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$95:
	lea	ecx, DWORD PTR $T33[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$96:
	lea	ecx, DWORD PTR $T32[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$97:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$98:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$99:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$100:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$101:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$102:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$103:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$104:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$105:
	lea	ecx, DWORD PTR $T23[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$106:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$107:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$108:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$109:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$110:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$111:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$112:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$113:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$114:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$115:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$116:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$117:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$118:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$119:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$120:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$121:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$122:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$123:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$124:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$125:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$126:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6984]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigurePartToSvg@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; SaveFigurePartToSvg
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z
_TEXT	SEGMENT
tv93 = -348						; size = 4
tv128 = -344						; size = 4
tv88 = -344						; size = 4
$T2 = -336						; size = 4
$T3 = -324						; size = 28
$T4 = -288						; size = 28
_i$5 = -60						; size = 4
_tmp$ = -48						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_parts$ = 12						; size = 4
_count$ = 16						; size = 4
?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z PROC ; CreateFigureFromFigureParts, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 391
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 392
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv88[ebp], eax
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv93[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv93[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 393
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN4@CreateFigu
$LN2@CreateFigu:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN4@CreateFigu:
	mov	eax, DWORD PTR _i$5[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN3@CreateFigu
; Line 394
	imul	eax, DWORD PTR _i$5[ebp], 16120
	mov	ecx, DWORD PTR _parts$[ebp]
	lea	edx, DWORD PTR [ecx+eax+16092]
	push	edx
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv128[ebp], eax
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 395
	jmp	SHORT $LN2@CreateFigu
$LN3@CreateFigu:
; Line 396
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 397
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@CreateFigu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@CreateFigu:
	DD	1
	DD	$LN13@CreateFigu
$LN13@CreateFigu:
	DD	-48					; ffffffd0H
	DD	28					; 0000001cH
	DD	$LN11@CreateFigu
$LN11@CreateFigu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z$0:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z$1:
	lea	ecx, DWORD PTR _tmp$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateFigureFromFigureParts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAUFigurePart@@H@Z ENDP ; CreateFigureFromFigureParts
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 84
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Istr$[ebp]
	push	edx
	call	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
	add	esp, 4
	push	eax
	call	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 112				; 00000070H
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	184					; 000000b8H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 112				; 00000070H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 112				; 00000070H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 944
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-112]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-112], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-112]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-112]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-116], edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 806
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 808
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ifst
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ifst:
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 810
	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Filename$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN1@basic_ifst
; Line 811
	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@basic_ifst:
; Line 813
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@basic_ifst
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@basic_ifst:
	ret	0
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
_TEXT	SEGMENT
tv146 = -548						; size = 4
$T2 = -540						; size = 4
$T3 = -528						; size = 28
_n$4 = -300						; size = 28
_i$5 = -264						; size = 4
_tmp$ = -252						; size = 4
_in$ = -240						; size = 184
_fig$ = -48						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_filename$ = 12						; size = 28
?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z PROC ; GetFigureFromFile, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 378
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-548]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 379
	lea	ecx, DWORD PTR _fig$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 380
	push	184					; 000000b8H
	lea	ecx, DWORD PTR _in$[ebp]
	call	?__autoclassinit2@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	lea	ecx, DWORD PTR _in$[ebp]
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 382
	mov	esi, esp
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _in$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 383
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN4@GetFigureF
$LN2@GetFigureF:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN4@GetFigureF:
	mov	eax, DWORD PTR _i$5[ebp]
	cmp	eax, DWORD PTR _tmp$[ebp]
	jge	SHORT $LN3@GetFigureF
; Line 384
	lea	ecx, DWORD PTR _n$4[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 385
	lea	eax, DWORD PTR _n$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _in$[ebp]
	push	ecx
	call	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
; Line 386
	lea	eax, DWORD PTR _n$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _fig$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	push	eax
	lea	ecx, DWORD PTR _fig$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 387
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _n$4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN2@GetFigureF
$LN3@GetFigureF:
; Line 388
	lea	eax, DWORD PTR _fig$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _in$[ebp]
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fig$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 389
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@GetFigureF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 548				; 00000224H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@GetFigureF:
	DD	4
	DD	$LN18@GetFigureF
$LN18@GetFigureF:
	DD	-48					; ffffffd0H
	DD	28					; 0000001cH
	DD	$LN13@GetFigureF
	DD	-240					; ffffff10H
	DD	184					; 000000b8H
	DD	$LN14@GetFigureF
	DD	-252					; ffffff04H
	DD	4
	DD	$LN15@GetFigureF
	DD	-300					; fffffed4H
	DD	28					; 0000001cH
	DD	$LN16@GetFigureF
$LN16@GetFigureF:
	DB	110					; 0000006eH
	DB	0
$LN15@GetFigureF:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN14@GetFigureF:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN13@GetFigureF:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$1:
	lea	ecx, DWORD PTR _fig$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$2:
	lea	ecx, DWORD PTR _in$[ebp]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$3:
	lea	ecx, DWORD PTR _n$4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-552]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFigureFromFile@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z ENDP ; GetFigureFromFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
_out$ = -196						; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fig$ = 8						; size = 28
_filename$ = 36						; size = 28
?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; SaveFigure, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 372
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 373
	lea	eax, DWORD PTR _fig$[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
; Line 374
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 375
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fig$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@SaveFigure:
	DD	1
	DD	$LN8@SaveFigure
$LN8@SaveFigure:
	DD	-196					; ffffff3cH
	DD	176					; 000000b0H
	DD	$LN6@SaveFigure
$LN6@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
	lea	ecx, DWORD PTR _fig$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigure@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; SaveFigure
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
_TEXT	SEGMENT
tv135 = -356						; size = 8
tv343 = -348						; size = 8
tv288 = -344						; size = 8
tv291 = -342						; size = 2
tv286 = -342						; size = 2
tv329 = -340						; size = 8
tv290 = -340						; size = 4
tv285 = -340						; size = 4
tv287 = -336						; size = 4
tv137 = -336						; size = 4
tv289 = -334						; size = 2
tv284 = -334						; size = 2
$T2 = -328						; size = 4
$T3 = -314						; size = 2
$T4 = -302						; size = 2
$T5 = -290						; size = 2
$T6 = -278						; size = 2
__Ok$ = -76						; size = 8
__Pad$ = -60						; size = 8
__Count$ = -44						; size = 8
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 816
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 819
	mov	DWORD PTR __State$[ebp], 0
; Line 820
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$_WChar_traits@_W@std@@SAIPB_W@Z ; std::_WChar_traits<wchar_t>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 821
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv329[ebp], eax
	mov	DWORD PTR tv329[ebp+4], edx
	cmp	DWORD PTR tv329[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv329[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv343[ebp], eax
	mov	DWORD PTR tv343[ebp+4], edx
	mov	eax, DWORD PTR tv343[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv343[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 822
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 824
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 825
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 826
	jmp	$LN9@operator
$LN8@operator:
; Line 827
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 828
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 829
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 830
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv284[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv284[ebp]
	push	eax
	mov	ecx, DWORD PTR tv285[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv286[ebp], ax
	mov	cx, WORD PTR tv286[ebp]
	mov	WORD PTR $T6[ebp], cx
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T5[ebp], ax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@operator
; Line 831
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 832
	jmp	SHORT $LN11@operator
$LN12@operator:
; Line 834
	jmp	$LN2@operator
$LN11@operator:
; Line 837
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN13@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv287[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv288[ebp], eax
	mov	DWORD PTR tv288[ebp+4], edx
	mov	eax, DWORD PTR tv288[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv288[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN13@operator
$LN27@operator:
; Line 838
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:
; Line 841
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN14@operator
; Line 842
	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN28@operator:
; Line 843
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv289[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv289[ebp]
	push	eax
	mov	ecx, DWORD PTR tv290[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv291[ebp], ax
	mov	cx, WORD PTR tv291[ebp]
	mov	WORD PTR $T4[ebp], cx
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T3[ebp], ax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@operator
; Line 844
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 845
	jmp	SHORT $LN14@operator
$LN15@operator:
; Line 847
	jmp	$LN5@operator
$LN14@operator:
; Line 850
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0:
; Line 851
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:
; Line 854
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 855
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 856
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAE@XZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::~basic_ofstream<wchar_t,std::char_traits<wchar_t> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	call	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	176					; 000000b0H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Set_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Set_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Set_back, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 779
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 780
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	je	SHORT $LN2@Set_back
; Line 781
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 782
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
$LN2@Set_back:
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 62					; 0000003eH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Set_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 773
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 774
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	jne	SHORT $LN1@Reset_back
; Line 775
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Reset_back:
; Line 777
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Initcvt@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXABV?$codecvt@_WDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXABV?$codecvt@_WDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Initcvt, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 756
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 757
	mov	esi, esp
	mov	ecx, DWORD PTR __Newcvt$[ebp]
	call	DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Initcvt
; Line 758
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 759
	jmp	SHORT $LN1@Initcvt
$LN2@Initcvt:
; Line 760
	mov	eax, DWORD PTR __Newcvt$[ebp]
	push	eax
	call	??$addressof@$$CBV?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@_WDU_Mbstatet@@@0@ABV10@@Z ; std::addressof<std::codecvt<wchar_t,char,_Mbstatet> const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 761
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Initcvt:
; Line 763
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Initcvt@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXABV?$codecvt@_WDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
tv140 = -312						; size = 4
tv94 = -312						; size = 4
$T1 = -302						; size = 2
$T2 = -290						; size = 2
__Count$3 = -88						; size = 4
__Dest$ = -76						; size = 4
__Str$ = -64						; size = 32
__Codecvt_temp_buf$ = -24				; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 720
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 721
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN5@Endwrite
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+62]
	test	ecx, ecx
	jne	SHORT $LN4@Endwrite
$LN5@Endwrite:
; Line 722
	mov	al, 1
	jmp	$LN1@Endwrite
$LN4@Endwrite:
; Line 726
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR $T2[ebp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@Endwrite
; Line 727
	xor	al, al
	jmp	$LN1@Endwrite
$LN6@Endwrite:
; Line 730
	mov	DWORD PTR __Codecvt_temp_buf$[ebp], 32	; 00000020H
; Line 733
	mov	esi, esp
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp+32]
	push	ecx
	lea	edx, DWORD PTR __Str$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	DWORD PTR __imp_?unshift@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	cmp	DWORD PTR tv94[ebp], 0
	je	SHORT $LN7@Endwrite
	cmp	DWORD PTR tv94[ebp], 1
	je	SHORT $LN8@Endwrite
	cmp	DWORD PTR tv94[ebp], 3
	je	SHORT $LN10@Endwrite
	jmp	SHORT $LN11@Endwrite
$LN7@Endwrite:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+62], 0
$LN8@Endwrite:
; Line 739
	mov	eax, DWORD PTR __Dest$[ebp]
	lea	ecx, DWORD PTR __Str$[ebp]
	sub	eax, ecx
	mov	DWORD PTR __Count$3[ebp], eax
; Line 740
	je	SHORT $LN9@Endwrite
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$3[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR __Str$[ebp]
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Count$3[ebp], eax
	je	SHORT $LN9@Endwrite
; Line 741
	xor	al, al
	jmp	SHORT $LN1@Endwrite
$LN9@Endwrite:
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+62]
	test	ecx, ecx
	jne	SHORT $LN13@Endwrite
	mov	DWORD PTR tv140[ebp], 1
	jmp	SHORT $LN14@Endwrite
$LN13@Endwrite:
	mov	DWORD PTR tv140[ebp], 0
$LN14@Endwrite:
	mov	al, BYTE PTR tv140[ebp]
	jmp	SHORT $LN1@Endwrite
$LN10@Endwrite:
; Line 748
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+62], 0
; Line 749
	mov	al, 1
	jmp	SHORT $LN1@Endwrite
$LN11@Endwrite:
; Line 752
	xor	al, al
$LN1@Endwrite:
; Line 754
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Endwrite
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@Endwrite:
	DD	2
	DD	$LN17@Endwrite
$LN17@Endwrite:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN15@Endwrite
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN16@Endwrite
$LN16@Endwrite:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN15@Endwrite:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
tv66 = -260						; size = 4
__Nw$1 = -60						; size = 4
__Nr$2 = -48						; size = 4
__Pn$3 = -36						; size = 4
__Pb$4 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 693
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 698
	cmp	DWORD PTR __Which$[ebp], 1
	jne	SHORT $LN4@Init
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN5@Init
$LN4@Init:
	mov	DWORD PTR tv66[ebp], 0
$LN5@Init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR tv66[ebp]
	mov	BYTE PTR [eax+72], cl
; Line 699
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+62], 0
; Line 701
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 703
	cmp	DWORD PTR __File$[ebp], 0
	je	SHORT $LN2@Init
	xor	eax, eax
	je	SHORT $LN2@Init
; Line 704
	mov	DWORD PTR __Pb$4[ebp], 0
; Line 705
	mov	DWORD PTR __Pn$3[ebp], 0
; Line 706
	mov	DWORD PTR __Nr$2[ebp], 0
; Line 708
	mov	esi, esp
	lea	eax, DWORD PTR __Nr$2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	lea	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp___get_stream_buffer_pointers
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 710
	mov	eax, DWORD PTR __Nr$2[ebp]
	mov	DWORD PTR __Nw$1[ebp], eax
; Line 712
	mov	esi, esp
	mov	eax, DWORD PTR __Nw$1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	eax, DWORD PTR __Nr$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPAPA_W0PAH001@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Init:
; Line 715
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __File$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A+4
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx
; Line 717
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 718
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN10@Init:
	DD	3
	DD	$LN9@Init
$LN9@Init:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@Init
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN7@Init
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@Init
$LN8@Init:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	114					; 00000072H
	DB	0
$LN7@Init:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	0
$LN6@Init:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	98					; 00000062H
	DB	0
?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?imbue@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::imbue, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 688
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 690
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	call	??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<wchar_t,char,_Mbstatet> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Initcvt@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXABV?$codecvt@_WDU_Mbstatet@@@2@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Initcvt
; Line 691
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?imbue@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::imbue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sync@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ
_TEXT	SEGMENT
$T1 = -222						; size = 2
$T2 = -210						; size = 2
_this$ = -8						; size = 4
?sync@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::sync, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN3@sync
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR $T2[ebp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@sync
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN2@sync
$LN3@sync:
; Line 682
	xor	eax, eax
	jmp	SHORT $LN1@sync
$LN2@sync:
; Line 685
	or	eax, -1
$LN1@sync:
; Line 686
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sync@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::sync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setbuf@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@PA_W_J@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Mode$ = -20						; size = 4
_this$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@PA_W_J@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::setbuf, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 661
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 663
	cmp	DWORD PTR __Buffer$[ebp], 0
	jne	SHORT $LN2@setbuf
	mov	eax, DWORD PTR __Count$[ebp]
	or	eax, DWORD PTR __Count$[ebp+4]
	jne	SHORT $LN2@setbuf
; Line 664
	mov	DWORD PTR __Mode$[ebp], 4
; Line 665
	jmp	SHORT $LN3@setbuf
$LN2@setbuf:
; Line 666
	mov	DWORD PTR __Mode$[ebp], 0
$LN3@setbuf:
; Line 669
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Size$[ebp], eax
; Line 671
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN5@setbuf
	mov	esi, esp
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__setvbuf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@setbuf
$LN5@setbuf:
; Line 672
	xor	eax, eax
	jmp	SHORT $LN1@setbuf
$LN4@setbuf:
; Line 676
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init
; Line 677
	mov	eax, DWORD PTR _this$[ebp]
$LN1@setbuf:
; Line 678
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setbuf@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@PA_W_J@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::setbuf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekpos@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
$T1 = -236						; size = 8
__Off$ = -28						; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekpos, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 650
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 652
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN3@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@seekpos
	mov	esi, esp
	lea	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fsetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 653
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@seekpos
$LN2@seekpos:
; Line 656
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx
; Line 657
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
; Line 658
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekpos:
; Line 659
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@seekpos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	1
$LN7@seekpos:
	DD	1
	DD	$LN6@seekpos
$LN6@seekpos:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN5@seekpos
$LN5@seekpos:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
?seekpos@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekoff@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekoff, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 628
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	jne	SHORT $LN2@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN2@seekoff
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN2@seekoff
; Line 634
	mov	eax, DWORD PTR __Off$[ebp]
	sub	eax, 2
	mov	ecx, DWORD PTR __Off$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekoff:
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN4@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@seekoff
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	jne	SHORT $LN6@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN5@seekoff
$LN6@seekoff:
	mov	esi, esp
	mov	eax, DWORD PTR __Way$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___fseeki64
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@seekoff
$LN5@seekoff:
	mov	esi, esp
	lea	eax, DWORD PTR __Fileposition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fgetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 640
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@seekoff
$LN3@seekoff:
; Line 643
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
; Line 644
	mov	eax, DWORD PTR __Fileposition$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekoff:
; Line 645
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@seekoff
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN10@seekoff:
	DD	1
	DD	$LN9@seekoff
$LN9@seekoff:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN8@seekoff
$LN8@seekoff:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?seekoff@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?xsputn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsputn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsputn, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 622
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 624
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsputn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsputn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?xsgetn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsgetn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsgetn, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 592
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 594
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsgetn@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
_TEXT	SEGMENT
tv169 = -380						; size = 4
tv139 = -378						; size = 2
$T2 = -370						; size = 2
$T3 = -358						; size = 2
$T4 = -346						; size = 2
$T5 = -334						; size = 2
__Nleft$6 = -132					; size = 4
__Dest$7 = -120						; size = 4
__Ch$8 = -108						; size = 2
__Meta$9 = -96						; size = 4
__Src$10 = -84						; size = 4
__Str$ = -72						; size = 28
__Ch$11 = -36						; size = 2
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::uflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 490
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 491
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@uflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN9@uflow
; Line 492
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
	add	esp, 4
	jmp	$LN1@uflow
$LN9@uflow:
; Line 495
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN10@uflow
; Line 496
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@uflow
$LN10@uflow:
; Line 499
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
; Line 500
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN11@uflow
; Line 502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	lea	edx, DWORD PTR __Ch$11[ebp]
	push	edx
	call	??$_Fgetc@_W@std@@YA_NAA_WPAU_iobuf@@@Z	; std::_Fgetc<wchar_t>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@uflow
	lea	ecx, DWORD PTR __Ch$11[ebp]
	push	ecx
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
	add	esp, 4
	mov	WORD PTR tv139[ebp], ax
	jmp	SHORT $LN19@uflow
$LN18@uflow:
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR tv139[ebp], ax
$LN19@uflow:
	mov	ax, WORD PTR tv139[ebp]
	jmp	$LN1@uflow
$LN11@uflow:
; Line 506
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN4@uflow:
; Line 510
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$9[ebp], eax
; Line 512
	cmp	DWORD PTR __Meta$9[ebp], -1
	jne	SHORT $LN12@uflow
; Line 513
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T5[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ax, WORD PTR $T5[ebp]
	jmp	$LN1@uflow
$LN12@uflow:
; Line 516
	movzx	eax, BYTE PTR __Meta$9[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
; Line 520
	mov	esi, esp
	lea	eax, DWORD PTR __Dest$7[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$8[ebp+2]
	push	ecx
	lea	edx, DWORD PTR __Ch$8[ebp]
	push	edx
	lea	eax, DWORD PTR __Src$10[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	edi, eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	edi, eax
	push	edi
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	DWORD PTR __imp_?in@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPA_W3AAPA_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv169[ebp], eax
	cmp	DWORD PTR tv169[ebp], 0
	jl	$LN16@uflow
	cmp	DWORD PTR tv169[ebp], 1
	jle	SHORT $LN13@uflow
	cmp	DWORD PTR tv169[ebp], 3
	je	$LN15@uflow
	jmp	$LN16@uflow
$LN13@uflow:
; Line 524
	lea	eax, DWORD PTR __Ch$8[ebp]
	cmp	DWORD PTR __Dest$7[ebp], eax
	je	$LN14@uflow
; Line 525
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	esi, eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	esi, eax
	sub	esi, DWORD PTR __Src$10[ebp]
	mov	DWORD PTR __Nleft$6[ebp], esi
$LN7@uflow:
; Line 526
	cmp	DWORD PTR __Nleft$6[ebp], 0
	jle	SHORT $LN8@uflow
; Line 527
	mov	eax, DWORD PTR __Nleft$6[ebp]
	sub	eax, 1
	mov	DWORD PTR __Nleft$6[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR __Src$10[ebp]
	add	eax, DWORD PTR __Nleft$6[ebp]
	movsx	ecx, BYTE PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ungetc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 528
	jmp	SHORT $LN7@uflow
$LN8@uflow:
; Line 530
	lea	eax, DWORD PTR __Ch$8[ebp]
	push	eax
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
	add	esp, 4
	mov	WORD PTR $T4[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ax, WORD PTR $T4[ebp]
	jmp	SHORT $LN1@uflow
$LN14@uflow:
; Line 533
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR __Src$10[ebp]
	sub	ecx, eax
	push	ecx
	push	0
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Line 534
	jmp	SHORT $LN5@uflow
$LN15@uflow:
; Line 538
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
	movsx	ax, BYTE PTR [eax]
	mov	WORD PTR $T3[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ax, WORD PTR $T3[ebp]
	jmp	SHORT $LN1@uflow
$LN16@uflow:
; Line 541
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T2[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ax, WORD PTR $T2[ebp]
	jmp	SHORT $LN1@uflow
$LN5@uflow:
; Line 543
	jmp	$LN4@uflow
; Line 544
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@uflow:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@uflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN28@uflow:
	DD	5
	DD	$LN27@uflow
$LN27@uflow:
	DD	-36					; ffffffdcH
	DD	2
	DD	$LN21@uflow
	DD	-72					; ffffffb8H
	DD	28					; 0000001cH
	DD	$LN22@uflow
	DD	-84					; ffffffacH
	DD	4
	DD	$LN23@uflow
	DD	-108					; ffffff94H
	DD	2
	DD	$LN24@uflow
	DD	-120					; ffffff88H
	DD	4
	DD	$LN25@uflow
$LN25@uflow:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN24@uflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
$LN23@uflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN22@uflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN21@uflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ$0:
	lea	ecx, DWORD PTR __Str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::uflow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?underflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
_TEXT	SEGMENT
$T1 = -226						; size = 2
__Meta$ = -24						; size = 2
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?underflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::underflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 478
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 480
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN2@underflow
; Line 481
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
	add	esp, 4
	jmp	SHORT $LN1@underflow
	jmp	SHORT $LN1@underflow
$LN2@underflow:
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR __Meta$[ebp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@underflow
; Line 483
	mov	ax, WORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@underflow
; Line 484
	jmp	SHORT $LN1@underflow
$LN4@underflow:
; Line 485
	mov	esi, esp
	movzx	eax, WORD PTR __Meta$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	mov	ax, WORD PTR __Meta$[ebp]
$LN1@underflow:
; Line 488
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@underflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@underflow:
	DD	1
	DD	$LN8@underflow
$LN8@underflow:
	DD	-24					; ffffffe8H
	DD	2
	DD	$LN7@underflow
$LN7@underflow:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?underflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pbackfail@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z
_TEXT	SEGMENT
$T1 = -246						; size = 2
$T2 = -234						; size = 2
$T3 = -222						; size = 2
$T4 = -210						; size = 2
_this$ = -8						; size = 4
__Meta$ = 8						; size = 2
?pbackfail@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::pbackfail, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 457
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 460
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN2@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	$LN2@pbackfail
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T4[ebp], ax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 2
	imul	edx, ecx, -1
	add	eax, edx
	push	eax
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
	add	esp, 4
	mov	WORD PTR $T3[ebp], ax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@pbackfail
$LN4@pbackfail:
; Line 463
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gndec@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 464
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_WChar_traits@_W@std@@SAGABG@Z ; std::_WChar_traits<wchar_t>::not_eof
	add	esp, 4
	jmp	$LN1@pbackfail
	jmp	$LN1@pbackfail
$LN2@pbackfail:
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN7@pbackfail
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T2[ebp], ax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@pbackfail
$LN7@pbackfail:
; Line 466
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@pbackfail
	jmp	$LN1@pbackfail
$LN5@pbackfail:
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN8@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	WORD PTR $T1[ebp], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Ungetc@_W@std@@YA_NAB_WPAU_iobuf@@@Z ; std::_Ungetc<wchar_t>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@pbackfail
; Line 468
	mov	ax, WORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@pbackfail
	jmp	SHORT $LN1@pbackfail
$LN8@pbackfail:
; Line 469
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	je	SHORT $LN10@pbackfail
; Line 470
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+60], ax
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Set_back
; Line 472
	mov	ax, WORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@pbackfail
; Line 473
	jmp	SHORT $LN1@pbackfail
$LN10@pbackfail:
; Line 474
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
$LN1@pbackfail:
; Line 476
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?overflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z
_TEXT	SEGMENT
tv163 = -324						; size = 4
tv184 = -322						; size = 2
tv147 = -322						; size = 2
$T1 = -314						; size = 2
__Count$2 = -112					; size = 4
__Dest$ = -100						; size = 4
__Src$ = -88						; size = 4
__Ch$ = -76						; size = 2
__Str$ = -64						; size = 32
__Codecvt_temp_buf$ = -24				; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Meta$ = 8						; size = 2
?overflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::overflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 407
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T1[ebp], ax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@overflow
; Line 408
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_WChar_traits@_W@std@@SAGABG@Z ; std::_WChar_traits<wchar_t>::not_eof
	add	esp, 4
	jmp	$LN1@overflow
$LN4@overflow:
; Line 411
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN5@overflow
; Line 412
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	si, ax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR [eax], si
; Line 413
	mov	ax, WORD PTR __Meta$[ebp]
	jmp	$LN1@overflow
$LN5@overflow:
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN6@overflow
; Line 417
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@overflow
$LN6@overflow:
; Line 420
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN7@overflow
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	add	esp, 4
	movzx	eax, ax
	push	eax
	call	??$_Fputc@_W@std@@YA_N_WPAU_iobuf@@@Z	; std::_Fputc<wchar_t>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@overflow
	mov	dx, WORD PTR __Meta$[ebp]
	mov	WORD PTR tv147[ebp], dx
	jmp	SHORT $LN15@overflow
$LN14@overflow:
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR tv147[ebp], ax
$LN15@overflow:
	mov	ax, WORD PTR tv147[ebp]
	jmp	$LN1@overflow
$LN7@overflow:
; Line 426
	mov	DWORD PTR __Codecvt_temp_buf$[ebp], 32	; 00000020H
; Line 428
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	WORD PTR __Ch$[ebp], ax
; Line 431
	mov	esi, esp
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp+32]
	push	ecx
	lea	edx, DWORD PTR __Str$[ebp]
	push	edx
	lea	eax, DWORD PTR __Src$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$[ebp+2]
	push	ecx
	lea	edx, DWORD PTR __Ch$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	DWORD PTR __imp_?out@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PB_W1AAPB_WPAD3AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv163[ebp], eax
	cmp	DWORD PTR tv163[ebp], 0
	jl	$LN12@overflow
	cmp	DWORD PTR tv163[ebp], 1
	jle	SHORT $LN8@overflow
	cmp	DWORD PTR tv163[ebp], 3
	je	SHORT $LN11@overflow
	jmp	$LN12@overflow
$LN8@overflow:
; Line 435
	mov	eax, DWORD PTR __Dest$[ebp]
	lea	ecx, DWORD PTR __Str$[ebp]
	sub	eax, ecx
	mov	DWORD PTR __Count$2[ebp], eax
; Line 436
	je	SHORT $LN9@overflow
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$2[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR __Str$[ebp]
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Count$2[ebp], eax
	je	SHORT $LN9@overflow
; Line 437
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	SHORT $LN1@overflow
$LN9@overflow:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+62], 1
; Line 441
	lea	eax, DWORD PTR __Ch$[ebp]
	cmp	DWORD PTR __Src$[ebp], eax
	je	SHORT $LN10@overflow
; Line 442
	mov	ax, WORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@overflow
$LN10@overflow:
; Line 445
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	SHORT $LN1@overflow
$LN11@overflow:
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	movzx	edx, WORD PTR __Ch$[ebp]
	push	edx
	call	??$_Fputc@_W@std@@YA_N_WPAU_iobuf@@@Z	; std::_Fputc<wchar_t>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@overflow
	mov	cx, WORD PTR __Meta$[ebp]
	mov	WORD PTR tv184[ebp], cx
	jmp	SHORT $LN17@overflow
$LN16@overflow:
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR tv184[ebp], ax
$LN17@overflow:
	mov	ax, WORD PTR tv184[ebp]
	jmp	SHORT $LN1@overflow
$LN12@overflow:
; Line 453
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
$LN1@overflow:
; Line 455
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@overflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN23@overflow:
	DD	4
	DD	$LN22@overflow
$LN22@overflow:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN18@overflow
	DD	-76					; ffffffb4H
	DD	2
	DD	$LN19@overflow
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN20@overflow
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN21@overflow
$LN21@overflow:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN20@overflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN19@overflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
$LN18@overflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?overflow@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@MAEGG@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unlock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unlock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Unlock, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 400
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN1@Unlock
; Line 401
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___unlock_file
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Unlock:
; Line 403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unlock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Lock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Lock, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN1@Lock
; Line 395
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___lock_file
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Lock:
; Line 397
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lock@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
?close@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::close, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@close
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Ans$[ebp], eax
; Line 378
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAE_NXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@close
; Line 379
	mov	DWORD PTR __Ans$[ebp], 0
$LN4@close:
; Line 382
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@close
; Line 383
	mov	DWORD PTR __Ans$[ebp], 0
$LN5@close:
; Line 385
	jmp	SHORT $LN3@close
$LN2@close:
; Line 386
	mov	DWORD PTR __Ans$[ebp], 0
$LN3@close:
; Line 389
	push	2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init
; Line 390
	mov	eax, DWORD PTR __Ans$[ebp]
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z
_TEXT	SEGMENT
tv89 = -252						; size = 4
tv90 = -248						; size = 4
$T2 = -240						; size = 8
__File$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::open, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 302
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@open
; Line 305
	xor	eax, eax
	jmp	$LN1@open
$LN2@open:
; Line 308
	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Filename$[ebp]
	push	edx
	call	?_Fiopen@std@@YAPAU_iobuf@@PB_WHH@Z	; std::_Fiopen
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __File$[ebp], eax
; Line 309
	cmp	DWORD PTR __File$[ebp], 0
	jne	SHORT $LN3@open
; Line 310
	xor	eax, eax
	jmp	SHORT $LN1@open
$LN3@open:
; Line 313
	push	1
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init
; Line 314
	mov	esi, esp
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?getloc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QBE?AVlocale@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv89[ebp]
	push	edx
	call	??$use_facet@V?$codecvt@_WDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@_WDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<wchar_t,char,_Mbstatet> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Initcvt@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXABV?$codecvt@_WDU_Mbstatet@@@2@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Initcvt
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
; Line 315
	mov	eax, DWORD PTR _this$[ebp]
$LN1@open:
; Line 316
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 170
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@basic_file
; Line 172
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@AAEXXZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back
$LN2@basic_file:
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	SHORT $LN1@basic_file
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::close
$LN1@basic_file:
; Line 178
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::basic_filebuf<wchar_t,std::char_traits<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 162
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@6B@
; Line 163
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Init
; Line 164
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::basic_filebuf<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 1168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 1169
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?close@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::close
	test	eax, eax
	jne	SHORT $LN1@close
; Line 1170
	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@close:
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAE@XZ PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::~basic_ofstream<wchar_t,std::char_traits<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 1137
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-108], edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 100				; 00000064H
	call	??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@UAE@XZ ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::~basic_ofstream<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z PROC ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 1012
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 1014
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ofst
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ofst:
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$addressof@V?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@@std@@YAPAV?$basic_filebuf@_WU?$char_traits@_W@std@@@0@AAV10@@Z ; std::addressof<std::basic_filebuf<wchar_t,std::char_traits<wchar_t> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::basic_filebuf<wchar_t,std::char_traits<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1016
	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __Filename$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?open@?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@QAEPAV12@PB_WHH@Z ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::open
	test	eax, eax
	jne	SHORT $LN1@basic_ofst
; Line 1017
	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@basic_ofst:
; Line 1019
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@basic_ofst
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@basic_ofst:
	ret	0
__unwindfunclet$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ ; std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z ENDP ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
_result$ = -244						; size = 4
_stemp$ = -232						; size = 28
_out$ = -196						; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_figp$ = 8						; size = 16120
_filename$ = 16128					; size = 28
?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; SaveFigurePartW, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 363
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 364
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAE@PB_WHH@Z ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 365
	lea	eax, DWORD PTR _figp$[ebp+16092]
	push	eax
	lea	ecx, DWORD PTR _stemp$[ebp]
	push	ecx
	call	?s2ws@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; s2ws
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 366
	lea	ecx, DWORD PTR _stemp$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	mov	DWORD PTR _result$[ebp], eax
; Line 367
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 368
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::close
; Line 369
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _stemp$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _figp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@SaveFigure:
	DD	2
	DD	$LN10@SaveFigure
$LN10@SaveFigure:
	DD	-196					; ffffff3cH
	DD	176					; 000000b0H
	DD	$LN7@SaveFigure
	DD	-232					; ffffff18H
	DD	28					; 0000001cH
	DD	$LN8@SaveFigure
$LN8@SaveFigure:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN7@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _figp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
__unwindfunclet$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _stemp$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigurePartW@@YAXUFigurePart@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; SaveFigurePartW
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4725
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4726
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	push	eax
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	call	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
	add	esp, 12					; 0000000cH
; Line 4727
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -356						; size = 8
tv343 = -348						; size = 8
tv291 = -344						; size = 4
tv288 = -344						; size = 8
tv286 = -344						; size = 4
tv329 = -340						; size = 8
tv290 = -340						; size = 4
tv285 = -340						; size = 4
tv287 = -336						; size = 4
tv137 = -336						; size = 4
tv289 = -333						; size = 1
tv284 = -333						; size = 1
$T2 = -328						; size = 4
$T3 = -316						; size = 4
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
__Ok$ = -76						; size = 8
__Pad$ = -60						; size = 8
__Count$ = -44						; size = 8
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\ostream
; Line 734
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __2C4F3A16_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 738
	mov	DWORD PTR __State$[ebp], 0
; Line 739
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 740
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv329[ebp], eax
	mov	DWORD PTR tv329[ebp+4], edx
	cmp	DWORD PTR tv329[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv329[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv343[ebp], eax
	mov	DWORD PTR tv343[ebp+4], edx
	mov	eax, DWORD PTR tv343[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv343[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 741
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 743
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 744
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 745
	jmp	$LN9@operator
$LN8@operator:
; Line 746
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 747
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 748
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 749
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv284[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv284[ebp]
	push	eax
	mov	ecx, DWORD PTR tv285[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	ecx, DWORD PTR tv286[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@operator
; Line 750
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 751
	jmp	SHORT $LN11@operator
$LN12@operator:
; Line 753
	jmp	$LN2@operator
$LN11@operator:
; Line 756
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN13@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv287[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv288[ebp], eax
	mov	DWORD PTR tv288[ebp+4], edx
	mov	eax, DWORD PTR tv288[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv288[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN13@operator
$LN27@operator:
; Line 757
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:
; Line 760
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN14@operator
; Line 761
	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN28@operator:
; Line 762
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv289[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv289[ebp]
	push	eax
	mov	ecx, DWORD PTR tv290[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv291[ebp], eax
	mov	ecx, DWORD PTR tv291[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@operator
; Line 763
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 764
	jmp	SHORT $LN14@operator
$LN15@operator:
; Line 766
	jmp	$LN5@operator
$LN14@operator:
; Line 769
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 770
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:
; Line 773
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 774
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 775
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	176					; 000000b0H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 779
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 780
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	je	SHORT $LN2@Set_back
; Line 781
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 782
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
$LN2@Set_back:
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 61					; 0000003dH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 773
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 774
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	jne	SHORT $LN1@Reset_back
; Line 775
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Reset_back:
; Line 777
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXABV?$codecvt@DDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXABV?$codecvt@DDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 756
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 757
	mov	esi, esp
	mov	ecx, DWORD PTR __Newcvt$[ebp]
	call	DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Initcvt
; Line 758
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 759
	jmp	SHORT $LN1@Initcvt
$LN2@Initcvt:
; Line 760
	mov	eax, DWORD PTR __Newcvt$[ebp]
	push	eax
	call	??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPBV?$codecvt@DDU_Mbstatet@@@0@ABV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 761
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Initcvt:
; Line 763
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXABV?$codecvt@DDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
tv140 = -312						; size = 4
tv94 = -312						; size = 4
$T1 = -304						; size = 4
$T2 = -292						; size = 4
__Count$3 = -88						; size = 4
__Dest$ = -76						; size = 4
__Str$ = -64						; size = 32
__Codecvt_temp_buf$ = -24				; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 720
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 721
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN5@Endwrite
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	jne	SHORT $LN4@Endwrite
$LN5@Endwrite:
; Line 722
	mov	al, 1
	jmp	$LN1@Endwrite
$LN4@Endwrite:
; Line 726
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T2[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@Endwrite
; Line 727
	xor	al, al
	jmp	$LN1@Endwrite
$LN6@Endwrite:
; Line 730
	mov	DWORD PTR __Codecvt_temp_buf$[ebp], 32	; 00000020H
; Line 733
	mov	esi, esp
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp+32]
	push	ecx
	lea	edx, DWORD PTR __Str$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	DWORD PTR __imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	cmp	DWORD PTR tv94[ebp], 0
	je	SHORT $LN7@Endwrite
	cmp	DWORD PTR tv94[ebp], 1
	je	SHORT $LN8@Endwrite
	cmp	DWORD PTR tv94[ebp], 3
	je	SHORT $LN10@Endwrite
	jmp	SHORT $LN11@Endwrite
$LN7@Endwrite:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 0
$LN8@Endwrite:
; Line 739
	mov	eax, DWORD PTR __Dest$[ebp]
	lea	ecx, DWORD PTR __Str$[ebp]
	sub	eax, ecx
	mov	DWORD PTR __Count$3[ebp], eax
; Line 740
	je	SHORT $LN9@Endwrite
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$3[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR __Str$[ebp]
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Count$3[ebp], eax
	je	SHORT $LN9@Endwrite
; Line 741
	xor	al, al
	jmp	SHORT $LN1@Endwrite
$LN9@Endwrite:
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	jne	SHORT $LN13@Endwrite
	mov	DWORD PTR tv140[ebp], 1
	jmp	SHORT $LN14@Endwrite
$LN13@Endwrite:
	mov	DWORD PTR tv140[ebp], 0
$LN14@Endwrite:
	mov	al, BYTE PTR tv140[ebp]
	jmp	SHORT $LN1@Endwrite
$LN10@Endwrite:
; Line 748
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 0
; Line 749
	mov	al, 1
	jmp	SHORT $LN1@Endwrite
$LN11@Endwrite:
; Line 752
	xor	al, al
$LN1@Endwrite:
; Line 754
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Endwrite
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN18@Endwrite:
	DD	2
	DD	$LN17@Endwrite
$LN17@Endwrite:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN15@Endwrite
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN16@Endwrite
$LN16@Endwrite:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN15@Endwrite:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
tv66 = -260						; size = 4
__Nw$1 = -60						; size = 4
__Nr$2 = -48						; size = 4
__Pn$3 = -36						; size = 4
__Pb$4 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 693
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 698
	cmp	DWORD PTR __Which$[ebp], 1
	jne	SHORT $LN4@Init
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN5@Init
$LN4@Init:
	mov	DWORD PTR tv66[ebp], 0
$LN5@Init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR tv66[ebp]
	mov	BYTE PTR [eax+72], cl
; Line 699
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 0
; Line 701
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 703
	cmp	DWORD PTR __File$[ebp], 0
	je	SHORT $LN2@Init
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Init
; Line 704
	mov	DWORD PTR __Pb$4[ebp], 0
; Line 705
	mov	DWORD PTR __Pn$3[ebp], 0
; Line 706
	mov	DWORD PTR __Nr$2[ebp], 0
; Line 708
	mov	esi, esp
	lea	eax, DWORD PTR __Nr$2[ebp]
	push	eax
	lea	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	lea	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp___get_stream_buffer_pointers
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 710
	mov	eax, DWORD PTR __Nr$2[ebp]
	mov	DWORD PTR __Nw$1[ebp], eax
; Line 712
	mov	esi, esp
	mov	eax, DWORD PTR __Nw$1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	eax, DWORD PTR __Nr$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pn$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pb$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Init:
; Line 715
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __File$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A+4
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx
; Line 717
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 718
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@Init:
	DD	3
	DD	$LN9@Init
$LN9@Init:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@Init
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN7@Init
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@Init
$LN8@Init:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	114					; 00000072H
	DB	0
$LN7@Init:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	0
$LN6@Init:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	98					; 00000062H
	DB	0
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 688
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 690
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	call	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXABV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
; Line 691
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN3@sync
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T2[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@sync
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN2@sync
$LN3@sync:
; Line 682
	xor	eax, eax
	jmp	SHORT $LN1@sync
$LN2@sync:
; Line 685
	or	eax, -1
$LN1@sync:
; Line 686
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Mode$ = -20						; size = 4
_this$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 661
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 663
	cmp	DWORD PTR __Buffer$[ebp], 0
	jne	SHORT $LN2@setbuf
	mov	eax, DWORD PTR __Count$[ebp]
	or	eax, DWORD PTR __Count$[ebp+4]
	jne	SHORT $LN2@setbuf
; Line 664
	mov	DWORD PTR __Mode$[ebp], 4
; Line 665
	jmp	SHORT $LN3@setbuf
$LN2@setbuf:
; Line 666
	mov	DWORD PTR __Mode$[ebp], 0
$LN3@setbuf:
; Line 669
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
; Line 671
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN5@setbuf
	mov	esi, esp
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__setvbuf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@setbuf
$LN5@setbuf:
; Line 672
	xor	eax, eax
	jmp	SHORT $LN1@setbuf
$LN4@setbuf:
; Line 676
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 677
	mov	eax, DWORD PTR _this$[ebp]
$LN1@setbuf:
; Line 678
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
$T1 = -236						; size = 8
__Off$ = -28						; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 650
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 652
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN3@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@seekpos
	mov	esi, esp
	lea	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fsetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 653
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@seekpos
$LN2@seekpos:
; Line 656
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], edx
; Line 657
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 658
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekpos:
; Line 659
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@seekpos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	1
$LN7@seekpos:
	DD	1
	DD	$LN6@seekpos
$LN6@seekpos:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN5@seekpos
$LN5@seekpos:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 628
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	jne	SHORT $LN2@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN2@seekoff
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN2@seekoff
; Line 634
	mov	eax, DWORD PTR __Off$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Off$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekoff:
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN4@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@seekoff
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	jne	SHORT $LN6@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN5@seekoff
$LN6@seekoff:
	mov	esi, esp
	mov	eax, DWORD PTR __Way$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___fseeki64
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@seekoff
$LN5@seekoff:
	mov	esi, esp
	lea	eax, DWORD PTR __Fileposition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	DWORD PTR __imp__fgetpos
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 640
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@seekoff
$LN3@seekoff:
; Line 643
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 644
	mov	eax, DWORD PTR __Fileposition$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekoff:
; Line 645
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@seekoff
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN10@seekoff:
	DD	1
	DD	$LN9@seekoff
$LN9@seekoff:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN8@seekoff
$LN8@seekoff:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
_TEXT	SEGMENT
__Size$1 = -40						; size = 8
__Start_count$2 = -24					; size = 8
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsputn, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 596
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN2@xsputn
; Line 600
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN1@xsputn
$LN2@xsputn:
; Line 603
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR __Start_count$2[ebp], eax
	mov	DWORD PTR __Start_count$2[ebp+4], ecx
; Line 604
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Size$1[ebp], eax
	mov	DWORD PTR __Size$1[ebp+4], edx
; Line 605
	cmp	DWORD PTR __Count$[ebp+4], 0
	jl	$LN3@xsputn
	jg	SHORT $LN7@xsputn
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	$LN3@xsputn
$LN7@xsputn:
	cmp	DWORD PTR __Size$1[ebp+4], 0
	jl	SHORT $LN3@xsputn
	jg	SHORT $LN8@xsputn
	cmp	DWORD PTR __Size$1[ebp], 0
	jbe	SHORT $LN3@xsputn
$LN8@xsputn:
; Line 606
	mov	eax, DWORD PTR __Count$[ebp+4]
	cmp	eax, DWORD PTR __Size$1[ebp+4]
	jg	SHORT $LN4@xsputn
	jl	SHORT $LN9@xsputn
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR __Size$1[ebp]
	jae	SHORT $LN4@xsputn
$LN9@xsputn:
; Line 607
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR __Size$1[ebp], eax
	mov	DWORD PTR __Size$1[ebp+4], ecx
$LN4@xsputn:
; Line 610
	mov	eax, DWORD PTR __Size$1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 611
	mov	eax, DWORD PTR __Size$1[ebp]
	add	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 612
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Size$1[ebp]
	mov	ecx, DWORD PTR __Count$[ebp+4]
	sbb	ecx, DWORD PTR __Size$1[ebp+4]
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 613
	mov	eax, DWORD PTR __Size$1[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@xsputn:
; Line 616
	cmp	DWORD PTR __Count$[ebp+4], 0
	jl	SHORT $LN5@xsputn
	jg	SHORT $LN10@xsputn
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN5@xsputn
$LN10@xsputn:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN5@xsputn
; Line 617
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	ecx, ecx
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, eax
	mov	eax, DWORD PTR __Count$[ebp+4]
	sbb	eax, ecx
	mov	DWORD PTR __Count$[ebp], edx
	mov	DWORD PTR __Count$[ebp+4], eax
$LN5@xsputn:
; Line 620
	mov	eax, DWORD PTR __Start_count$2[ebp]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Start_count$2[ebp+4]
	sbb	edx, DWORD PTR __Count$[ebp+4]
$LN1@xsputn:
; Line 624
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
_TEXT	SEGMENT
__Actual_read$1 = -88					; size = 4
__Read_size$2 = -76					; size = 4
__Read_size$3 = -64					; size = 4
__Available$4 = -52					; size = 4
__Start_count$5 = -40					; size = 8
__Count_s$6 = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 548
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 551
	cmp	DWORD PTR __Count$[ebp+4], 0
	jg	SHORT $LN4@xsgetn
	jl	SHORT $LN11@xsgetn
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@xsgetn
$LN11@xsgetn:
; Line 552
	xor	eax, eax
	xor	edx, edx
	jmp	$LN1@xsgetn
$LN4@xsgetn:
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN5@xsgetn
; Line 556
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN1@xsgetn
$LN5@xsgetn:
; Line 560
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count_s$6[ebp], eax
; Line 561
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR __Start_count$5[ebp], eax
	mov	DWORD PTR __Start_count$5[ebp+4], ecx
; Line 562
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Available$4[ebp], eax
; Line 563
	cmp	DWORD PTR __Available$4[ebp], 0
	jbe	SHORT $LN6@xsgetn
; Line 564
	lea	eax, DWORD PTR __Available$4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Count_s$6[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Read_size$3[ebp], edx
; Line 565
	mov	eax, DWORD PTR __Read_size$3[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 566
	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, DWORD PTR __Read_size$3[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 567
	mov	eax, DWORD PTR __Count_s$6[ebp]
	sub	eax, DWORD PTR __Read_size$3[ebp]
	mov	DWORD PTR __Count_s$6[ebp], eax
; Line 568
	mov	esi, esp
	mov	eax, DWORD PTR __Read_size$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@xsgetn:
; Line 571
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	$LN7@xsgetn
; Line 572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 575
	mov	DWORD PTR __Read_size$2[ebp], 4095	; 00000fffH
$LN2@xsgetn:
; Line 576
	cmp	DWORD PTR __Count_s$6[ebp], 4095	; 00000fffH
	jbe	SHORT $LN3@xsgetn
; Line 577
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	push	4095					; 00000fffH
	push	1
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Actual_read$1[ebp], eax
; Line 578
	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, DWORD PTR __Actual_read$1[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 579
	mov	eax, DWORD PTR __Count_s$6[ebp]
	sub	eax, DWORD PTR __Actual_read$1[ebp]
	mov	DWORD PTR __Count_s$6[ebp], eax
; Line 580
	cmp	DWORD PTR __Actual_read$1[ebp], 4095	; 00000fffH
	je	SHORT $LN8@xsgetn
; Line 581
	xor	eax, eax
	mov	ecx, DWORD PTR __Start_count$5[ebp]
	sub	ecx, DWORD PTR __Count_s$6[ebp]
	mov	edx, DWORD PTR __Start_count$5[ebp+4]
	sbb	edx, eax
	mov	eax, ecx
	jmp	SHORT $LN1@xsgetn
$LN8@xsgetn:
; Line 583
	jmp	SHORT $LN2@xsgetn
$LN3@xsgetn:
; Line 585
	cmp	DWORD PTR __Count_s$6[ebp], 0
	jbe	SHORT $LN7@xsgetn
; Line 586
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count_s$6[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __Count_s$6[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Count_s$6[ebp], ecx
$LN7@xsgetn:
; Line 590
	xor	eax, eax
	mov	ecx, DWORD PTR __Start_count$5[ebp]
	sub	ecx, DWORD PTR __Count_s$6[ebp]
	mov	edx, DWORD PTR __Start_count$5[ebp+4]
	sbb	edx, eax
	mov	eax, ecx
$LN1@xsgetn:
; Line 594
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@xsgetn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN15@xsgetn:
	DD	2
	DD	$LN14@xsgetn
$LN14@xsgetn:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN12@xsgetn
	DD	-52					; ffffffccH
	DD	4
	DD	$LN13@xsgetn
$LN13@xsgetn:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN12@xsgetn:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	0
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
tv169 = -380						; size = 4
tv139 = -380						; size = 4
$T2 = -372						; size = 4
$T3 = -360						; size = 4
$T4 = -348						; size = 4
$T5 = -336						; size = 4
__Nleft$6 = -132					; size = 4
__Dest$7 = -120						; size = 4
__Ch$8 = -105						; size = 1
__Meta$9 = -96						; size = 4
__Src$10 = -84						; size = 4
__Str$ = -72						; size = 28
__Ch$11 = -33						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 490
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 491
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@uflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN9@uflow
; Line 492
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	jmp	$LN1@uflow
$LN9@uflow:
; Line 495
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN10@uflow
; Line 496
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@uflow
$LN10@uflow:
; Line 499
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 500
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN11@uflow
; Line 502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	lea	edx, DWORD PTR __Ch$11[ebp]
	push	edx
	call	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z	; std::_Fgetc<char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@uflow
	lea	ecx, DWORD PTR __Ch$11[ebp]
	push	ecx
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN19@uflow
$LN18@uflow:
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR tv139[ebp], eax
$LN19@uflow:
	mov	eax, DWORD PTR tv139[ebp]
	jmp	$LN1@uflow
$LN11@uflow:
; Line 506
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN4@uflow:
; Line 510
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$9[ebp], eax
; Line 512
	cmp	DWORD PTR __Meta$9[ebp], -1
	jne	SHORT $LN12@uflow
; Line 513
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN1@uflow
$LN12@uflow:
; Line 516
	movzx	eax, BYTE PTR __Meta$9[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
; Line 520
	mov	esi, esp
	lea	eax, DWORD PTR __Dest$7[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$8[ebp+1]
	push	ecx
	lea	edx, DWORD PTR __Ch$8[ebp]
	push	edx
	lea	eax, DWORD PTR __Src$10[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	edi, eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	edi, eax
	push	edi
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	DWORD PTR __imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv169[ebp], eax
	cmp	DWORD PTR tv169[ebp], 0
	jl	$LN16@uflow
	cmp	DWORD PTR tv169[ebp], 1
	jle	SHORT $LN13@uflow
	cmp	DWORD PTR tv169[ebp], 3
	je	$LN15@uflow
	jmp	$LN16@uflow
$LN13@uflow:
; Line 524
	lea	eax, DWORD PTR __Ch$8[ebp]
	cmp	DWORD PTR __Dest$7[ebp], eax
	je	$LN14@uflow
; Line 525
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	esi, eax
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	esi, eax
	sub	esi, DWORD PTR __Src$10[ebp]
	mov	DWORD PTR __Nleft$6[ebp], esi
$LN7@uflow:
; Line 526
	cmp	DWORD PTR __Nleft$6[ebp], 0
	jle	SHORT $LN8@uflow
; Line 527
	mov	eax, DWORD PTR __Nleft$6[ebp]
	sub	eax, 1
	mov	DWORD PTR __Nleft$6[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR __Src$10[ebp]
	add	eax, DWORD PTR __Nleft$6[ebp]
	movsx	ecx, BYTE PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ungetc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 528
	jmp	SHORT $LN7@uflow
$LN8@uflow:
; Line 530
	lea	eax, DWORD PTR __Ch$8[ebp]
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T4[ebp]
	jmp	SHORT $LN1@uflow
$LN14@uflow:
; Line 533
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR __Src$10[ebp]
	sub	ecx, eax
	push	ecx
	push	0
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Line 534
	jmp	SHORT $LN5@uflow
$LN15@uflow:
; Line 538
	lea	ecx, DWORD PTR __Str$[ebp]
	call	?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
	movsx	eax, BYTE PTR [eax]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN1@uflow
$LN16@uflow:
; Line 541
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN1@uflow
$LN5@uflow:
; Line 543
	jmp	$LN4@uflow
; Line 544
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@uflow:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@uflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN28@uflow:
	DD	5
	DD	$LN27@uflow
$LN27@uflow:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN21@uflow
	DD	-72					; ffffffb8H
	DD	28					; 0000001cH
	DD	$LN22@uflow
	DD	-84					; ffffffacH
	DD	4
	DD	$LN23@uflow
	DD	-105					; ffffff97H
	DD	1
	DD	$LN24@uflow
	DD	-120					; ffffff88H
	DD	4
	DD	$LN25@uflow
$LN25@uflow:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN24@uflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
$LN23@uflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN22@uflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN21@uflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
	lea	ecx, DWORD PTR __Str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
$T1 = -228						; size = 4
__Meta$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 478
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 480
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN2@underflow
; Line 481
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	jmp	SHORT $LN1@underflow
	jmp	SHORT $LN1@underflow
$LN2@underflow:
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@underflow
; Line 483
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@underflow
; Line 484
	jmp	SHORT $LN1@underflow
$LN4@underflow:
; Line 485
	mov	esi, esp
	mov	eax, DWORD PTR __Meta$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	mov	eax, DWORD PTR __Meta$[ebp]
$LN1@underflow:
; Line 488
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@underflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@underflow:
	DD	1
	DD	$LN8@underflow
$LN8@underflow:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@underflow
$LN7@underflow:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 457
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 460
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN2@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	$LN2@pbackfail
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T4[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 1
	imul	edx, ecx, -1
	add	eax, edx
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@pbackfail
$LN4@pbackfail:
; Line 463
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 464
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	add	esp, 4
	jmp	$LN1@pbackfail
	jmp	$LN1@pbackfail
$LN2@pbackfail:
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN7@pbackfail
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T2[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@pbackfail
$LN7@pbackfail:
; Line 466
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@pbackfail
	jmp	$LN1@pbackfail
$LN5@pbackfail:
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN8@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z	; std::_Ungetc<char>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@pbackfail
; Line 468
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@pbackfail
	jmp	SHORT $LN1@pbackfail
$LN8@pbackfail:
; Line 469
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	cmp	eax, ecx
	je	SHORT $LN10@pbackfail
; Line 470
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+60], al
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
; Line 472
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@pbackfail
; Line 473
	jmp	SHORT $LN1@pbackfail
$LN10@pbackfail:
; Line 474
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
$LN1@pbackfail:
; Line 476
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
tv184 = -324						; size = 4
tv163 = -324						; size = 4
tv147 = -324						; size = 4
$T1 = -316						; size = 4
__Count$2 = -112					; size = 4
__Dest$ = -100						; size = 4
__Src$ = -88						; size = 4
__Ch$ = -73						; size = 1
__Str$ = -64						; size = 32
__Codecvt_temp_buf$ = -24				; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 407
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@overflow
; Line 408
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	add	esp, 4
	jmp	$LN1@overflow
$LN4@overflow:
; Line 411
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN5@overflow
; Line 412
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 413
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN1@overflow
$LN5@overflow:
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN6@overflow
; Line 417
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN6@overflow:
; Line 420
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN7@overflow
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	movzx	eax, al
	push	eax
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@overflow
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	DWORD PTR tv147[ebp], edx
	jmp	SHORT $LN15@overflow
$LN14@overflow:
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR tv147[ebp], eax
$LN15@overflow:
	mov	eax, DWORD PTR tv147[ebp]
	jmp	$LN1@overflow
$LN7@overflow:
; Line 426
	mov	DWORD PTR __Codecvt_temp_buf$[ebp], 32	; 00000020H
; Line 428
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR __Ch$[ebp], al
; Line 431
	mov	esi, esp
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Str$[ebp+32]
	push	ecx
	lea	edx, DWORD PTR __Str$[ebp]
	push	edx
	lea	eax, DWORD PTR __Src$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$[ebp+1]
	push	ecx
	lea	edx, DWORD PTR __Ch$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	DWORD PTR __imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv163[ebp], eax
	cmp	DWORD PTR tv163[ebp], 0
	jl	$LN12@overflow
	cmp	DWORD PTR tv163[ebp], 1
	jle	SHORT $LN8@overflow
	cmp	DWORD PTR tv163[ebp], 3
	je	SHORT $LN11@overflow
	jmp	$LN12@overflow
$LN8@overflow:
; Line 435
	mov	eax, DWORD PTR __Dest$[ebp]
	lea	ecx, DWORD PTR __Str$[ebp]
	sub	eax, ecx
	mov	DWORD PTR __Count$2[ebp], eax
; Line 436
	je	SHORT $LN9@overflow
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR __Count$2[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR __Str$[ebp]
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Count$2[ebp], eax
	je	SHORT $LN9@overflow
; Line 437
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@overflow
$LN9@overflow:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], 1
; Line 441
	lea	eax, DWORD PTR __Ch$[ebp]
	cmp	DWORD PTR __Src$[ebp], eax
	je	SHORT $LN10@overflow
; Line 442
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN1@overflow
$LN10@overflow:
; Line 445
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@overflow
$LN11@overflow:
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	movzx	edx, BYTE PTR __Ch$[ebp]
	push	edx
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@overflow
	mov	ecx, DWORD PTR __Meta$[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	jmp	SHORT $LN17@overflow
$LN16@overflow:
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR tv184[ebp], eax
$LN17@overflow:
	mov	eax, DWORD PTR tv184[ebp]
	jmp	SHORT $LN1@overflow
$LN12@overflow:
; Line 453
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
$LN1@overflow:
; Line 455
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@overflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN23@overflow:
	DD	4
	DD	$LN22@overflow
$LN22@overflow:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN18@overflow
	DD	-73					; ffffffb7H
	DD	1
	DD	$LN19@overflow
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN20@overflow
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN21@overflow
$LN21@overflow:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN20@overflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN19@overflow:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	0
$LN18@overflow:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 400
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN1@Unlock
; Line 401
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___unlock_file
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Unlock:
; Line 403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN1@Lock
; Line 395
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp___lock_file
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Lock:
; Line 397
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@close
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Ans$[ebp], eax
; Line 378
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@close
; Line 379
	mov	DWORD PTR __Ans$[ebp], 0
$LN4@close:
; Line 382
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@close
; Line 383
	mov	DWORD PTR __Ans$[ebp], 0
$LN5@close:
; Line 385
	jmp	SHORT $LN3@close
$LN2@close:
; Line 386
	mov	DWORD PTR __Ans$[ebp], 0
$LN3@close:
; Line 389
	push	2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 390
	mov	eax, DWORD PTR __Ans$[ebp]
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
tv89 = -252						; size = 4
tv90 = -248						; size = 4
$T2 = -240						; size = 8
__File$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 275
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@open
; Line 278
	xor	eax, eax
	jmp	$LN1@open
$LN2@open:
; Line 281
	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Filename$[ebp]
	push	edx
	call	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z	; std::_Fiopen
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __File$[ebp], eax
; Line 282
	cmp	DWORD PTR __File$[ebp], 0
	jne	SHORT $LN3@open
; Line 283
	xor	eax, eax
	jmp	SHORT $LN1@open
$LN3@open:
; Line 286
	push	1
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 287
	mov	esi, esp
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv89[ebp]
	push	edx
	call	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAABV?$codecvt@DDU_Mbstatet@@@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXABV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
$LN1@open:
; Line 289
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 170
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@basic_file
; Line 172
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
$LN2@basic_file:
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	SHORT $LN1@basic_file
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file:
; Line 178
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 162
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
; Line 163
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 164
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 1168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 1169
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	eax, eax
	jne	SHORT $LN1@close
; Line 1170
	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@close:
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 1137
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-108], edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 100				; 00000064H
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 1000
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 1002
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ofst
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ofst:
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1003
	mov	eax, DWORD PTR __Prot$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __Filename$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN1@basic_ofst
; Line 1004
	mov	esi, esp
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@basic_ofst:
; Line 1006
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@basic_ofst
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@basic_ofst:
	ret	0
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_$initVBases$ = 8					; size = 4
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 998
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ofst
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ofst:
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_ofst
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_ofst:
	ret	0
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_out$ = -196						; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_figp$ = 8						; size = 16120
_filename$ = 16128					; size = 28
?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; SaveFigurePart, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 358
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 359
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _out$[ebp]
	call	?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXI@Z
	push	1
	push	64					; 00000040H
	push	2
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 360
	lea	eax, DWORD PTR _figp$[ebp+16092]
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
; Line 361
	lea	ecx, DWORD PTR _out$[ebp]
	call	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
; Line 362
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _figp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SaveFigure
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@SaveFigure:
	DD	1
	DD	$LN8@SaveFigure
$LN8@SaveFigure:
	DD	-196					; ffffff3cH
	DD	176					; 000000b0H
	DD	$LN6@SaveFigure
$LN6@SaveFigure:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _figp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveFigurePart@@YAXUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; SaveFigurePart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?s2ws@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv132 = -308						; size = 4
$T1 = -300						; size = 4
$T2 = -288						; size = 4
$T3 = -276						; size = 4
_r$ = -72						; size = 28
_buf$ = -36						; size = 4
_slength$ = -24						; size = 4
_len$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_s$ = 12						; size = 4
?s2ws@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; s2ws, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 348
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 350
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	add	eax, 1
	mov	DWORD PTR _slength$[ebp], eax
; Line 351
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _slength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 352
	xor	ecx, ecx
	mov	eax, DWORD PTR _len$[ebp]
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _buf$[ebp], eax
; Line 353
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _slength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 354
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 355
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	cmp	DWORD PTR $T2[ebp], 0
	jne	SHORT $LN3@s2ws
	mov	DWORD PTR tv132[ebp], 0
	jmp	SHORT $LN4@s2ws
$LN3@s2ws:
	mov	DWORD PTR _buf$[ebp], 33059		; 00008123H
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv132[ebp], edx
$LN4@s2ws:
; Line 356
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _r$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@s2ws
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@s2ws:
	DD	1
	DD	$LN9@s2ws
$LN9@s2ws:
	DD	-72					; ffffffb8H
	DD	28					; 0000001cH
	DD	$LN8@s2ws
$LN8@s2ws:
	DB	114					; 00000072H
	DB	0
?s2ws@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; s2ws
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv261 = -336						; size = 4
tv259 = -336						; size = 4
tv257 = -336						; size = 8
tv256 = -336						; size = 8
tv255 = -336						; size = 8
tv252 = -336						; size = 4
tv260 = -332						; size = 4
tv258 = -332						; size = 4
tv65 = -332						; size = 4
tv262 = -329						; size = 1
$T2 = -324						; size = 4
$T3 = -312						; size = 4
$T4 = -300						; size = 8
__Meta$5 = -92						; size = 4
__Size$6 = -80						; size = 4
__Ctype_fac$7 = -68					; size = 4
__Ok$ = -56						; size = 8
__Changed$ = -37					; size = 1
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator>><char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4670
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4676
	mov	DWORD PTR __State$[ebp], 0
; Line 4677
	mov	BYTE PTR __Changed$[ebp], 0
; Line 4678
	push	0
	mov	eax, DWORD PTR __Istr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 4680
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN5@operator
; Line 4681
	mov	esi, esp
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Istr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv252[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR tv252[ebp]
	push	ecx
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	add	esp, 4
	mov	DWORD PTR __Ctype_fac$7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
; Line 4682
	push	0
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Line 4684
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 4686
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv255[ebp], eax
	mov	DWORD PTR tv255[ebp+4], edx
	cmp	DWORD PTR tv255[ebp+4], 0
	jl	SHORT $LN7@operator
	jg	SHORT $LN21@operator
	cmp	DWORD PTR tv255[ebp], 0
	jbe	SHORT $LN7@operator
$LN21@operator:
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv256[ebp], eax
	mov	DWORD PTR tv256[ebp+4], edx
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	DWORD PTR tv256[ebp], eax
	jae	SHORT $LN7@operator
; Line 4687
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv257[ebp], eax
	mov	DWORD PTR tv257[ebp+4], edx
	mov	eax, DWORD PTR tv257[ebp]
	mov	DWORD PTR __Size$6[ebp], eax
; Line 4688
	jmp	SHORT $LN8@operator
$LN7@operator:
; Line 4689
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Size$6[ebp], eax
$LN8@operator:
; Line 4692
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv258[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv258[ebp]
	call	DWORD PTR __imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv259[ebp], eax
	mov	eax, DWORD PTR tv259[ebp]
	mov	DWORD PTR __Meta$5[ebp], eax
; Line 4694
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Size$6[ebp]
	sub	eax, 1
	mov	DWORD PTR __Size$6[ebp], eax
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Istr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv260[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv260[ebp]
	call	DWORD PTR __imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv261[ebp], eax
	mov	eax, DWORD PTR tv261[ebp]
	mov	DWORD PTR __Meta$5[ebp], eax
$LN4@operator:
	cmp	DWORD PTR __Size$6[ebp], 0
	jbe	$LN3@operator
; Line 4695
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@operator
; Line 4696
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 1
	mov	DWORD PTR __State$[ebp], eax
; Line 4697
	jmp	SHORT $LN3@operator
	jmp	SHORT $LN10@operator
$LN9@operator:
; Line 4698
	lea	eax, DWORD PTR __Meta$5[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	esi, esp
	movzx	ecx, al
	push	ecx
	push	72					; 00000048H
	mov	ecx, DWORD PTR __Ctype_fac$7[ebp]
	call	DWORD PTR __imp_?is@?$ctype@D@std@@QBE_NFD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv262[ebp], al
	movzx	edx, BYTE PTR tv262[ebp]
	test	edx, edx
	je	SHORT $LN11@operator
; Line 4699
	jmp	SHORT $LN3@operator
; Line 4700
	jmp	SHORT $LN10@operator
$LN11@operator:
; Line 4701
	lea	eax, DWORD PTR __Meta$5[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
; Line 4702
	mov	BYTE PTR __Changed$[ebp], 1
$LN10@operator:
; Line 4704
	jmp	$LN2@operator
$LN3@operator:
	jmp	SHORT $LN15@operator
__catch$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
; Line 4705
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN20@operator
	ret	0
$LN15@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@operator
$LN20@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN5@operator:
; Line 4708
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Istr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4709
	movzx	eax, BYTE PTR __Changed$[ebp]
	test	eax, eax
	jne	SHORT $LN13@operator
; Line 4710
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:
; Line 4713
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Istr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4714
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 4715
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN26@operator:
	DD	2
	DD	$LN25@operator
$LN25@operator:
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN22@operator
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN23@operator
$LN23@operator:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN22@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator>><char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4719
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4720
	mov	eax, DWORD PTR __Str$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Istr$[ebp]
	push	ecx
	call	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
	add	esp, 4
	push	eax
	call	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
; Line 4721
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	call	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	168					; 000000a8H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 96					; 00000060H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 96					; 00000060H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-96]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-96], OFFSET ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-96]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-96]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-100], edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
_$initVBases$ = 16					; size = 4
??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 395
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_istr
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_istr:
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	eax, DWORD PTR __Mode$[ebp]
	or	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_istr
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_istr:
	ret	0
__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
tv158 = -57788						; size = 4
$T2 = -57780						; size = 4
$T3 = -57768						; size = 4
_i$4 = -56220						; size = 4
_parts$ = -56208					; size = 56000
_tmp$ = -200						; size = 4
_str$ = -188						; size = 168
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fig$ = 12						; size = 28
_part_pos$ = 40						; size = 4
?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; GetFigurePart, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 337
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 57776				; 0000e1b0H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-57788]
	mov	ecx, 14444				; 0000386cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 338
	push	168					; 000000a8H
	lea	ecx, DWORD PTR _str$[ebp]
	call	?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	push	1
	push	1
	lea	eax, DWORD PTR _fig$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 340
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	2000					; 000007d0H
	push	28					; 0000001cH
	lea	eax, DWORD PTR _parts$[ebp]
	push	eax
	call	??_L@YGXPAXIIP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 341
	mov	esi, esp
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 342
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@GetFigureP
$LN2@GetFigureP:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@GetFigureP:
	mov	eax, DWORD PTR _i$4[ebp]
	cmp	eax, DWORD PTR _tmp$[ebp]
	jge	SHORT $LN3@GetFigureP
; Line 343
	imul	eax, DWORD PTR _i$4[ebp], 28
	lea	ecx, DWORD PTR _parts$[ebp+eax]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
; Line 344
	jmp	SHORT $LN2@GetFigureP
$LN3@GetFigureP:
; Line 345
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	imul	eax, DWORD PTR _part_pos$[ebp], 28
	lea	edx, DWORD PTR _parts$[ebp+eax]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ParseFigurePart
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv158[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	2000					; 000007d0H
	push	28					; 0000001cH
	lea	edx, DWORD PTR _parts$[ebp]
	push	edx
	call	??_M@YGXPAXIIP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fig$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 346
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@GetFigureP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 57788				; 0000e1bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@GetFigureP:
	DD	3
	DD	$LN16@GetFigureP
$LN16@GetFigureP:
	DD	-188					; ffffff44H
	DD	168					; 000000a8H
	DD	$LN12@GetFigureP
	DD	-200					; ffffff38H
	DD	4
	DD	$LN13@GetFigureP
	DD	-56208					; ffff2470H
	DD	56000					; 0000dac0H
	DD	$LN14@GetFigureP
$LN14@GetFigureP:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN13@GetFigureP:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN12@GetFigureP:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$0:
	lea	ecx, DWORD PTR _fig$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$2:
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	2000					; 000007d0H
	push	28					; 0000001cH
	lea	eax, DWORD PTR _parts$[ebp]
	push	eax
	call	??_M@YGXPAXIIP6EX0@Z@Z
	ret	0
__unwindfunclet$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$4:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN11@GetFigureP
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1FigurePart@@QAE@XZ
$LN11@GetFigureP:
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-57792]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; GetFigurePart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T2 = -412						; size = 4
_tmp$ = -208						; size = 4
_str$ = -196						; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fig$ = 8						; size = 28
?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; GetFigurePartsCount, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 330
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 404				; 00000194H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 101				; 00000065H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 331
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _str$[ebp]
	call	?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	push	1
	push	3
	lea	eax, DWORD PTR _fig$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 333
	mov	esi, esp
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 334
	mov	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fig$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T2[ebp]
; Line 335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetFigureP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@GetFigureP:
	DD	2
	DD	$LN8@GetFigureP
$LN8@GetFigureP:
	DD	-196					; ffffff3cH
	DD	176					; 000000b0H
	DD	$LN5@GetFigureP
	DD	-208					; ffffff30H
	DD	4
	DD	$LN6@GetFigureP
$LN6@GetFigureP:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN5@GetFigureP:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _fig$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-420]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFigurePartsCount@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; GetFigurePartsCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4541
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4542
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
_TEXT	SEGMENT
tv89 = -272						; size = 4
tv86 = -268						; size = 4
$T1 = -260						; size = 4
$T2 = -245						; size = 1
$T3 = -233						; size = 1
$T4 = -221						; size = 1
__Right_size$ = -20					; size = 4
__Left_size$ = -8					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4444
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4445
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	DWORD PTR __Left_size$[ebp], eax
; Line 4446
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	DWORD PTR __Right_size$[ebp], eax
; Line 4447
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN2@operator
; Line 4448
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@operator:
; Line 4451
	mov	al, BYTE PTR $T4[ebp]
	mov	BYTE PTR $T3[ebp], al
	mov	cl, BYTE PTR $T3[ebp]
	mov	BYTE PTR $T2[ebp], cl
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	DWORD PTR tv89[ebp], eax
	mov	edx, DWORD PTR __Right_size$[ebp]
	push	edx
	mov	eax, DWORD PTR tv89[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv86[ebp]
	push	edx
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@operator:
; Line 4452
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
$T2 = -197						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4516
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
$LN4@operator:
; Line 4518
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	4522					; 000011aaH
	push	OFFSET ??_C@_0FE@LCNAMHNP@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	mov	esi, esp
	push	0
	push	4522					; 000011aaH
	push	OFFSET ??_C@_1KI@BCEOLJOE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@
	push	OFFSET ??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
; Line 4524
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4525
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	176					; 000000b0H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	68					; 00000044H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 350
	mov	DWORD PTR __State$[ebp], 0
; Line 351
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN2@Getstate
; Line 352
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN2@Getstate:
; Line 355
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	jne	SHORT $LN3@Getstate
; Line 356
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 359
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 8
	je	SHORT $LN4@Getstate
; Line 360
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 8
	mov	DWORD PTR __State$[ebp], eax
$LN4@Getstate:
; Line 363
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN5@Getstate
; Line 364
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], eax
$LN5@Getstate:
; Line 367
	mov	eax, DWORD PTR __State$[ebp]
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 329
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 330
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	$LN2@Tidy
; Line 331
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@Tidy
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR tv88[ebp]
	sub	ecx, eax
	push	ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy:
; Line 336
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 337
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 340
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -220						; size = 4
__Pnew$1 = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 298
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN2@Init
; Line 299
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN2@Init:
; Line 303
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN3@Init
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 6
	cmp	eax, 6
	je	$LN3@Init
; Line 305
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Pnew$1[ebp], eax
; Line 306
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 307
	mov	eax, DWORD PTR __Pnew$1[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 309
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 4
	jne	SHORT $LN5@Init
; Line 310
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Init:
; Line 313
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 2
	jne	SHORT $LN6@Init
; Line 314
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 24					; 00000018H
	je	SHORT $LN9@Init
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN10@Init
$LN9@Init:
	mov	eax, DWORD PTR __Pnew$1[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN10@Init:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	mov	eax, DWORD PTR tv137[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 316
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 4
	je	SHORT $LN6@Init
; Line 317
	mov	esi, esp
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Init:
; Line 321
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 1
	mov	DWORD PTR __State$[ebp], eax
; Line 322
	jmp	SHORT $LN4@Init
$LN3@Init:
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
$LN4@Init:
; Line 326
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [eax+60], ecx
$LN8@Init:
; Line 327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
tv195 = -288						; size = 8
__Newptr$ = -84						; size = 4
__Seekdist$ = -72					; size = 4
__Seeklow$ = -60					; size = 4
__Pptr_old$ = -48					; size = 4
__Gptr_old$ = -36					; size = 4
__Off$ = -24						; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 266
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 267
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr_old$[ebp], eax
; Line 268
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr_old$[ebp], eax
; Line 269
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN2@seekpos
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	cmp	ecx, DWORD PTR __Pptr_old$[ebp]
	jae	SHORT $LN2@seekpos
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pptr_old$[ebp]
	mov	DWORD PTR [eax+56], ecx
$LN2@seekpos:
; Line 273
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Seeklow$[ebp], eax
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Seekdist$[ebp], ecx
; Line 275
	mov	eax, DWORD PTR __Seekdist$[ebp]
	cdq
	mov	DWORD PTR tv195[ebp], eax
	mov	DWORD PTR tv195[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv195[ebp+4]
	jb	SHORT $LN3@seekpos
	ja	SHORT $LN10@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv195[ebp]
	jbe	SHORT $LN3@seekpos
$LN10@seekpos:
; Line 276
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekpos
$LN3@seekpos:
; Line 279
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN4@seekpos
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN6@seekpos
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN5@seekpos
$LN6@seekpos:
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN4@seekpos
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	jne	SHORT $LN4@seekpos
$LN5@seekpos:
; Line 280
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekpos
$LN4@seekpos:
; Line 283
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Newptr$[ebp], eax
; Line 284
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN7@seekpos
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN7@seekpos
; Line 285
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Seeklow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@seekpos:
; Line 288
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN8@seekpos
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN8@seekpos
; Line 289
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Seeklow$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@seekpos:
; Line 292
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekpos:
; Line 293
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
tv247 = -308						; size = 8
tv244 = -300						; size = 8
tv88 = -296						; size = 4
__Newptr$ = -96						; size = 4
__Both$1 = -84						; size = 4
__Newoff$ = -72						; size = 8
__Seekdist$ = -56					; size = 4
__Seeklow$ = -44					; size = 4
__Pptr_old$ = -32					; size = 4
__Gptr_old$ = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Mode$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 207
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr_old$[ebp], eax
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr_old$[ebp], eax
; Line 209
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN4@seekoff
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	cmp	ecx, DWORD PTR __Pptr_old$[ebp]
	jae	SHORT $LN4@seekoff
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pptr_old$[ebp]
	mov	DWORD PTR [eax+56], ecx
$LN4@seekoff:
; Line 213
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Seeklow$[ebp], eax
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Seekdist$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR __Way$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	cmp	DWORD PTR tv88[ebp], 0
	je	SHORT $LN5@seekoff
	cmp	DWORD PTR tv88[ebp], 1
	je	SHORT $LN7@seekoff
	cmp	DWORD PTR tv88[ebp], 2
	je	SHORT $LN6@seekoff
	jmp	SHORT $LN15@seekoff
$LN5@seekoff:
; Line 218
	xorps	xmm0, xmm0
	movlpd	QWORD PTR __Newoff$[ebp], xmm0
; Line 219
	jmp	SHORT $LN2@seekoff
$LN6@seekoff:
; Line 221
	mov	eax, DWORD PTR __Seekdist$[ebp]
	cdq
	mov	DWORD PTR __Newoff$[ebp], eax
	mov	DWORD PTR __Newoff$[ebp+4], edx
; Line 222
	jmp	SHORT $LN2@seekoff
$LN7@seekoff:
; Line 224
	mov	DWORD PTR __Both$1[ebp], 3
; Line 225
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 3
	cmp	eax, 3
	je	SHORT $LN15@seekoff
; Line 226
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN9@seekoff
; Line 227
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	jne	SHORT $LN12@seekoff
	cmp	DWORD PTR __Seeklow$[ebp], 0
	jne	SHORT $LN11@seekoff
$LN12@seekoff:
; Line 228
	mov	eax, DWORD PTR __Gptr_old$[ebp]
	sub	eax, DWORD PTR __Seeklow$[ebp]
	cdq
	mov	DWORD PTR __Newoff$[ebp], eax
	mov	DWORD PTR __Newoff$[ebp+4], edx
; Line 229
	jmp	SHORT $LN2@seekoff
$LN11@seekoff:
; Line 230
	jmp	SHORT $LN15@seekoff
$LN9@seekoff:
; Line 231
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN15@seekoff
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	jne	SHORT $LN14@seekoff
	cmp	DWORD PTR __Seeklow$[ebp], 0
	jne	SHORT $LN15@seekoff
$LN14@seekoff:
; Line 232
	mov	eax, DWORD PTR __Pptr_old$[ebp]
	sub	eax, DWORD PTR __Seeklow$[ebp]
	cdq
	mov	DWORD PTR __Newoff$[ebp], eax
	mov	DWORD PTR __Newoff$[ebp+4], edx
; Line 233
	jmp	SHORT $LN2@seekoff
$LN15@seekoff:
; Line 240
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekoff
$LN2@seekoff:
; Line 243
	mov	ecx, DWORD PTR __Off$[ebp]
	add	ecx, DWORD PTR __Newoff$[ebp]
	mov	esi, DWORD PTR __Off$[ebp+4]
	adc	esi, DWORD PTR __Newoff$[ebp+4]
	mov	eax, DWORD PTR __Seekdist$[ebp]
	cdq
	mov	DWORD PTR tv244[ebp], ecx
	mov	DWORD PTR tv244[ebp+4], esi
	mov	DWORD PTR tv247[ebp], eax
	mov	DWORD PTR tv247[ebp+4], edx
	mov	edx, DWORD PTR tv244[ebp+4]
	cmp	edx, DWORD PTR tv247[ebp+4]
	jb	SHORT $LN16@seekoff
	ja	SHORT $LN23@seekoff
	mov	eax, DWORD PTR tv244[ebp]
	cmp	eax, DWORD PTR tv247[ebp]
	jbe	SHORT $LN16@seekoff
$LN23@seekoff:
; Line 244
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekoff
$LN16@seekoff:
; Line 247
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Newoff$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	adc	ecx, DWORD PTR __Newoff$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], ecx
; Line 248
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN19@seekoff
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN18@seekoff
$LN19@seekoff:
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN17@seekoff
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	jne	SHORT $LN17@seekoff
$LN18@seekoff:
; Line 249
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekoff
$LN17@seekoff:
; Line 252
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Newptr$[ebp], eax
; Line 253
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN20@seekoff
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN20@seekoff
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Seeklow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@seekoff:
; Line 257
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN21@seekoff
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN21@seekoff
; Line 258
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Seeklow$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@seekoff:
; Line 261
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekoff:
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
__Local_highwater$ = -48				; size = 4
__Pptr$ = -36						; size = 4
__Gptr$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 179
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr$[ebp], eax
; Line 180
	cmp	DWORD PTR __Gptr$[ebp], 0
	jne	SHORT $LN2@underflow
; Line 181
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@underflow
$LN2@underflow:
; Line 184
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Gptr$[ebp], eax
	jae	SHORT $LN3@underflow
; Line 185
	mov	eax, DWORD PTR __Gptr$[ebp]
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	jmp	$LN1@underflow
$LN3@underflow:
; Line 189
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr$[ebp], eax
; Line 190
	cmp	DWORD PTR __Pptr$[ebp], 0
	je	SHORT $LN5@underflow
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN4@underflow
$LN5@underflow:
; Line 191
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@underflow
$LN4@underflow:
; Line 194
	lea	eax, DWORD PTR __Pptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	call	??$max@PAD@std@@YAABQADABQAD0@Z		; std::max<char *>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Local_highwater$[ebp], edx
; Line 195
	mov	eax, DWORD PTR __Local_highwater$[ebp]
	cmp	eax, DWORD PTR __Gptr$[ebp]
	ja	SHORT $LN6@underflow
; Line 196
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@underflow
$LN6@underflow:
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Local_highwater$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 200
	mov	esi, esp
	mov	eax, DWORD PTR __Local_highwater$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 201
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
$LN1@underflow:
; Line 202
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@underflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@underflow:
	DD	1
	DD	$LN9@underflow
$LN9@underflow:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@underflow
$LN8@underflow:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -233						; size = 1
$T3 = -224						; size = 4
__Gptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 162
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr$[ebp], eax
; Line 164
	cmp	DWORD PTR __Gptr$[ebp], 0
	je	SHORT $LN3@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Gptr$[ebp], eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T2[ebp], al
	mov	ecx, 1
	imul	edx, ecx, -1
	add	edx, DWORD PTR __Gptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z ; std::_Narrow_char_traits<char,int>::eq
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@pbackfail
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN2@pbackfail
$LN3@pbackfail:
; Line 166
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@pbackfail
$LN2@pbackfail:
; Line 170
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
; Line 172
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
$LN4@pbackfail:
; Line 175
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	add	esp, 4
$LN1@pbackfail:
; Line 176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -296						; size = 4
__New_pnext$ = -92					; size = 4
__Newptr$ = -80						; size = 4
__Newsize$ = -68					; size = 4
__Oldptr$ = -56						; size = 4
__Oldsize$ = -44					; size = 4
__Epptr$ = -32						; size = 4
__Pptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN2@overflow
; Line 106
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN2@overflow:
; Line 109
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@overflow
; Line 110
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	add	esp, 4
	jmp	$LN1@overflow
$LN3@overflow:
; Line 113
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr$[ebp], eax
; Line 114
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Epptr$[ebp], eax
; Line 115
	cmp	DWORD PTR __Pptr$[ebp], 0
	je	SHORT $LN4@overflow
	mov	eax, DWORD PTR __Pptr$[ebp]
	cmp	eax, DWORD PTR __Epptr$[ebp]
	jae	SHORT $LN4@overflow
; Line 116
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 117
	mov	eax, DWORD PTR __Pptr$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 118
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN1@overflow
$LN4@overflow:
; Line 122
	mov	DWORD PTR __Oldsize$[ebp], 0
; Line 123
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Oldptr$[ebp], eax
; Line 124
	cmp	DWORD PTR __Pptr$[ebp], 0
	je	SHORT $LN5@overflow
; Line 125
	mov	eax, DWORD PTR __Epptr$[ebp]
	sub	eax, DWORD PTR __Oldptr$[ebp]
	mov	DWORD PTR __Oldsize$[ebp], eax
$LN5@overflow:
; Line 129
	cmp	DWORD PTR __Oldsize$[ebp], 32		; 00000020H
	jae	SHORT $LN6@overflow
; Line 130
	mov	DWORD PTR __Newsize$[ebp], 32		; 00000020H
	jmp	SHORT $LN7@overflow
$LN6@overflow:
; Line 131
	cmp	DWORD PTR __Oldsize$[ebp], 1073741823	; 3fffffffH
	jae	SHORT $LN8@overflow
; Line 132
	mov	eax, DWORD PTR __Oldsize$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax
	jmp	SHORT $LN7@overflow
$LN8@overflow:
; Line 133
	cmp	DWORD PTR __Oldsize$[ebp], 2147483647	; 7fffffffH
	jae	SHORT $LN10@overflow
; Line 134
	mov	DWORD PTR __Newsize$[ebp], 2147483647	; 7fffffffH
; Line 135
	jmp	SHORT $LN7@overflow
$LN10@overflow:
; Line 136
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN7@overflow:
; Line 139
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Newptr$[ebp], eax
; Line 140
	mov	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 142
	mov	eax, DWORD PTR __Newptr$[ebp]
	add	eax, DWORD PTR __Oldsize$[ebp]
	mov	DWORD PTR __New_pnext$[ebp], eax
; Line 143
	mov	eax, DWORD PTR __New_pnext$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 145
	mov	eax, DWORD PTR __Newptr$[ebp]
	add	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR __New_pnext$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN12@overflow
; Line 147
	mov	esi, esp
	mov	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 148
	jmp	SHORT $LN13@overflow
$LN12@overflow:
; Line 149
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$[ebp]
	add	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@overflow:
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	SHORT $LN14@overflow
; Line 153
	mov	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$[ebp]
	push	ecx
	call	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN14@overflow:
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 157
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 158
	mov	eax, DWORD PTR __Meta$[ebp]
$LN1@overflow:
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 71
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 37
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Line 38
	mov	eax, DWORD PTR __Mode$[ebp]
	push	eax
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 39
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-108], edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
_$initVBases$ = 16					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\sstream
; Line 533
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __8C31CCAC_sstream
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_stri
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_stri:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 104				; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	eax, DWORD PTR __Mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_stri
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_stri:
	ret	0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv2261 = -25664						; size = 4
tv2153 = -25664						; size = 4
tv2259 = -25660						; size = 4
tv2151 = -25660						; size = 4
tv2463 = -25656						; size = 4
tv2413 = -25656						; size = 4
tv2257 = -25652						; size = 4
tv2149 = -25652						; size = 4
tv2462 = -25648						; size = 4
tv2412 = -25648						; size = 4
tv2255 = -25644						; size = 4
tv2147 = -25644						; size = 4
tv2461 = -25640						; size = 4
tv2411 = -25640						; size = 4
tv2253 = -25636						; size = 4
tv2145 = -25636						; size = 4
tv2460 = -25632						; size = 4
tv2410 = -25632						; size = 4
tv1966 = -25632						; size = 4
tv2251 = -25628						; size = 4
tv2143 = -25628						; size = 4
tv1964 = -25628						; size = 4
tv2459 = -25624						; size = 4
tv2409 = -25624						; size = 4
tv2329 = -25624						; size = 4
tv2249 = -25620						; size = 4
tv2141 = -25620						; size = 4
tv1962 = -25620						; size = 4
tv2458 = -25616						; size = 4
tv2408 = -25616						; size = 4
tv2328 = -25616						; size = 4
tv2057 = -25616						; size = 4
tv2247 = -25612						; size = 4
tv2139 = -25612						; size = 4
tv2055 = -25612						; size = 4
tv1960 = -25612						; size = 4
tv2457 = -25608						; size = 4
tv2407 = -25608						; size = 4
tv2369 = -25608						; size = 4
tv2327 = -25608						; size = 4
tv2245 = -25604						; size = 4
tv2137 = -25604						; size = 4
tv2053 = -25604						; size = 4
tv1958 = -25604						; size = 4
tv2456 = -25600						; size = 4
tv2406 = -25600						; size = 4
tv2368 = -25600						; size = 4
tv2326 = -25600						; size = 4
tv2243 = -25596						; size = 4
tv2135 = -25596						; size = 4
tv2051 = -25596						; size = 4
tv1956 = -25596						; size = 4
tv2455 = -25592						; size = 4
tv2405 = -25592						; size = 4
tv2367 = -25592						; size = 4
tv2325 = -25592						; size = 4
tv2241 = -25588						; size = 4
tv2133 = -25588						; size = 4
tv2049 = -25588						; size = 4
tv1954 = -25588						; size = 4
tv2454 = -25584						; size = 4
tv2404 = -25584						; size = 4
tv2366 = -25584						; size = 4
tv2324 = -25584						; size = 4
tv2239 = -25580						; size = 4
tv2131 = -25580						; size = 4
tv2047 = -25580						; size = 4
tv1952 = -25580						; size = 4
tv2453 = -25576						; size = 4
tv2403 = -25576						; size = 4
tv2365 = -25576						; size = 4
tv2323 = -25576						; size = 4
tv2237 = -25572						; size = 4
tv2129 = -25572						; size = 4
tv2045 = -25572						; size = 4
tv1950 = -25572						; size = 4
tv2452 = -25568						; size = 4
tv2402 = -25568						; size = 4
tv2364 = -25568						; size = 4
tv2322 = -25568						; size = 4
tv2301 = -25568						; size = 4
tv2193 = -25568						; size = 4
tv2299 = -25564						; size = 4
tv2235 = -25564						; size = 4
tv2191 = -25564						; size = 4
tv2127 = -25564						; size = 4
tv2043 = -25564						; size = 4
tv1948 = -25564						; size = 4
tv2482 = -25560						; size = 4
tv2451 = -25560						; size = 4
tv2432 = -25560						; size = 4
tv2401 = -25560						; size = 4
tv2363 = -25560						; size = 4
tv2321 = -25560						; size = 4
tv2297 = -25556						; size = 4
tv2233 = -25556						; size = 4
tv2189 = -25556						; size = 4
tv2125 = -25556						; size = 4
tv2041 = -25556						; size = 4
tv1946 = -25556						; size = 4
tv2481 = -25552						; size = 4
tv2450 = -25552						; size = 4
tv2431 = -25552						; size = 4
tv2400 = -25552						; size = 4
tv2362 = -25552						; size = 4
tv2320 = -25552						; size = 4
tv2295 = -25548						; size = 4
tv2231 = -25548						; size = 4
tv2187 = -25548						; size = 4
tv2123 = -25548						; size = 4
tv2039 = -25548						; size = 4
tv1944 = -25548						; size = 4
tv2480 = -25544						; size = 4
tv2449 = -25544						; size = 4
tv2430 = -25544						; size = 4
tv2399 = -25544						; size = 4
tv2361 = -25544						; size = 4
tv2319 = -25544						; size = 4
tv2293 = -25540						; size = 4
tv2229 = -25540						; size = 4
tv2185 = -25540						; size = 4
tv2121 = -25540						; size = 4
tv2037 = -25540						; size = 4
tv1942 = -25540						; size = 4
tv2479 = -25536						; size = 4
tv2448 = -25536						; size = 4
tv2429 = -25536						; size = 4
tv2398 = -25536						; size = 4
tv2360 = -25536						; size = 4
tv2318 = -25536						; size = 4
tv1998 = -25536						; size = 4
tv2291 = -25532						; size = 4
tv2227 = -25532						; size = 4
tv2183 = -25532						; size = 4
tv2119 = -25532						; size = 4
tv2035 = -25532						; size = 4
tv1996 = -25532						; size = 4
tv1940 = -25532						; size = 4
tv2478 = -25528						; size = 4
tv2447 = -25528						; size = 4
tv2428 = -25528						; size = 4
tv2397 = -25528						; size = 4
tv2359 = -25528						; size = 4
tv2344 = -25528						; size = 4
tv2317 = -25528						; size = 4
tv2289 = -25524						; size = 4
tv2225 = -25524						; size = 4
tv2181 = -25524						; size = 4
tv2117 = -25524						; size = 4
tv2033 = -25524						; size = 4
tv1994 = -25524						; size = 4
tv1938 = -25524						; size = 4
tv2477 = -25520						; size = 4
tv2446 = -25520						; size = 4
tv2427 = -25520						; size = 4
tv2396 = -25520						; size = 4
tv2358 = -25520						; size = 4
tv2343 = -25520						; size = 4
tv2316 = -25520						; size = 4
tv2085 = -25520						; size = 4
tv2287 = -25516						; size = 4
tv2223 = -25516						; size = 4
tv2179 = -25516						; size = 4
tv2115 = -25516						; size = 4
tv2083 = -25516						; size = 4
tv2031 = -25516						; size = 4
tv1992 = -25516						; size = 4
tv1936 = -25516						; size = 4
tv2476 = -25512						; size = 4
tv2445 = -25512						; size = 4
tv2426 = -25512						; size = 4
tv2395 = -25512						; size = 4
tv2382 = -25512						; size = 4
tv2357 = -25512						; size = 4
tv2342 = -25512						; size = 4
tv2315 = -25512						; size = 4
tv2285 = -25508						; size = 4
tv2221 = -25508						; size = 4
tv2177 = -25508						; size = 4
tv2113 = -25508						; size = 4
tv2081 = -25508						; size = 4
tv2029 = -25508						; size = 4
tv1990 = -25508						; size = 4
tv1934 = -25508						; size = 4
tv2475 = -25504						; size = 4
tv2444 = -25504						; size = 4
tv2425 = -25504						; size = 4
tv2394 = -25504						; size = 4
tv2381 = -25504						; size = 4
tv2356 = -25504						; size = 4
tv2341 = -25504						; size = 4
tv2314 = -25504						; size = 4
tv2283 = -25500						; size = 4
tv2219 = -25500						; size = 4
tv2175 = -25500						; size = 4
tv2111 = -25500						; size = 4
tv2079 = -25500						; size = 4
tv2027 = -25500						; size = 4
tv1988 = -25500						; size = 4
tv1932 = -25500						; size = 4
tv2474 = -25496						; size = 4
tv2443 = -25496						; size = 4
tv2424 = -25496						; size = 4
tv2393 = -25496						; size = 4
tv2380 = -25496						; size = 4
tv2355 = -25496						; size = 4
tv2340 = -25496						; size = 4
tv2313 = -25496						; size = 4
tv2281 = -25492						; size = 4
tv2217 = -25492						; size = 4
tv2173 = -25492						; size = 4
tv2109 = -25492						; size = 4
tv2077 = -25492						; size = 4
tv2025 = -25492						; size = 4
tv1986 = -25492						; size = 4
tv1930 = -25492						; size = 4
tv2473 = -25488						; size = 4
tv2442 = -25488						; size = 4
tv2423 = -25488						; size = 4
tv2392 = -25488						; size = 4
tv2379 = -25488						; size = 4
tv2354 = -25488						; size = 4
tv2339 = -25488						; size = 4
tv2312 = -25488						; size = 4
tv2279 = -25484						; size = 4
tv2215 = -25484						; size = 4
tv2171 = -25484						; size = 4
tv2107 = -25484						; size = 4
tv2075 = -25484						; size = 4
tv2023 = -25484						; size = 4
tv1984 = -25484						; size = 4
tv1928 = -25484						; size = 4
tv2472 = -25480						; size = 4
tv2441 = -25480						; size = 4
tv2422 = -25480						; size = 4
tv2391 = -25480						; size = 4
tv2378 = -25480						; size = 4
tv2353 = -25480						; size = 4
tv2338 = -25480						; size = 4
tv2311 = -25480						; size = 4
tv2277 = -25476						; size = 4
tv2213 = -25476						; size = 4
tv2169 = -25476						; size = 4
tv2105 = -25476						; size = 4
tv2073 = -25476						; size = 4
tv2021 = -25476						; size = 4
tv1982 = -25476						; size = 4
tv1926 = -25476						; size = 4
tv2471 = -25472						; size = 4
tv2440 = -25472						; size = 4
tv2421 = -25472						; size = 4
tv2390 = -25472						; size = 4
tv2377 = -25472						; size = 4
tv2352 = -25472						; size = 4
tv2337 = -25472						; size = 4
tv2310 = -25472						; size = 4
tv2275 = -25468						; size = 4
tv2211 = -25468						; size = 4
tv2167 = -25468						; size = 4
tv2103 = -25468						; size = 4
tv2071 = -25468						; size = 4
tv2019 = -25468						; size = 4
tv1980 = -25468						; size = 4
tv1924 = -25468						; size = 4
tv2470 = -25464						; size = 4
tv2439 = -25464						; size = 4
tv2420 = -25464						; size = 4
tv2389 = -25464						; size = 4
tv2376 = -25464						; size = 4
tv2351 = -25464						; size = 4
tv2336 = -25464						; size = 4
tv542 = -25464						; size = 4
tv2273 = -25460						; size = 4
tv2209 = -25460						; size = 4
tv2165 = -25460						; size = 4
tv2101 = -25460						; size = 4
tv2069 = -25460						; size = 4
tv2017 = -25460						; size = 4
tv1978 = -25460						; size = 4
tv1922 = -25460						; size = 4
tv2469 = -25456						; size = 4
tv2438 = -25456						; size = 4
tv2419 = -25456						; size = 4
tv2388 = -25456						; size = 4
tv2375 = -25456						; size = 4
tv2350 = -25456						; size = 4
tv2335 = -25456						; size = 4
tv926 = -25456						; size = 4
tv2271 = -25452						; size = 4
tv2207 = -25452						; size = 4
tv2163 = -25452						; size = 4
tv2099 = -25452						; size = 4
tv2067 = -25452						; size = 4
tv2015 = -25452						; size = 4
tv1976 = -25452						; size = 4
tv1920 = -25452						; size = 4
tv2468 = -25448						; size = 4
tv2437 = -25448						; size = 4
tv2418 = -25448						; size = 4
tv2387 = -25448						; size = 4
tv2374 = -25448						; size = 4
tv2349 = -25448						; size = 4
tv2334 = -25448						; size = 4
tv1426 = -25448						; size = 4
tv2269 = -25444						; size = 4
tv2205 = -25444						; size = 4
tv2161 = -25444						; size = 4
tv2097 = -25444						; size = 4
tv2065 = -25444						; size = 4
tv2013 = -25444						; size = 4
tv1974 = -25444						; size = 4
tv1918 = -25444						; size = 4
tv2467 = -25440						; size = 4
tv2436 = -25440						; size = 4
tv2417 = -25440						; size = 4
tv2386 = -25440						; size = 4
tv2373 = -25440						; size = 4
tv2348 = -25440						; size = 4
tv2333 = -25440						; size = 4
tv1894 = -25440						; size = 4
tv2267 = -25436						; size = 4
tv2203 = -25436						; size = 4
tv2159 = -25436						; size = 4
tv2095 = -25436						; size = 4
tv2063 = -25436						; size = 4
tv2011 = -25436						; size = 4
tv1972 = -25436						; size = 4
tv1916 = -25436						; size = 4
tv2466 = -25432						; size = 4
tv2435 = -25432						; size = 4
tv2416 = -25432						; size = 4
tv2385 = -25432						; size = 4
tv2372 = -25432						; size = 4
tv2347 = -25432						; size = 4
tv2332 = -25432						; size = 4
tv1904 = -25432						; size = 4
tv2265 = -25428						; size = 4
tv2201 = -25428						; size = 4
tv2157 = -25428						; size = 4
tv2093 = -25428						; size = 4
tv2061 = -25428						; size = 4
tv2009 = -25428						; size = 4
tv1970 = -25428						; size = 4
tv1914 = -25428						; size = 4
tv2465 = -25424						; size = 4
tv2434 = -25424						; size = 4
tv2415 = -25424						; size = 4
tv2384 = -25424						; size = 4
tv2371 = -25424						; size = 4
tv2346 = -25424						; size = 4
tv2331 = -25424						; size = 4
tv66 = -25424						; size = 4
tv2263 = -25420						; size = 4
tv2199 = -25420						; size = 4
tv2155 = -25420						; size = 4
tv2091 = -25420						; size = 4
tv2059 = -25420						; size = 4
tv2007 = -25420						; size = 4
tv1968 = -25420						; size = 4
tv1912 = -25420						; size = 4
tv2464 = -25416						; size = 4
tv2433 = -25416						; size = 4
tv2414 = -25416						; size = 4
tv2383 = -25416						; size = 4
tv2370 = -25416						; size = 4
tv2345 = -25416						; size = 4
tv2330 = -25416						; size = 4
tv73 = -25416						; size = 4
tv1780 = -25413						; size = 1
tv1568 = -25413						; size = 1
tv1280 = -25413						; size = 1
tv1068 = -25413						; size = 1
tv845 = -25413						; size = 1
tv666 = -25413						; size = 1
tv450 = -25413						; size = 1
tv228 = -25413						; size = 1
$T2 = -25408						; size = 4
$T3 = -25396						; size = 28
$T4 = -25360						; size = 28
$T5 = -25324						; size = 28
$T6 = -25288						; size = 28
$T7 = -25252						; size = 28
$T8 = -25216						; size = 28
$T9 = -25180						; size = 28
$T10 = -25144						; size = 28
$T11 = -25108						; size = 28
$T12 = -25072						; size = 28
$T13 = -25036						; size = 28
$T14 = -25000						; size = 28
$T15 = -24964						; size = 28
$T16 = -24928						; size = 28
$T17 = -24892						; size = 28
$T18 = -24856						; size = 28
$T19 = -24820						; size = 28
$T20 = -24784						; size = 28
$T21 = -24748						; size = 28
$T22 = -24712						; size = 28
$T23 = -24676						; size = 28
$T24 = -24640						; size = 28
$T25 = -24604						; size = 28
$T26 = -24568						; size = 28
$T27 = -24532						; size = 28
$T28 = -24496						; size = 28
$T29 = -24460						; size = 28
$T30 = -24424						; size = 28
$T31 = -24388						; size = 28
$T32 = -24352						; size = 28
$T33 = -24316						; size = 28
$T34 = -24280						; size = 28
$T35 = -24244						; size = 28
$T36 = -24208						; size = 28
$T37 = -24172						; size = 28
$T38 = -24136						; size = 28
$T39 = -24100						; size = 28
$T40 = -24064						; size = 28
$T41 = -24028						; size = 28
$T42 = -23992						; size = 28
$T43 = -23956						; size = 28
$T44 = -23920						; size = 28
$T45 = -23884						; size = 28
$T46 = -23848						; size = 28
$T47 = -23812						; size = 28
$T48 = -23776						; size = 28
$T49 = -23740						; size = 28
$T50 = -23704						; size = 28
$T51 = -23668						; size = 28
$T52 = -23632						; size = 28
$T53 = -23596						; size = 28
$T54 = -23560						; size = 28
$T55 = -23524						; size = 28
$T56 = -23488						; size = 28
$T57 = -23452						; size = 28
$T58 = -23416						; size = 28
$T59 = -23380						; size = 28
$T60 = -23344						; size = 28
$T61 = -23308						; size = 28
$T62 = -23272						; size = 28
$T63 = -23236						; size = 28
$T64 = -23200						; size = 28
$T65 = -23164						; size = 28
$T66 = -23128						; size = 28
$T67 = -23092						; size = 28
$T68 = -23056						; size = 28
$T69 = -23020						; size = 28
$T70 = -22984						; size = 28
$T71 = -22948						; size = 28
$T72 = -22912						; size = 28
$T73 = -22876						; size = 28
$T74 = -22840						; size = 28
$T75 = -22804						; size = 28
$T76 = -22768						; size = 28
$T77 = -22732						; size = 28
$T78 = -22696						; size = 28
$T79 = -22660						; size = 28
$T80 = -22624						; size = 28
$T81 = -22588						; size = 28
$T82 = -22552						; size = 28
$T83 = -22516						; size = 28
$T84 = -22480						; size = 28
$T85 = -22444						; size = 28
$T86 = -22408						; size = 28
$T87 = -22372						; size = 28
$T88 = -22336						; size = 28
$T89 = -22300						; size = 28
$T90 = -22264						; size = 28
$T91 = -22228						; size = 28
$T92 = -22192						; size = 28
$T93 = -22156						; size = 28
$T94 = -22120						; size = 28
$T95 = -22084						; size = 28
$T96 = -22048						; size = 28
$T97 = -22012						; size = 28
$T98 = -21976						; size = 28
$T99 = -21940						; size = 28
$T100 = -21904						; size = 28
$T101 = -21868						; size = 28
$T102 = -21832						; size = 28
$T103 = -21796						; size = 28
$T104 = -21760						; size = 28
$T105 = -21724						; size = 28
$T106 = -21688						; size = 28
$T107 = -21652						; size = 28
$T108 = -21616						; size = 28
$T109 = -21580						; size = 28
$T110 = -21544						; size = 28
$T111 = -21508						; size = 28
$T112 = -21472						; size = 28
$T113 = -21436						; size = 28
$T114 = -21400						; size = 28
$T115 = -21364						; size = 28
$T116 = -21328						; size = 28
$T117 = -21292						; size = 28
$T118 = -21256						; size = 28
$T119 = -21220						; size = 28
$T120 = -21184						; size = 28
$T121 = -21148						; size = 28
$T122 = -21112						; size = 28
$T123 = -21076						; size = 28
$T124 = -21040						; size = 28
$T125 = -21004						; size = 28
$T126 = -20968						; size = 28
$T127 = -20932						; size = 28
$T128 = -20896						; size = 28
$T129 = -20860						; size = 28
$T130 = -20824						; size = 28
$T131 = -20788						; size = 28
$T132 = -20752						; size = 28
$T133 = -20716						; size = 28
$T134 = -20680						; size = 28
$T135 = -20644						; size = 28
$T136 = -20608						; size = 28
$T137 = -20572						; size = 28
$T138 = -20536						; size = 28
$T139 = -20500						; size = 28
$T140 = -20464						; size = 28
$T141 = -20428						; size = 28
$T142 = -20392						; size = 28
$T143 = -20356						; size = 28
$T144 = -20320						; size = 28
$T145 = -20284						; size = 28
$T146 = -20248						; size = 28
$T147 = -20212						; size = 28
$T148 = -20176						; size = 28
$T149 = -20140						; size = 28
$T150 = -20104						; size = 28
$T151 = -20068						; size = 28
$T152 = -20032						; size = 28
$T153 = -19996						; size = 28
$T154 = -19960						; size = 28
$T155 = -19924						; size = 28
$T156 = -19888						; size = 28
$T157 = -19852						; size = 28
$T158 = -19816						; size = 28
$T159 = -19780						; size = 28
$T160 = -19744						; size = 28
$T161 = -19708						; size = 28
$T162 = -19672						; size = 28
$T163 = -19636						; size = 28
$T164 = -19600						; size = 28
$T165 = -19564						; size = 28
$T166 = -19528						; size = 28
$T167 = -19492						; size = 28
$T168 = -19456						; size = 28
$T169 = -19420						; size = 28
$T170 = -19384						; size = 28
$T171 = -19348						; size = 28
$T172 = -19312						; size = 28
$T173 = -19276						; size = 28
$T174 = -19240						; size = 28
$T175 = -19204						; size = 28
$T176 = -19168						; size = 28
$T177 = -19132						; size = 28
$T178 = -19096						; size = 28
$T179 = -19060						; size = 28
$T180 = -19024						; size = 28
$T181 = -18988						; size = 28
$T182 = -18952						; size = 28
$T183 = -18916						; size = 28
$T184 = -18880						; size = 28
$T185 = -18844						; size = 28
$T186 = -18808						; size = 28
$T187 = -18772						; size = 28
$T188 = -18736						; size = 28
$T189 = -18700						; size = 28
$T190 = -18664						; size = 28
_fill$191 = -17092					; size = 4
_out$192 = -17080					; size = 4
_b_f$193 = -17068					; size = 4
_g_f$194 = -17056					; size = 4
_r_f$195 = -17044					; size = 4
_b$196 = -17032						; size = 4
_g$197 = -17020						; size = 4
_r$198 = -17008						; size = 4
_use_color$199 = -16996					; size = 4
_angle_rotate$200 = -16984				; size = 4
_Cy$201 = -16972					; size = 4
_Cx$202 = -16960					; size = 4
_By$203 = -16948					; size = 4
_Bx$204 = -16936					; size = 4
_Ay$205 = -16924					; size = 4
_Ax$206 = -16912					; size = 4
_id$207 = -16900					; size = 4
_fill$208 = -16888					; size = 4
_out$209 = -16876					; size = 4
_b_f$210 = -16864					; size = 4
_g_f$211 = -16852					; size = 4
_r_f$212 = -16840					; size = 4
_b$213 = -16828						; size = 4
_g$214 = -16816						; size = 4
_r$215 = -16804						; size = 4
_use_color$216 = -16792					; size = 4
_angle_rotate$217 = -16780				; size = 4
_Cy$218 = -16768					; size = 4
_Cx$219 = -16756					; size = 4
_By$220 = -16744					; size = 4
_Bx$221 = -16732					; size = 4
_Ay$222 = -16720					; size = 4
_Ax$223 = -16708					; size = 4
_id$224 = -16696					; size = 4
_fill$225 = -16684					; size = 4
_out$226 = -16672					; size = 4
_b_f$227 = -16660					; size = 4
_g_f$228 = -16648					; size = 4
_r_f$229 = -16636					; size = 4
_b$230 = -16624						; size = 4
_g$231 = -16612						; size = 4
_r$232 = -16600						; size = 4
_use_color$233 = -16588					; size = 4
_angle_rotate$234 = -16576				; size = 4
_width$235 = -16564					; size = 4
_y$236 = -16552						; size = 4
_x$237 = -16540						; size = 4
_id$238 = -16528					; size = 4
_fill$239 = -16516					; size = 4
_out$240 = -16504					; size = 4
_b_f$241 = -16492					; size = 4
_g_f$242 = -16480					; size = 4
_r_f$243 = -16468					; size = 4
_b$244 = -16456						; size = 4
_g$245 = -16444						; size = 4
_r$246 = -16432						; size = 4
_use_color$247 = -16420					; size = 4
_angle_rotate$248 = -16408				; size = 4
_height$249 = -16396					; size = 4
_width$250 = -16384					; size = 4
_y$251 = -16372						; size = 4
_x$252 = -16360						; size = 4
_id$253 = -16348					; size = 4
_id_type$ = -16336					; size = 4
_str$ = -16324						; size = 176
_tmp$ = -16140						; size = 16120
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fig_full$ = 12						; size = 28
?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; ParseFigurePart, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 25652				; 00006434H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-25664]
	mov	ecx, 6413				; 0000190dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 115
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0FigurePart@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 116
	lea	eax, DWORD PTR _fig_full$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 117
	push	176					; 000000b0H
	lea	ecx, DWORD PTR _str$[ebp]
	call	?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	push	1
	push	3
	lea	eax, DWORD PTR _fig_full$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 119
	mov	esi, esp
	lea	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 121
	cmp	DWORD PTR _id_type$[ebp], 1
	je	$LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 1
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 2
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 3
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 4
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 5
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 10		; 0000000aH
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 20		; 00000014H
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 30		; 0000001eH
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 40		; 00000028H
	je	SHORT $LN30@ParseFigur
	cmp	DWORD PTR _id_type$[ebp], 50		; 00000032H
	je	SHORT $LN30@ParseFigur
	mov	eax, DWORD PTR ?__LINE__Var@?0??ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4JA
	add	eax, 7
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1HK@IHEJHEON@?$AAD?$AA?3?$AA?2?$AAC?$AA?$CL?$AA?$CL?$AAP?$AAR?$AAO?$AAG?$AAR?$AAA?$AAM?$AAU?$AAJ@
	push	OFFSET ??_C@_1CJK@CMAJHMAF@?$AAi?$AAd?$AA_?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAR?$AAE?$AAC?$AAT@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@ParseFigur:
; Line 122
	cmp	DWORD PTR _id_type$[ebp], 1
	jne	$LN2@ParseFigur
; Line 124
	mov	esi, esp
	lea	eax, DWORD PTR _id$253[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 125
	mov	esi, esp
	lea	eax, DWORD PTR _x$252[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	mov	esi, esp
	lea	eax, DWORD PTR _y$251[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 127
	mov	esi, esp
	lea	eax, DWORD PTR _width$250[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 128
	mov	esi, esp
	lea	eax, DWORD PTR _height$249[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	mov	esi, esp
	lea	eax, DWORD PTR _angle_rotate$248[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 130
	mov	esi, esp
	lea	eax, DWORD PTR _use_color$247[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	cmp	DWORD PTR _use_color$247[ebp], 1
	jne	$LN4@ParseFigur
; Line 133
	mov	esi, esp
	lea	eax, DWORD PTR _r$246[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	mov	esi, esp
	lea	eax, DWORD PTR _g$245[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	mov	esi, esp
	lea	eax, DWORD PTR _b$244[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 136
	mov	esi, esp
	lea	eax, DWORD PTR _r_f$243[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 137
	mov	esi, esp
	lea	eax, DWORD PTR _g_f$242[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 138
	mov	esi, esp
	lea	eax, DWORD PTR _b_f$241[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 139
	movzx	eax, BYTE PTR _r_f$243[ebp]
	movzx	ecx, BYTE PTR _g_f$242[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b_f$241[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _out$240[ebp], eax
; Line 140
	movzx	eax, BYTE PTR _r$246[ebp]
	movzx	ecx, BYTE PTR _g$245[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$244[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _fill$239[ebp], eax
; Line 141
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 142
	mov	eax, DWORD PTR _id$253[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 143
	mov	eax, DWORD PTR _x$252[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 144
	mov	eax, DWORD PTR _y$251[ebp]
	mov	DWORD PTR _tmp$[ebp+4], eax
; Line 145
	mov	eax, DWORD PTR _width$250[ebp]
	mov	DWORD PTR _tmp$[ebp+16], eax
; Line 146
	mov	eax, DWORD PTR _height$249[ebp]
	mov	DWORD PTR _tmp$[ebp+20], eax
; Line 147
	mov	eax, DWORD PTR _angle_rotate$248[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 148
	cmp	DWORD PTR _use_color$247[ebp], 0
	je	SHORT $LN31@ParseFigur
	mov	BYTE PTR tv228[ebp], 1
	jmp	SHORT $LN32@ParseFigur
$LN31@ParseFigur:
	mov	BYTE PTR tv228[ebp], 0
$LN32@ParseFigur:
	mov	al, BYTE PTR tv228[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 149
	mov	eax, DWORD PTR _fill$239[ebp]
	mov	DWORD PTR _tmp$[ebp+32], eax
; Line 150
	mov	eax, DWORD PTR _out$240[ebp]
	mov	DWORD PTR _tmp$[ebp+28], eax
; Line 151
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _b_f$241[ebp]
	push	eax
	lea	ecx, DWORD PTR $T190[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv73[ebp], eax
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv1912[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1912[ebp]
	push	eax
	mov	ecx, DWORD PTR _g_f$242[ebp]
	push	ecx
	lea	edx, DWORD PTR $T189[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv1914[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv1914[ebp]
	push	ecx
	mov	edx, DWORD PTR _r_f$243[ebp]
	push	edx
	lea	eax, DWORD PTR $T188[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1904[ebp], eax
	mov	ecx, DWORD PTR tv1904[ebp]
	mov	DWORD PTR tv1916[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv1916[ebp]
	push	edx
	mov	eax, DWORD PTR _b$244[ebp]
	push	eax
	lea	ecx, DWORD PTR $T187[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1894[ebp], eax
	mov	edx, DWORD PTR tv1894[ebp]
	mov	DWORD PTR tv1918[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1918[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$245[ebp]
	push	ecx
	lea	edx, DWORD PTR $T186[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv1426[ebp], eax
	mov	eax, DWORD PTR tv1426[ebp]
	mov	DWORD PTR tv1920[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv1920[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$246[ebp]
	push	edx
	lea	eax, DWORD PTR $T185[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv926[ebp], eax
	mov	ecx, DWORD PTR tv926[ebp]
	mov	DWORD PTR tv1922[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv1922[ebp]
	push	edx
	mov	eax, DWORD PTR _use_color$247[ebp]
	push	eax
	lea	ecx, DWORD PTR $T184[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv542[ebp], eax
	mov	edx, DWORD PTR tv542[ebp]
	mov	DWORD PTR tv1924[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv1924[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$248[ebp]
	push	ecx
	lea	edx, DWORD PTR $T183[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2310[ebp], eax
	mov	eax, DWORD PTR tv2310[ebp]
	mov	DWORD PTR tv1926[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv1926[ebp]
	push	ecx
	mov	edx, DWORD PTR _height$249[ebp]
	push	edx
	lea	eax, DWORD PTR $T182[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2311[ebp], eax
	mov	ecx, DWORD PTR tv2311[ebp]
	mov	DWORD PTR tv1928[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv1928[ebp]
	push	edx
	mov	eax, DWORD PTR _width$250[ebp]
	push	eax
	lea	ecx, DWORD PTR $T181[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2312[ebp], eax
	mov	edx, DWORD PTR tv2312[ebp]
	mov	DWORD PTR tv1930[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	eax, DWORD PTR tv1930[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$251[ebp]
	push	ecx
	lea	edx, DWORD PTR $T180[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2313[ebp], eax
	mov	eax, DWORD PTR tv2313[ebp]
	mov	DWORD PTR tv1932[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv1932[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$252[ebp]
	push	edx
	lea	eax, DWORD PTR $T179[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2314[ebp], eax
	mov	ecx, DWORD PTR tv2314[ebp]
	mov	DWORD PTR tv1934[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv1934[ebp]
	push	edx
	mov	eax, DWORD PTR _id$253[ebp]
	push	eax
	lea	ecx, DWORD PTR $T178[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2315[ebp], eax
	mov	edx, DWORD PTR tv2315[ebp]
	mov	DWORD PTR tv1936[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	eax, DWORD PTR tv1936[ebp]
	push	eax
	mov	ecx, DWORD PTR _id_type$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T177[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2316[ebp], eax
	mov	eax, DWORD PTR tv2316[ebp]
	mov	DWORD PTR tv1938[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR tv1938[ebp]
	push	ecx
	lea	edx, DWORD PTR $T176[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2317[ebp], eax
	mov	eax, DWORD PTR tv2317[ebp]
	mov	DWORD PTR tv1940[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv1940[ebp]
	push	ecx
	lea	edx, DWORD PTR $T175[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2318[ebp], eax
	mov	eax, DWORD PTR tv2318[ebp]
	mov	DWORD PTR tv1942[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv1942[ebp]
	push	ecx
	lea	edx, DWORD PTR $T174[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2319[ebp], eax
	mov	eax, DWORD PTR tv2319[ebp]
	mov	DWORD PTR tv1944[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR tv1944[ebp]
	push	ecx
	lea	edx, DWORD PTR $T173[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2320[ebp], eax
	mov	eax, DWORD PTR tv2320[ebp]
	mov	DWORD PTR tv1946[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	ecx, DWORD PTR tv1946[ebp]
	push	ecx
	lea	edx, DWORD PTR $T172[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2321[ebp], eax
	mov	eax, DWORD PTR tv2321[ebp]
	mov	DWORD PTR tv1948[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, DWORD PTR tv1948[ebp]
	push	ecx
	lea	edx, DWORD PTR $T171[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2322[ebp], eax
	mov	eax, DWORD PTR tv2322[ebp]
	mov	DWORD PTR tv1950[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	ecx, DWORD PTR tv1950[ebp]
	push	ecx
	lea	edx, DWORD PTR $T170[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2323[ebp], eax
	mov	eax, DWORD PTR tv2323[ebp]
	mov	DWORD PTR tv1952[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR tv1952[ebp]
	push	ecx
	lea	edx, DWORD PTR $T169[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2324[ebp], eax
	mov	eax, DWORD PTR tv2324[ebp]
	mov	DWORD PTR tv1954[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	ecx, DWORD PTR tv1954[ebp]
	push	ecx
	lea	edx, DWORD PTR $T168[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2325[ebp], eax
	mov	eax, DWORD PTR tv2325[ebp]
	mov	DWORD PTR tv1956[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	ecx, DWORD PTR tv1956[ebp]
	push	ecx
	lea	edx, DWORD PTR $T167[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2326[ebp], eax
	mov	eax, DWORD PTR tv2326[ebp]
	mov	DWORD PTR tv1958[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	ecx, DWORD PTR tv1958[ebp]
	push	ecx
	lea	edx, DWORD PTR $T166[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2327[ebp], eax
	mov	eax, DWORD PTR tv2327[ebp]
	mov	DWORD PTR tv1960[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	ecx, DWORD PTR tv1960[ebp]
	push	ecx
	lea	edx, DWORD PTR $T165[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2328[ebp], eax
	mov	eax, DWORD PTR tv2328[ebp]
	mov	DWORD PTR tv1962[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	ecx, DWORD PTR tv1962[ebp]
	push	ecx
	lea	edx, DWORD PTR $T164[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2329[ebp], eax
	mov	eax, DWORD PTR tv2329[ebp]
	mov	DWORD PTR tv1964[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR tv1964[ebp]
	push	ecx
	lea	edx, DWORD PTR $T163[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1966[ebp], eax
	mov	eax, DWORD PTR tv1966[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T163[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	lea	ecx, DWORD PTR $T164[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T165[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T166[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T167[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T168[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T169[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T170[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T171[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T172[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T173[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T174[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T175[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T176[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T177[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T178[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T179[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T180[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T181[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T182[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T183[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T184[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T185[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T186[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T187[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T188[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T189[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T190[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 153
	jmp	$LN5@ParseFigur
$LN4@ParseFigur:
; Line 155
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 156
	mov	eax, DWORD PTR _id$253[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 157
	mov	eax, DWORD PTR _x$252[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 158
	mov	eax, DWORD PTR _y$251[ebp]
	mov	DWORD PTR _tmp$[ebp+4], eax
; Line 159
	mov	eax, DWORD PTR _width$250[ebp]
	mov	DWORD PTR _tmp$[ebp+16], eax
; Line 160
	mov	eax, DWORD PTR _height$249[ebp]
	mov	DWORD PTR _tmp$[ebp+20], eax
; Line 161
	mov	eax, DWORD PTR _angle_rotate$248[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 162
	cmp	DWORD PTR _use_color$247[ebp], 0
	je	SHORT $LN33@ParseFigur
	mov	BYTE PTR tv450[ebp], 1
	jmp	SHORT $LN34@ParseFigur
$LN33@ParseFigur:
	mov	BYTE PTR tv450[ebp], 0
$LN34@ParseFigur:
	mov	al, BYTE PTR tv450[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 163
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _use_color$247[ebp]
	push	eax
	lea	ecx, DWORD PTR $T162[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2330[ebp], eax
	mov	edx, DWORD PTR tv2330[ebp]
	mov	DWORD PTR tv1968[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	eax, DWORD PTR tv1968[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$248[ebp]
	push	ecx
	lea	edx, DWORD PTR $T161[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2331[ebp], eax
	mov	eax, DWORD PTR tv2331[ebp]
	mov	DWORD PTR tv1970[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	ecx, DWORD PTR tv1970[ebp]
	push	ecx
	mov	edx, DWORD PTR _height$249[ebp]
	push	edx
	lea	eax, DWORD PTR $T160[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2332[ebp], eax
	mov	ecx, DWORD PTR tv2332[ebp]
	mov	DWORD PTR tv1972[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	edx, DWORD PTR tv1972[ebp]
	push	edx
	mov	eax, DWORD PTR _width$250[ebp]
	push	eax
	lea	ecx, DWORD PTR $T159[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2333[ebp], eax
	mov	edx, DWORD PTR tv2333[ebp]
	mov	DWORD PTR tv1974[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	eax, DWORD PTR tv1974[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$251[ebp]
	push	ecx
	lea	edx, DWORD PTR $T158[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2334[ebp], eax
	mov	eax, DWORD PTR tv2334[ebp]
	mov	DWORD PTR tv1976[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	ecx, DWORD PTR tv1976[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$252[ebp]
	push	edx
	lea	eax, DWORD PTR $T157[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2335[ebp], eax
	mov	ecx, DWORD PTR tv2335[ebp]
	mov	DWORD PTR tv1978[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	edx, DWORD PTR tv1978[ebp]
	push	edx
	mov	eax, DWORD PTR _id$253[ebp]
	push	eax
	lea	ecx, DWORD PTR $T156[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2336[ebp], eax
	mov	edx, DWORD PTR tv2336[ebp]
	mov	DWORD PTR tv1980[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	eax, DWORD PTR tv1980[ebp]
	push	eax
	mov	ecx, DWORD PTR _id_type$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T155[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2337[ebp], eax
	mov	eax, DWORD PTR tv2337[ebp]
	mov	DWORD PTR tv1982[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	ecx, DWORD PTR tv1982[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2338[ebp], eax
	mov	eax, DWORD PTR tv2338[ebp]
	mov	DWORD PTR tv1984[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR tv1984[ebp]
	push	ecx
	lea	edx, DWORD PTR $T153[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2339[ebp], eax
	mov	eax, DWORD PTR tv2339[ebp]
	mov	DWORD PTR tv1986[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	ecx, DWORD PTR tv1986[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2340[ebp], eax
	mov	eax, DWORD PTR tv2340[ebp]
	mov	DWORD PTR tv1988[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR tv1988[ebp]
	push	ecx
	lea	edx, DWORD PTR $T151[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2341[ebp], eax
	mov	eax, DWORD PTR tv2341[ebp]
	mov	DWORD PTR tv1990[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR tv1990[ebp]
	push	ecx
	lea	edx, DWORD PTR $T150[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2342[ebp], eax
	mov	eax, DWORD PTR tv2342[ebp]
	mov	DWORD PTR tv1992[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	ecx, DWORD PTR tv1992[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2343[ebp], eax
	mov	eax, DWORD PTR tv2343[ebp]
	mov	DWORD PTR tv1994[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	ecx, DWORD PTR tv1994[ebp]
	push	ecx
	lea	edx, DWORD PTR $T148[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2344[ebp], eax
	mov	eax, DWORD PTR tv2344[ebp]
	mov	DWORD PTR tv1996[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	ecx, DWORD PTR tv1996[ebp]
	push	ecx
	lea	edx, DWORD PTR $T147[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1998[ebp], eax
	mov	eax, DWORD PTR tv1998[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T147[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T148[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T149[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T150[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T151[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T152[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T153[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T154[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T155[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T156[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T157[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T158[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T159[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T160[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T161[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T162[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@ParseFigur:
; Line 165
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FigurePart@@QAE@$$QAU0@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fig_full$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@ParseFigur
; Line 166
	jmp	$LN3@ParseFigur
$LN2@ParseFigur:
; Line 167
	cmp	DWORD PTR _id_type$[ebp], 2
	jne	$LN6@ParseFigur
; Line 169
	mov	esi, esp
	lea	eax, DWORD PTR _id$238[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 170
	mov	esi, esp
	lea	eax, DWORD PTR _x$237[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	mov	esi, esp
	lea	eax, DWORD PTR _y$236[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	esi, esp
	lea	eax, DWORD PTR _width$235[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 173
	mov	esi, esp
	lea	eax, DWORD PTR _angle_rotate$234[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 174
	mov	esi, esp
	lea	eax, DWORD PTR _use_color$233[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 175
	cmp	DWORD PTR _use_color$233[ebp], 1
	jne	$LN8@ParseFigur
; Line 177
	mov	esi, esp
	lea	eax, DWORD PTR _r$232[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 178
	mov	esi, esp
	lea	eax, DWORD PTR _g$231[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 179
	mov	esi, esp
	lea	eax, DWORD PTR _b$230[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 180
	mov	esi, esp
	lea	eax, DWORD PTR _r_f$229[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 181
	mov	esi, esp
	lea	eax, DWORD PTR _g_f$228[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 182
	mov	esi, esp
	lea	eax, DWORD PTR _b_f$227[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 183
	movzx	eax, BYTE PTR _r_f$229[ebp]
	movzx	ecx, BYTE PTR _g_f$228[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b_f$227[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _out$226[ebp], eax
; Line 184
	movzx	eax, BYTE PTR _r$232[ebp]
	movzx	ecx, BYTE PTR _g$231[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$230[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _fill$225[ebp], eax
; Line 185
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 186
	mov	eax, DWORD PTR _id$238[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 187
	mov	eax, DWORD PTR _x$237[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 188
	mov	eax, DWORD PTR _y$236[ebp]
	mov	DWORD PTR _tmp$[ebp+4], eax
; Line 189
	mov	eax, DWORD PTR _width$235[ebp]
	mov	DWORD PTR _tmp$[ebp+16], eax
; Line 190
	mov	eax, DWORD PTR _angle_rotate$234[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 191
	cmp	DWORD PTR _use_color$233[ebp], 0
	je	SHORT $LN35@ParseFigur
	mov	BYTE PTR tv666[ebp], 1
	jmp	SHORT $LN36@ParseFigur
$LN35@ParseFigur:
	mov	BYTE PTR tv666[ebp], 0
$LN36@ParseFigur:
	mov	al, BYTE PTR tv666[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 192
	mov	eax, DWORD PTR _fill$225[ebp]
	mov	DWORD PTR _tmp$[ebp+32], eax
; Line 193
	mov	eax, DWORD PTR _out$226[ebp]
	mov	DWORD PTR _tmp$[ebp+28], eax
; Line 194
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _b_f$227[ebp]
	push	eax
	lea	ecx, DWORD PTR $T146[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2345[ebp], eax
	mov	edx, DWORD PTR tv2345[ebp]
	mov	DWORD PTR tv2007[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	eax, DWORD PTR tv2007[ebp]
	push	eax
	mov	ecx, DWORD PTR _g_f$228[ebp]
	push	ecx
	lea	edx, DWORD PTR $T145[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2346[ebp], eax
	mov	eax, DWORD PTR tv2346[ebp]
	mov	DWORD PTR tv2009[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	ecx, DWORD PTR tv2009[ebp]
	push	ecx
	mov	edx, DWORD PTR _r_f$229[ebp]
	push	edx
	lea	eax, DWORD PTR $T144[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2347[ebp], eax
	mov	ecx, DWORD PTR tv2347[ebp]
	mov	DWORD PTR tv2011[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	edx, DWORD PTR tv2011[ebp]
	push	edx
	mov	eax, DWORD PTR _b$230[ebp]
	push	eax
	lea	ecx, DWORD PTR $T143[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2348[ebp], eax
	mov	edx, DWORD PTR tv2348[ebp]
	mov	DWORD PTR tv2013[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	eax, DWORD PTR tv2013[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$231[ebp]
	push	ecx
	lea	edx, DWORD PTR $T142[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2349[ebp], eax
	mov	eax, DWORD PTR tv2349[ebp]
	mov	DWORD PTR tv2015[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	ecx, DWORD PTR tv2015[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$232[ebp]
	push	edx
	lea	eax, DWORD PTR $T141[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2350[ebp], eax
	mov	ecx, DWORD PTR tv2350[ebp]
	mov	DWORD PTR tv2017[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	edx, DWORD PTR tv2017[ebp]
	push	edx
	mov	eax, DWORD PTR _use_color$233[ebp]
	push	eax
	lea	ecx, DWORD PTR $T140[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2351[ebp], eax
	mov	edx, DWORD PTR tv2351[ebp]
	mov	DWORD PTR tv2019[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	eax, DWORD PTR tv2019[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$234[ebp]
	push	ecx
	lea	edx, DWORD PTR $T139[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2352[ebp], eax
	mov	eax, DWORD PTR tv2352[ebp]
	mov	DWORD PTR tv2021[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	mov	ecx, DWORD PTR tv2021[ebp]
	push	ecx
	mov	edx, DWORD PTR _width$235[ebp]
	push	edx
	lea	eax, DWORD PTR $T138[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2353[ebp], eax
	mov	ecx, DWORD PTR tv2353[ebp]
	mov	DWORD PTR tv2023[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	edx, DWORD PTR tv2023[ebp]
	push	edx
	mov	eax, DWORD PTR _y$236[ebp]
	push	eax
	lea	ecx, DWORD PTR $T137[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2354[ebp], eax
	mov	edx, DWORD PTR tv2354[ebp]
	mov	DWORD PTR tv2025[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	eax, DWORD PTR tv2025[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$237[ebp]
	push	ecx
	lea	edx, DWORD PTR $T136[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2355[ebp], eax
	mov	eax, DWORD PTR tv2355[ebp]
	mov	DWORD PTR tv2027[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	ecx, DWORD PTR tv2027[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$238[ebp]
	push	edx
	lea	eax, DWORD PTR $T135[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2356[ebp], eax
	mov	ecx, DWORD PTR tv2356[ebp]
	mov	DWORD PTR tv2029[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	edx, DWORD PTR tv2029[ebp]
	push	edx
	mov	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T134[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2357[ebp], eax
	mov	edx, DWORD PTR tv2357[ebp]
	mov	DWORD PTR tv2031[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	eax, DWORD PTR tv2031[ebp]
	push	eax
	lea	ecx, DWORD PTR $T133[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2358[ebp], eax
	mov	edx, DWORD PTR tv2358[ebp]
	mov	DWORD PTR tv2033[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	eax, DWORD PTR tv2033[ebp]
	push	eax
	lea	ecx, DWORD PTR $T132[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2359[ebp], eax
	mov	edx, DWORD PTR tv2359[ebp]
	mov	DWORD PTR tv2035[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	eax, DWORD PTR tv2035[ebp]
	push	eax
	lea	ecx, DWORD PTR $T131[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2360[ebp], eax
	mov	edx, DWORD PTR tv2360[ebp]
	mov	DWORD PTR tv2037[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	mov	eax, DWORD PTR tv2037[ebp]
	push	eax
	lea	ecx, DWORD PTR $T130[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2361[ebp], eax
	mov	edx, DWORD PTR tv2361[ebp]
	mov	DWORD PTR tv2039[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	eax, DWORD PTR tv2039[ebp]
	push	eax
	lea	ecx, DWORD PTR $T129[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2362[ebp], eax
	mov	edx, DWORD PTR tv2362[ebp]
	mov	DWORD PTR tv2041[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	eax, DWORD PTR tv2041[ebp]
	push	eax
	lea	ecx, DWORD PTR $T128[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2363[ebp], eax
	mov	edx, DWORD PTR tv2363[ebp]
	mov	DWORD PTR tv2043[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	eax, DWORD PTR tv2043[ebp]
	push	eax
	lea	ecx, DWORD PTR $T127[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2364[ebp], eax
	mov	edx, DWORD PTR tv2364[ebp]
	mov	DWORD PTR tv2045[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	eax, DWORD PTR tv2045[ebp]
	push	eax
	lea	ecx, DWORD PTR $T126[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2365[ebp], eax
	mov	edx, DWORD PTR tv2365[ebp]
	mov	DWORD PTR tv2047[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	eax, DWORD PTR tv2047[ebp]
	push	eax
	lea	ecx, DWORD PTR $T125[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2366[ebp], eax
	mov	edx, DWORD PTR tv2366[ebp]
	mov	DWORD PTR tv2049[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	mov	eax, DWORD PTR tv2049[ebp]
	push	eax
	lea	ecx, DWORD PTR $T124[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2367[ebp], eax
	mov	edx, DWORD PTR tv2367[ebp]
	mov	DWORD PTR tv2051[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	eax, DWORD PTR tv2051[ebp]
	push	eax
	lea	ecx, DWORD PTR $T123[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2368[ebp], eax
	mov	edx, DWORD PTR tv2368[ebp]
	mov	DWORD PTR tv2053[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	mov	eax, DWORD PTR tv2053[ebp]
	push	eax
	lea	ecx, DWORD PTR $T122[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2369[ebp], eax
	mov	edx, DWORD PTR tv2369[ebp]
	mov	DWORD PTR tv2055[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	eax, DWORD PTR tv2055[ebp]
	push	eax
	lea	ecx, DWORD PTR $T121[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2057[ebp], eax
	mov	edx, DWORD PTR tv2057[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T121[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR $T122[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR $T123[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR $T124[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	lea	ecx, DWORD PTR $T125[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T126[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T127[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T128[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T129[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T130[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T131[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T132[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T133[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T134[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T135[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	lea	ecx, DWORD PTR $T136[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	lea	ecx, DWORD PTR $T137[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR $T138[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	lea	ecx, DWORD PTR $T139[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T140[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T141[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	lea	ecx, DWORD PTR $T142[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T143[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T144[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T145[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T146[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 195
	jmp	$LN9@ParseFigur
$LN8@ParseFigur:
; Line 197
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 198
	mov	eax, DWORD PTR _id$238[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 199
	mov	eax, DWORD PTR _x$237[ebp]
	mov	DWORD PTR _tmp$[ebp], eax
; Line 200
	mov	eax, DWORD PTR _y$236[ebp]
	mov	DWORD PTR _tmp$[ebp+4], eax
; Line 201
	mov	eax, DWORD PTR _width$235[ebp]
	mov	DWORD PTR _tmp$[ebp+16], eax
; Line 202
	mov	eax, DWORD PTR _angle_rotate$234[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 203
	cmp	DWORD PTR _use_color$233[ebp], 0
	je	SHORT $LN37@ParseFigur
	mov	BYTE PTR tv845[ebp], 1
	jmp	SHORT $LN38@ParseFigur
$LN37@ParseFigur:
	mov	BYTE PTR tv845[ebp], 0
$LN38@ParseFigur:
	mov	al, BYTE PTR tv845[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 204
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _use_color$233[ebp]
	push	eax
	lea	ecx, DWORD PTR $T120[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2370[ebp], eax
	mov	edx, DWORD PTR tv2370[ebp]
	mov	DWORD PTR tv2059[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	mov	eax, DWORD PTR tv2059[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$234[ebp]
	push	ecx
	lea	edx, DWORD PTR $T119[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2371[ebp], eax
	mov	eax, DWORD PTR tv2371[ebp]
	mov	DWORD PTR tv2061[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	ecx, DWORD PTR tv2061[ebp]
	push	ecx
	mov	edx, DWORD PTR _width$235[ebp]
	push	edx
	lea	eax, DWORD PTR $T118[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2372[ebp], eax
	mov	ecx, DWORD PTR tv2372[ebp]
	mov	DWORD PTR tv2063[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	edx, DWORD PTR tv2063[ebp]
	push	edx
	mov	eax, DWORD PTR _y$236[ebp]
	push	eax
	lea	ecx, DWORD PTR $T117[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2373[ebp], eax
	mov	edx, DWORD PTR tv2373[ebp]
	mov	DWORD PTR tv2065[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	eax, DWORD PTR tv2065[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$237[ebp]
	push	ecx
	lea	edx, DWORD PTR $T116[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2374[ebp], eax
	mov	eax, DWORD PTR tv2374[ebp]
	mov	DWORD PTR tv2067[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	mov	ecx, DWORD PTR tv2067[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$238[ebp]
	push	edx
	lea	eax, DWORD PTR $T115[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2375[ebp], eax
	mov	ecx, DWORD PTR tv2375[ebp]
	mov	DWORD PTR tv2069[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	edx, DWORD PTR tv2069[ebp]
	push	edx
	mov	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T114[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2376[ebp], eax
	mov	edx, DWORD PTR tv2376[ebp]
	mov	DWORD PTR tv2071[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	eax, DWORD PTR tv2071[ebp]
	push	eax
	lea	ecx, DWORD PTR $T113[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2377[ebp], eax
	mov	edx, DWORD PTR tv2377[ebp]
	mov	DWORD PTR tv2073[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	eax, DWORD PTR tv2073[ebp]
	push	eax
	lea	ecx, DWORD PTR $T112[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2378[ebp], eax
	mov	edx, DWORD PTR tv2378[ebp]
	mov	DWORD PTR tv2075[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	mov	eax, DWORD PTR tv2075[ebp]
	push	eax
	lea	ecx, DWORD PTR $T111[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2379[ebp], eax
	mov	edx, DWORD PTR tv2379[ebp]
	mov	DWORD PTR tv2077[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	eax, DWORD PTR tv2077[ebp]
	push	eax
	lea	ecx, DWORD PTR $T110[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2380[ebp], eax
	mov	edx, DWORD PTR tv2380[ebp]
	mov	DWORD PTR tv2079[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	mov	eax, DWORD PTR tv2079[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2381[ebp], eax
	mov	edx, DWORD PTR tv2381[ebp]
	mov	DWORD PTR tv2081[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	eax, DWORD PTR tv2081[ebp]
	push	eax
	lea	ecx, DWORD PTR $T108[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2382[ebp], eax
	mov	edx, DWORD PTR tv2382[ebp]
	mov	DWORD PTR tv2083[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	eax, DWORD PTR tv2083[ebp]
	push	eax
	lea	ecx, DWORD PTR $T107[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2085[ebp], eax
	mov	edx, DWORD PTR tv2085[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T107[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	lea	ecx, DWORD PTR $T108[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	lea	ecx, DWORD PTR $T109[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	lea	ecx, DWORD PTR $T110[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	lea	ecx, DWORD PTR $T111[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	lea	ecx, DWORD PTR $T112[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T113[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T114[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T115[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	lea	ecx, DWORD PTR $T116[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	lea	ecx, DWORD PTR $T117[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	lea	ecx, DWORD PTR $T118[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	lea	ecx, DWORD PTR $T119[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T120[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@ParseFigur:
; Line 206
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FigurePart@@QAE@$$QAU0@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fig_full$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@ParseFigur
; Line 207
	jmp	$LN3@ParseFigur
$LN6@ParseFigur:
; Line 208
	cmp	DWORD PTR _id_type$[ebp], 3
	jne	$LN10@ParseFigur
; Line 210
	mov	esi, esp
	lea	eax, DWORD PTR _id$224[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 211
	mov	esi, esp
	lea	eax, DWORD PTR _Ax$223[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 212
	mov	esi, esp
	lea	eax, DWORD PTR _Ay$222[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 213
	mov	esi, esp
	lea	eax, DWORD PTR _Bx$221[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 214
	mov	esi, esp
	lea	eax, DWORD PTR _By$220[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 215
	mov	esi, esp
	lea	eax, DWORD PTR _Cx$219[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 216
	mov	esi, esp
	lea	eax, DWORD PTR _Cy$218[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 217
	mov	esi, esp
	lea	eax, DWORD PTR _angle_rotate$217[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 218
	mov	esi, esp
	lea	eax, DWORD PTR _use_color$216[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 219
	cmp	DWORD PTR _use_color$216[ebp], 1
	jne	$LN12@ParseFigur
; Line 221
	mov	esi, esp
	lea	eax, DWORD PTR _r$215[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 222
	mov	esi, esp
	lea	eax, DWORD PTR _g$214[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 223
	mov	esi, esp
	lea	eax, DWORD PTR _b$213[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 224
	mov	esi, esp
	lea	eax, DWORD PTR _r_f$212[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 225
	mov	esi, esp
	lea	eax, DWORD PTR _g_f$211[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 226
	mov	esi, esp
	lea	eax, DWORD PTR _b_f$210[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	movzx	eax, BYTE PTR _r_f$212[ebp]
	movzx	ecx, BYTE PTR _g_f$211[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b_f$210[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _out$209[ebp], eax
; Line 228
	movzx	eax, BYTE PTR _r$215[ebp]
	movzx	ecx, BYTE PTR _g$214[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$213[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _fill$208[ebp], eax
; Line 229
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 230
	mov	eax, DWORD PTR _id$224[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 231
	mov	eax, DWORD PTR _Ax$223[ebp]
	mov	DWORD PTR _tmp$[ebp+40], eax
; Line 232
	mov	eax, DWORD PTR _Ay$222[ebp]
	mov	DWORD PTR _tmp$[ebp+44], eax
; Line 233
	mov	eax, DWORD PTR _Cx$219[ebp]
	mov	DWORD PTR _tmp$[ebp+56], eax
; Line 234
	mov	eax, DWORD PTR _Cy$218[ebp]
	mov	DWORD PTR _tmp$[ebp+60], eax
; Line 235
	mov	eax, DWORD PTR _Bx$221[ebp]
	mov	DWORD PTR _tmp$[ebp+48], eax
; Line 236
	mov	eax, DWORD PTR _By$220[ebp]
	mov	DWORD PTR _tmp$[ebp+52], eax
; Line 237
	mov	eax, DWORD PTR _angle_rotate$217[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 238
	cmp	DWORD PTR _use_color$216[ebp], 0
	je	SHORT $LN39@ParseFigur
	mov	BYTE PTR tv1068[ebp], 1
	jmp	SHORT $LN40@ParseFigur
$LN39@ParseFigur:
	mov	BYTE PTR tv1068[ebp], 0
$LN40@ParseFigur:
	mov	al, BYTE PTR tv1068[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 239
	mov	eax, DWORD PTR _fill$208[ebp]
	mov	DWORD PTR _tmp$[ebp+32], eax
; Line 240
	mov	eax, DWORD PTR _out$209[ebp]
	mov	DWORD PTR _tmp$[ebp+28], eax
; Line 241
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _b_f$210[ebp]
	push	eax
	lea	ecx, DWORD PTR $T106[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2383[ebp], eax
	mov	edx, DWORD PTR tv2383[ebp]
	mov	DWORD PTR tv2091[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	eax, DWORD PTR tv2091[ebp]
	push	eax
	mov	ecx, DWORD PTR _g_f$211[ebp]
	push	ecx
	lea	edx, DWORD PTR $T105[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2384[ebp], eax
	mov	eax, DWORD PTR tv2384[ebp]
	mov	DWORD PTR tv2093[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	mov	ecx, DWORD PTR tv2093[ebp]
	push	ecx
	mov	edx, DWORD PTR _r_f$212[ebp]
	push	edx
	lea	eax, DWORD PTR $T104[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2385[ebp], eax
	mov	ecx, DWORD PTR tv2385[ebp]
	mov	DWORD PTR tv2095[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR tv2095[ebp]
	push	edx
	mov	eax, DWORD PTR _b$213[ebp]
	push	eax
	lea	ecx, DWORD PTR $T103[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2386[ebp], eax
	mov	edx, DWORD PTR tv2386[ebp]
	mov	DWORD PTR tv2097[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	mov	eax, DWORD PTR tv2097[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$214[ebp]
	push	ecx
	lea	edx, DWORD PTR $T102[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2387[ebp], eax
	mov	eax, DWORD PTR tv2387[ebp]
	mov	DWORD PTR tv2099[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	ecx, DWORD PTR tv2099[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$215[ebp]
	push	edx
	lea	eax, DWORD PTR $T101[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2388[ebp], eax
	mov	ecx, DWORD PTR tv2388[ebp]
	mov	DWORD PTR tv2101[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	mov	edx, DWORD PTR tv2101[ebp]
	push	edx
	mov	eax, DWORD PTR _use_color$216[ebp]
	push	eax
	lea	ecx, DWORD PTR $T100[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2389[ebp], eax
	mov	edx, DWORD PTR tv2389[ebp]
	mov	DWORD PTR tv2103[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	eax, DWORD PTR tv2103[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$217[ebp]
	push	ecx
	lea	edx, DWORD PTR $T99[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2390[ebp], eax
	mov	eax, DWORD PTR tv2390[ebp]
	mov	DWORD PTR tv2105[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	mov	ecx, DWORD PTR tv2105[ebp]
	push	ecx
	mov	edx, DWORD PTR _Cy$218[ebp]
	push	edx
	lea	eax, DWORD PTR $T98[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2391[ebp], eax
	mov	ecx, DWORD PTR tv2391[ebp]
	mov	DWORD PTR tv2107[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	edx, DWORD PTR tv2107[ebp]
	push	edx
	mov	eax, DWORD PTR _Cx$219[ebp]
	push	eax
	lea	ecx, DWORD PTR $T97[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2392[ebp], eax
	mov	edx, DWORD PTR tv2392[ebp]
	mov	DWORD PTR tv2109[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	mov	eax, DWORD PTR tv2109[ebp]
	push	eax
	mov	ecx, DWORD PTR _By$220[ebp]
	push	ecx
	lea	edx, DWORD PTR $T96[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2393[ebp], eax
	mov	eax, DWORD PTR tv2393[ebp]
	mov	DWORD PTR tv2111[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	ecx, DWORD PTR tv2111[ebp]
	push	ecx
	mov	edx, DWORD PTR _Bx$221[ebp]
	push	edx
	lea	eax, DWORD PTR $T95[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2394[ebp], eax
	mov	ecx, DWORD PTR tv2394[ebp]
	mov	DWORD PTR tv2113[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	edx, DWORD PTR tv2113[ebp]
	push	edx
	mov	eax, DWORD PTR _Ay$222[ebp]
	push	eax
	lea	ecx, DWORD PTR $T94[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2395[ebp], eax
	mov	edx, DWORD PTR tv2395[ebp]
	mov	DWORD PTR tv2115[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	eax, DWORD PTR tv2115[ebp]
	push	eax
	mov	ecx, DWORD PTR _Ax$223[ebp]
	push	ecx
	lea	edx, DWORD PTR $T93[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2396[ebp], eax
	mov	eax, DWORD PTR tv2396[ebp]
	mov	DWORD PTR tv2117[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	ecx, DWORD PTR tv2117[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$224[ebp]
	push	edx
	lea	eax, DWORD PTR $T92[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2397[ebp], eax
	mov	ecx, DWORD PTR tv2397[ebp]
	mov	DWORD PTR tv2119[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	edx, DWORD PTR tv2119[ebp]
	push	edx
	mov	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T91[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2398[ebp], eax
	mov	edx, DWORD PTR tv2398[ebp]
	mov	DWORD PTR tv2121[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	mov	eax, DWORD PTR tv2121[ebp]
	push	eax
	lea	ecx, DWORD PTR $T90[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2399[ebp], eax
	mov	edx, DWORD PTR tv2399[ebp]
	mov	DWORD PTR tv2123[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	eax, DWORD PTR tv2123[ebp]
	push	eax
	lea	ecx, DWORD PTR $T89[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2400[ebp], eax
	mov	edx, DWORD PTR tv2400[ebp]
	mov	DWORD PTR tv2125[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	mov	eax, DWORD PTR tv2125[ebp]
	push	eax
	lea	ecx, DWORD PTR $T88[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2401[ebp], eax
	mov	edx, DWORD PTR tv2401[ebp]
	mov	DWORD PTR tv2127[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	eax, DWORD PTR tv2127[ebp]
	push	eax
	lea	ecx, DWORD PTR $T87[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2402[ebp], eax
	mov	edx, DWORD PTR tv2402[ebp]
	mov	DWORD PTR tv2129[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	mov	eax, DWORD PTR tv2129[ebp]
	push	eax
	lea	ecx, DWORD PTR $T86[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2403[ebp], eax
	mov	edx, DWORD PTR tv2403[ebp]
	mov	DWORD PTR tv2131[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	eax, DWORD PTR tv2131[ebp]
	push	eax
	lea	ecx, DWORD PTR $T85[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2404[ebp], eax
	mov	edx, DWORD PTR tv2404[ebp]
	mov	DWORD PTR tv2133[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	eax, DWORD PTR tv2133[ebp]
	push	eax
	lea	ecx, DWORD PTR $T84[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2405[ebp], eax
	mov	edx, DWORD PTR tv2405[ebp]
	mov	DWORD PTR tv2135[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	eax, DWORD PTR tv2135[ebp]
	push	eax
	lea	ecx, DWORD PTR $T83[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2406[ebp], eax
	mov	edx, DWORD PTR tv2406[ebp]
	mov	DWORD PTR tv2137[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	mov	eax, DWORD PTR tv2137[ebp]
	push	eax
	lea	ecx, DWORD PTR $T82[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2407[ebp], eax
	mov	edx, DWORD PTR tv2407[ebp]
	mov	DWORD PTR tv2139[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	eax, DWORD PTR tv2139[ebp]
	push	eax
	lea	ecx, DWORD PTR $T81[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2408[ebp], eax
	mov	edx, DWORD PTR tv2408[ebp]
	mov	DWORD PTR tv2141[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	eax, DWORD PTR tv2141[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2409[ebp], eax
	mov	edx, DWORD PTR tv2409[ebp]
	mov	DWORD PTR tv2143[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	eax, DWORD PTR tv2143[ebp]
	push	eax
	lea	ecx, DWORD PTR $T79[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2410[ebp], eax
	mov	edx, DWORD PTR tv2410[ebp]
	mov	DWORD PTR tv2145[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	mov	eax, DWORD PTR tv2145[ebp]
	push	eax
	lea	ecx, DWORD PTR $T78[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2411[ebp], eax
	mov	edx, DWORD PTR tv2411[ebp]
	mov	DWORD PTR tv2147[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	eax, DWORD PTR tv2147[ebp]
	push	eax
	lea	ecx, DWORD PTR $T77[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2412[ebp], eax
	mov	edx, DWORD PTR tv2412[ebp]
	mov	DWORD PTR tv2149[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	mov	eax, DWORD PTR tv2149[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2413[ebp], eax
	mov	edx, DWORD PTR tv2413[ebp]
	mov	DWORD PTR tv2151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	eax, DWORD PTR tv2151[ebp]
	push	eax
	lea	ecx, DWORD PTR $T75[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2153[ebp], eax
	mov	edx, DWORD PTR tv2153[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T75[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T76[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	lea	ecx, DWORD PTR $T77[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	lea	ecx, DWORD PTR $T78[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	lea	ecx, DWORD PTR $T79[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	lea	ecx, DWORD PTR $T80[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T81[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T82[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR $T83[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	lea	ecx, DWORD PTR $T84[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	lea	ecx, DWORD PTR $T85[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	ecx, DWORD PTR $T86[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	lea	ecx, DWORD PTR $T87[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	lea	ecx, DWORD PTR $T88[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	lea	ecx, DWORD PTR $T89[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	lea	ecx, DWORD PTR $T90[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T91[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T92[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T93[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T94[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T95[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T96[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	lea	ecx, DWORD PTR $T97[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	lea	ecx, DWORD PTR $T98[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T99[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T100[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	lea	ecx, DWORD PTR $T101[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T102[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T103[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T104[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	lea	ecx, DWORD PTR $T105[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T106[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 242
	jmp	$LN13@ParseFigur
$LN12@ParseFigur:
; Line 244
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 245
	mov	eax, DWORD PTR _id$224[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 246
	mov	eax, DWORD PTR _Ax$223[ebp]
	mov	DWORD PTR _tmp$[ebp+40], eax
; Line 247
	mov	eax, DWORD PTR _Ay$222[ebp]
	mov	DWORD PTR _tmp$[ebp+44], eax
; Line 248
	mov	eax, DWORD PTR _Cx$219[ebp]
	mov	DWORD PTR _tmp$[ebp+56], eax
; Line 249
	mov	eax, DWORD PTR _Cy$218[ebp]
	mov	DWORD PTR _tmp$[ebp+60], eax
; Line 250
	mov	eax, DWORD PTR _Bx$221[ebp]
	mov	DWORD PTR _tmp$[ebp+48], eax
; Line 251
	mov	eax, DWORD PTR _By$220[ebp]
	mov	DWORD PTR _tmp$[ebp+52], eax
; Line 252
	mov	eax, DWORD PTR _angle_rotate$217[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 253
	cmp	DWORD PTR _use_color$216[ebp], 0
	je	SHORT $LN41@ParseFigur
	mov	BYTE PTR tv1280[ebp], 1
	jmp	SHORT $LN42@ParseFigur
$LN41@ParseFigur:
	mov	BYTE PTR tv1280[ebp], 0
$LN42@ParseFigur:
	mov	al, BYTE PTR tv1280[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 254
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _use_color$216[ebp]
	push	eax
	lea	ecx, DWORD PTR $T74[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2414[ebp], eax
	mov	edx, DWORD PTR tv2414[ebp]
	mov	DWORD PTR tv2155[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	eax, DWORD PTR tv2155[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$217[ebp]
	push	ecx
	lea	edx, DWORD PTR $T73[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2415[ebp], eax
	mov	eax, DWORD PTR tv2415[ebp]
	mov	DWORD PTR tv2157[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	ecx, DWORD PTR tv2157[ebp]
	push	ecx
	mov	edx, DWORD PTR _Cy$218[ebp]
	push	edx
	lea	eax, DWORD PTR $T72[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2416[ebp], eax
	mov	ecx, DWORD PTR tv2416[ebp]
	mov	DWORD PTR tv2159[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	edx, DWORD PTR tv2159[ebp]
	push	edx
	mov	eax, DWORD PTR _Cx$219[ebp]
	push	eax
	lea	ecx, DWORD PTR $T71[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2417[ebp], eax
	mov	edx, DWORD PTR tv2417[ebp]
	mov	DWORD PTR tv2161[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	eax, DWORD PTR tv2161[ebp]
	push	eax
	mov	ecx, DWORD PTR _By$220[ebp]
	push	ecx
	lea	edx, DWORD PTR $T70[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2418[ebp], eax
	mov	eax, DWORD PTR tv2418[ebp]
	mov	DWORD PTR tv2163[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	mov	ecx, DWORD PTR tv2163[ebp]
	push	ecx
	mov	edx, DWORD PTR _Bx$221[ebp]
	push	edx
	lea	eax, DWORD PTR $T69[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2419[ebp], eax
	mov	ecx, DWORD PTR tv2419[ebp]
	mov	DWORD PTR tv2165[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	edx, DWORD PTR tv2165[ebp]
	push	edx
	mov	eax, DWORD PTR _Ay$222[ebp]
	push	eax
	lea	ecx, DWORD PTR $T68[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2420[ebp], eax
	mov	edx, DWORD PTR tv2420[ebp]
	mov	DWORD PTR tv2167[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	eax, DWORD PTR tv2167[ebp]
	push	eax
	mov	ecx, DWORD PTR _Ax$223[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2421[ebp], eax
	mov	eax, DWORD PTR tv2421[ebp]
	mov	DWORD PTR tv2169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	mov	ecx, DWORD PTR tv2169[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$224[ebp]
	push	edx
	lea	eax, DWORD PTR $T66[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2422[ebp], eax
	mov	ecx, DWORD PTR tv2422[ebp]
	mov	DWORD PTR tv2171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR tv2171[ebp]
	push	edx
	mov	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2423[ebp], eax
	mov	edx, DWORD PTR tv2423[ebp]
	mov	DWORD PTR tv2173[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	mov	eax, DWORD PTR tv2173[ebp]
	push	eax
	lea	ecx, DWORD PTR $T64[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2424[ebp], eax
	mov	edx, DWORD PTR tv2424[ebp]
	mov	DWORD PTR tv2175[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	mov	eax, DWORD PTR tv2175[ebp]
	push	eax
	lea	ecx, DWORD PTR $T63[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2425[ebp], eax
	mov	edx, DWORD PTR tv2425[ebp]
	mov	DWORD PTR tv2177[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	mov	eax, DWORD PTR tv2177[ebp]
	push	eax
	lea	ecx, DWORD PTR $T62[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2426[ebp], eax
	mov	edx, DWORD PTR tv2426[ebp]
	mov	DWORD PTR tv2179[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	mov	eax, DWORD PTR tv2179[ebp]
	push	eax
	lea	ecx, DWORD PTR $T61[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2427[ebp], eax
	mov	edx, DWORD PTR tv2427[ebp]
	mov	DWORD PTR tv2181[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH
	mov	eax, DWORD PTR tv2181[ebp]
	push	eax
	lea	ecx, DWORD PTR $T60[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2428[ebp], eax
	mov	edx, DWORD PTR tv2428[ebp]
	mov	DWORD PTR tv2183[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 128		; 00000080H
	mov	eax, DWORD PTR tv2183[ebp]
	push	eax
	lea	ecx, DWORD PTR $T59[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2429[ebp], eax
	mov	edx, DWORD PTR tv2429[ebp]
	mov	DWORD PTR tv2185[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H
	mov	eax, DWORD PTR tv2185[ebp]
	push	eax
	lea	ecx, DWORD PTR $T58[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2430[ebp], eax
	mov	edx, DWORD PTR tv2430[ebp]
	mov	DWORD PTR tv2187[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 130		; 00000082H
	mov	eax, DWORD PTR tv2187[ebp]
	push	eax
	lea	ecx, DWORD PTR $T57[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2431[ebp], eax
	mov	edx, DWORD PTR tv2431[ebp]
	mov	DWORD PTR tv2189[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H
	mov	eax, DWORD PTR tv2189[ebp]
	push	eax
	lea	ecx, DWORD PTR $T56[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2432[ebp], eax
	mov	edx, DWORD PTR tv2432[ebp]
	mov	DWORD PTR tv2191[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 132		; 00000084H
	mov	eax, DWORD PTR tv2191[ebp]
	push	eax
	lea	ecx, DWORD PTR $T55[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2193[ebp], eax
	mov	edx, DWORD PTR tv2193[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T55[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H
	lea	ecx, DWORD PTR $T56[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 130		; 00000082H
	lea	ecx, DWORD PTR $T57[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H
	lea	ecx, DWORD PTR $T58[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 128		; 00000080H
	lea	ecx, DWORD PTR $T59[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH
	lea	ecx, DWORD PTR $T60[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	lea	ecx, DWORD PTR $T61[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	lea	ecx, DWORD PTR $T62[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	lea	ecx, DWORD PTR $T63[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	lea	ecx, DWORD PTR $T64[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	lea	ecx, DWORD PTR $T65[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T66[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	lea	ecx, DWORD PTR $T67[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T68[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	lea	ecx, DWORD PTR $T69[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	lea	ecx, DWORD PTR $T70[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	lea	ecx, DWORD PTR $T71[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	lea	ecx, DWORD PTR $T72[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	lea	ecx, DWORD PTR $T73[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T74[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN13@ParseFigur:
; Line 256
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FigurePart@@QAE@$$QAU0@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fig_full$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@ParseFigur
; Line 257
	jmp	$LN3@ParseFigur
$LN10@ParseFigur:
; Line 258
	cmp	DWORD PTR _id_type$[ebp], 4
	jne	$LN3@ParseFigur
; Line 260
	mov	esi, esp
	lea	eax, DWORD PTR _id$207[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 262
	mov	esi, esp
	lea	eax, DWORD PTR _Ax$206[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	mov	esi, esp
	lea	eax, DWORD PTR _Ay$205[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	esi, esp
	lea	eax, DWORD PTR _Bx$204[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 265
	mov	esi, esp
	lea	eax, DWORD PTR _By$203[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	mov	esi, esp
	lea	eax, DWORD PTR _Cx$202[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 267
	mov	esi, esp
	lea	eax, DWORD PTR _Cy$201[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 268
	mov	esi, esp
	lea	eax, DWORD PTR _angle_rotate$200[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 269
	mov	esi, esp
	lea	eax, DWORD PTR _use_color$199[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 270
	cmp	DWORD PTR _use_color$199[ebp], 1
	jne	$LN16@ParseFigur
; Line 272
	mov	esi, esp
	lea	eax, DWORD PTR _r$198[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 273
	mov	esi, esp
	lea	eax, DWORD PTR _g$197[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 274
	mov	esi, esp
	lea	eax, DWORD PTR _b$196[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 275
	mov	esi, esp
	lea	eax, DWORD PTR _r_f$195[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 276
	mov	esi, esp
	lea	eax, DWORD PTR _g_f$194[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 277
	mov	esi, esp
	lea	eax, DWORD PTR _b_f$193[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 278
	movzx	eax, BYTE PTR _r_f$195[ebp]
	movzx	ecx, BYTE PTR _g_f$194[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b_f$193[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _out$192[ebp], eax
; Line 279
	movzx	eax, BYTE PTR _r$198[ebp]
	movzx	ecx, BYTE PTR _g$197[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$196[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _fill$191[ebp], eax
; Line 280
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 281
	mov	eax, DWORD PTR _id$207[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 282
	mov	eax, DWORD PTR _Ax$206[ebp]
	mov	DWORD PTR _tmp$[ebp+40], eax
; Line 283
	mov	eax, DWORD PTR _Ay$205[ebp]
	mov	DWORD PTR _tmp$[ebp+44], eax
; Line 284
	mov	eax, DWORD PTR _Cx$202[ebp]
	mov	DWORD PTR _tmp$[ebp+56], eax
; Line 285
	mov	eax, DWORD PTR _Cy$201[ebp]
	mov	DWORD PTR _tmp$[ebp+60], eax
; Line 286
	mov	eax, DWORD PTR _Bx$204[ebp]
	mov	DWORD PTR _tmp$[ebp+48], eax
; Line 287
	mov	eax, DWORD PTR _By$203[ebp]
	mov	DWORD PTR _tmp$[ebp+52], eax
; Line 288
	mov	eax, DWORD PTR _angle_rotate$200[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 289
	cmp	DWORD PTR _use_color$199[ebp], 0
	je	SHORT $LN43@ParseFigur
	mov	BYTE PTR tv1568[ebp], 1
	jmp	SHORT $LN44@ParseFigur
$LN43@ParseFigur:
	mov	BYTE PTR tv1568[ebp], 0
$LN44@ParseFigur:
	mov	al, BYTE PTR tv1568[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 290
	mov	eax, DWORD PTR _fill$191[ebp]
	mov	DWORD PTR _tmp$[ebp+32], eax
; Line 291
	mov	eax, DWORD PTR _out$192[ebp]
	mov	DWORD PTR _tmp$[ebp+28], eax
; Line 292
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _b_f$193[ebp]
	push	eax
	lea	ecx, DWORD PTR $T54[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2433[ebp], eax
	mov	edx, DWORD PTR tv2433[ebp]
	mov	DWORD PTR tv2199[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	mov	eax, DWORD PTR tv2199[ebp]
	push	eax
	mov	ecx, DWORD PTR _g_f$194[ebp]
	push	ecx
	lea	edx, DWORD PTR $T53[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2434[ebp], eax
	mov	eax, DWORD PTR tv2434[ebp]
	mov	DWORD PTR tv2201[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 134		; 00000086H
	mov	ecx, DWORD PTR tv2201[ebp]
	push	ecx
	mov	edx, DWORD PTR _r_f$195[ebp]
	push	edx
	lea	eax, DWORD PTR $T52[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2435[ebp], eax
	mov	ecx, DWORD PTR tv2435[ebp]
	mov	DWORD PTR tv2203[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 135		; 00000087H
	mov	edx, DWORD PTR tv2203[ebp]
	push	edx
	mov	eax, DWORD PTR _b$196[ebp]
	push	eax
	lea	ecx, DWORD PTR $T51[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2436[ebp], eax
	mov	edx, DWORD PTR tv2436[ebp]
	mov	DWORD PTR tv2205[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	mov	eax, DWORD PTR tv2205[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$197[ebp]
	push	ecx
	lea	edx, DWORD PTR $T50[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2437[ebp], eax
	mov	eax, DWORD PTR tv2437[ebp]
	mov	DWORD PTR tv2207[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	mov	ecx, DWORD PTR tv2207[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$198[ebp]
	push	edx
	lea	eax, DWORD PTR $T49[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2438[ebp], eax
	mov	ecx, DWORD PTR tv2438[ebp]
	mov	DWORD PTR tv2209[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 138		; 0000008aH
	mov	edx, DWORD PTR tv2209[ebp]
	push	edx
	mov	eax, DWORD PTR _use_color$199[ebp]
	push	eax
	lea	ecx, DWORD PTR $T48[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2439[ebp], eax
	mov	edx, DWORD PTR tv2439[ebp]
	mov	DWORD PTR tv2211[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 139		; 0000008bH
	mov	eax, DWORD PTR tv2211[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$200[ebp]
	push	ecx
	lea	edx, DWORD PTR $T47[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2440[ebp], eax
	mov	eax, DWORD PTR tv2440[ebp]
	mov	DWORD PTR tv2213[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH
	mov	ecx, DWORD PTR tv2213[ebp]
	push	ecx
	mov	edx, DWORD PTR _Cy$201[ebp]
	push	edx
	lea	eax, DWORD PTR $T46[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2441[ebp], eax
	mov	ecx, DWORD PTR tv2441[ebp]
	mov	DWORD PTR tv2215[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	mov	edx, DWORD PTR tv2215[ebp]
	push	edx
	mov	eax, DWORD PTR _Cx$202[ebp]
	push	eax
	lea	ecx, DWORD PTR $T45[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2442[ebp], eax
	mov	edx, DWORD PTR tv2442[ebp]
	mov	DWORD PTR tv2217[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 142		; 0000008eH
	mov	eax, DWORD PTR tv2217[ebp]
	push	eax
	mov	ecx, DWORD PTR _By$203[ebp]
	push	ecx
	lea	edx, DWORD PTR $T44[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2443[ebp], eax
	mov	eax, DWORD PTR tv2443[ebp]
	mov	DWORD PTR tv2219[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 143		; 0000008fH
	mov	ecx, DWORD PTR tv2219[ebp]
	push	ecx
	mov	edx, DWORD PTR _Bx$204[ebp]
	push	edx
	lea	eax, DWORD PTR $T43[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2444[ebp], eax
	mov	ecx, DWORD PTR tv2444[ebp]
	mov	DWORD PTR tv2221[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 144		; 00000090H
	mov	edx, DWORD PTR tv2221[ebp]
	push	edx
	mov	eax, DWORD PTR _Ay$205[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2445[ebp], eax
	mov	edx, DWORD PTR tv2445[ebp]
	mov	DWORD PTR tv2223[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 145		; 00000091H
	mov	eax, DWORD PTR tv2223[ebp]
	push	eax
	mov	ecx, DWORD PTR _Ax$206[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2446[ebp], eax
	mov	eax, DWORD PTR tv2446[ebp]
	mov	DWORD PTR tv2225[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 146		; 00000092H
	mov	ecx, DWORD PTR tv2225[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$207[ebp]
	push	edx
	lea	eax, DWORD PTR $T40[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2447[ebp], eax
	mov	ecx, DWORD PTR tv2447[ebp]
	mov	DWORD PTR tv2227[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 147		; 00000093H
	mov	edx, DWORD PTR tv2227[ebp]
	push	edx
	mov	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T39[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2448[ebp], eax
	mov	edx, DWORD PTR tv2448[ebp]
	mov	DWORD PTR tv2229[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 148		; 00000094H
	mov	eax, DWORD PTR tv2229[ebp]
	push	eax
	lea	ecx, DWORD PTR $T38[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2449[ebp], eax
	mov	edx, DWORD PTR tv2449[ebp]
	mov	DWORD PTR tv2231[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 149		; 00000095H
	mov	eax, DWORD PTR tv2231[ebp]
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2450[ebp], eax
	mov	edx, DWORD PTR tv2450[ebp]
	mov	DWORD PTR tv2233[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 150		; 00000096H
	mov	eax, DWORD PTR tv2233[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2451[ebp], eax
	mov	edx, DWORD PTR tv2451[ebp]
	mov	DWORD PTR tv2235[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 151		; 00000097H
	mov	eax, DWORD PTR tv2235[ebp]
	push	eax
	lea	ecx, DWORD PTR $T35[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2452[ebp], eax
	mov	edx, DWORD PTR tv2452[ebp]
	mov	DWORD PTR tv2237[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 152		; 00000098H
	mov	eax, DWORD PTR tv2237[ebp]
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2453[ebp], eax
	mov	edx, DWORD PTR tv2453[ebp]
	mov	DWORD PTR tv2239[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 153		; 00000099H
	mov	eax, DWORD PTR tv2239[ebp]
	push	eax
	lea	ecx, DWORD PTR $T33[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2454[ebp], eax
	mov	edx, DWORD PTR tv2454[ebp]
	mov	DWORD PTR tv2241[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 154		; 0000009aH
	mov	eax, DWORD PTR tv2241[ebp]
	push	eax
	lea	ecx, DWORD PTR $T32[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2455[ebp], eax
	mov	edx, DWORD PTR tv2455[ebp]
	mov	DWORD PTR tv2243[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 155		; 0000009bH
	mov	eax, DWORD PTR tv2243[ebp]
	push	eax
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2456[ebp], eax
	mov	edx, DWORD PTR tv2456[ebp]
	mov	DWORD PTR tv2245[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 156		; 0000009cH
	mov	eax, DWORD PTR tv2245[ebp]
	push	eax
	lea	ecx, DWORD PTR $T30[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2457[ebp], eax
	mov	edx, DWORD PTR tv2457[ebp]
	mov	DWORD PTR tv2247[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 157		; 0000009dH
	mov	eax, DWORD PTR tv2247[ebp]
	push	eax
	lea	ecx, DWORD PTR $T29[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2458[ebp], eax
	mov	edx, DWORD PTR tv2458[ebp]
	mov	DWORD PTR tv2249[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 158		; 0000009eH
	mov	eax, DWORD PTR tv2249[ebp]
	push	eax
	lea	ecx, DWORD PTR $T28[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2459[ebp], eax
	mov	edx, DWORD PTR tv2459[ebp]
	mov	DWORD PTR tv2251[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 159		; 0000009fH
	mov	eax, DWORD PTR tv2251[ebp]
	push	eax
	lea	ecx, DWORD PTR $T27[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2460[ebp], eax
	mov	edx, DWORD PTR tv2460[ebp]
	mov	DWORD PTR tv2253[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 160		; 000000a0H
	mov	eax, DWORD PTR tv2253[ebp]
	push	eax
	lea	ecx, DWORD PTR $T26[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2461[ebp], eax
	mov	edx, DWORD PTR tv2461[ebp]
	mov	DWORD PTR tv2255[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 161		; 000000a1H
	mov	eax, DWORD PTR tv2255[ebp]
	push	eax
	lea	ecx, DWORD PTR $T25[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2462[ebp], eax
	mov	edx, DWORD PTR tv2462[ebp]
	mov	DWORD PTR tv2257[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 162		; 000000a2H
	mov	eax, DWORD PTR tv2257[ebp]
	push	eax
	lea	ecx, DWORD PTR $T24[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2463[ebp], eax
	mov	edx, DWORD PTR tv2463[ebp]
	mov	DWORD PTR tv2259[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 163		; 000000a3H
	mov	eax, DWORD PTR tv2259[ebp]
	push	eax
	lea	ecx, DWORD PTR $T23[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2261[ebp], eax
	mov	edx, DWORD PTR tv2261[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 162		; 000000a2H
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 161		; 000000a1H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 160		; 000000a0H
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 159		; 0000009fH
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 158		; 0000009eH
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 157		; 0000009dH
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 156		; 0000009cH
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 155		; 0000009bH
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 154		; 0000009aH
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 153		; 00000099H
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 152		; 00000098H
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 151		; 00000097H
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 150		; 00000096H
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 149		; 00000095H
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 148		; 00000094H
	lea	ecx, DWORD PTR $T38[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 147		; 00000093H
	lea	ecx, DWORD PTR $T39[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 146		; 00000092H
	lea	ecx, DWORD PTR $T40[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 145		; 00000091H
	lea	ecx, DWORD PTR $T41[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 144		; 00000090H
	lea	ecx, DWORD PTR $T42[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 143		; 0000008fH
	lea	ecx, DWORD PTR $T43[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 142		; 0000008eH
	lea	ecx, DWORD PTR $T44[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	lea	ecx, DWORD PTR $T45[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH
	lea	ecx, DWORD PTR $T46[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 139		; 0000008bH
	lea	ecx, DWORD PTR $T47[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 138		; 0000008aH
	lea	ecx, DWORD PTR $T48[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	lea	ecx, DWORD PTR $T49[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	lea	ecx, DWORD PTR $T50[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 135		; 00000087H
	lea	ecx, DWORD PTR $T51[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 134		; 00000086H
	lea	ecx, DWORD PTR $T52[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	lea	ecx, DWORD PTR $T53[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T54[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 293
	jmp	$LN17@ParseFigur
$LN16@ParseFigur:
; Line 295
	mov	eax, DWORD PTR _id_type$[ebp]
	mov	DWORD PTR _tmp$[ebp+12], eax
; Line 296
	mov	eax, DWORD PTR _id$207[ebp]
	mov	DWORD PTR _tmp$[ebp+8], eax
; Line 297
	mov	eax, DWORD PTR _Ax$206[ebp]
	mov	DWORD PTR _tmp$[ebp+40], eax
; Line 298
	mov	eax, DWORD PTR _Ay$205[ebp]
	mov	DWORD PTR _tmp$[ebp+44], eax
; Line 299
	mov	eax, DWORD PTR _Cx$202[ebp]
	mov	DWORD PTR _tmp$[ebp+56], eax
; Line 300
	mov	eax, DWORD PTR _Cy$201[ebp]
	mov	DWORD PTR _tmp$[ebp+60], eax
; Line 301
	mov	eax, DWORD PTR _Bx$204[ebp]
	mov	DWORD PTR _tmp$[ebp+48], eax
; Line 302
	mov	eax, DWORD PTR _By$203[ebp]
	mov	DWORD PTR _tmp$[ebp+52], eax
; Line 303
	mov	eax, DWORD PTR _angle_rotate$200[ebp]
	mov	DWORD PTR _tmp$[ebp+24], eax
; Line 304
	cmp	DWORD PTR _use_color$199[ebp], 0
	je	SHORT $LN45@ParseFigur
	mov	BYTE PTR tv1780[ebp], 1
	jmp	SHORT $LN46@ParseFigur
$LN45@ParseFigur:
	mov	BYTE PTR tv1780[ebp], 0
$LN46@ParseFigur:
	mov	al, BYTE PTR tv1780[ebp]
	mov	BYTE PTR _tmp$[ebp+36], al
; Line 305
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _use_color$199[ebp]
	push	eax
	lea	ecx, DWORD PTR $T22[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2464[ebp], eax
	mov	edx, DWORD PTR tv2464[ebp]
	mov	DWORD PTR tv2263[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 164		; 000000a4H
	mov	eax, DWORD PTR tv2263[ebp]
	push	eax
	mov	ecx, DWORD PTR _angle_rotate$200[ebp]
	push	ecx
	lea	edx, DWORD PTR $T21[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2465[ebp], eax
	mov	eax, DWORD PTR tv2465[ebp]
	mov	DWORD PTR tv2265[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 165		; 000000a5H
	mov	ecx, DWORD PTR tv2265[ebp]
	push	ecx
	mov	edx, DWORD PTR _Cy$201[ebp]
	push	edx
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2466[ebp], eax
	mov	ecx, DWORD PTR tv2466[ebp]
	mov	DWORD PTR tv2267[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 166		; 000000a6H
	mov	edx, DWORD PTR tv2267[ebp]
	push	edx
	mov	eax, DWORD PTR _Cx$202[ebp]
	push	eax
	lea	ecx, DWORD PTR $T19[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2467[ebp], eax
	mov	edx, DWORD PTR tv2467[ebp]
	mov	DWORD PTR tv2269[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 167		; 000000a7H
	mov	eax, DWORD PTR tv2269[ebp]
	push	eax
	mov	ecx, DWORD PTR _By$203[ebp]
	push	ecx
	lea	edx, DWORD PTR $T18[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2468[ebp], eax
	mov	eax, DWORD PTR tv2468[ebp]
	mov	DWORD PTR tv2271[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 168		; 000000a8H
	mov	ecx, DWORD PTR tv2271[ebp]
	push	ecx
	mov	edx, DWORD PTR _Bx$204[ebp]
	push	edx
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2469[ebp], eax
	mov	ecx, DWORD PTR tv2469[ebp]
	mov	DWORD PTR tv2273[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 169		; 000000a9H
	mov	edx, DWORD PTR tv2273[ebp]
	push	edx
	mov	eax, DWORD PTR _Ay$205[ebp]
	push	eax
	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2470[ebp], eax
	mov	edx, DWORD PTR tv2470[ebp]
	mov	DWORD PTR tv2275[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 170		; 000000aaH
	mov	eax, DWORD PTR tv2275[ebp]
	push	eax
	mov	ecx, DWORD PTR _Ax$206[ebp]
	push	ecx
	lea	edx, DWORD PTR $T15[ebp]
	push	edx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2471[ebp], eax
	mov	eax, DWORD PTR tv2471[ebp]
	mov	DWORD PTR tv2277[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 171		; 000000abH
	mov	ecx, DWORD PTR tv2277[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$207[ebp]
	push	edx
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2472[ebp], eax
	mov	ecx, DWORD PTR tv2472[ebp]
	mov	DWORD PTR tv2279[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 172		; 000000acH
	mov	edx, DWORD PTR tv2279[ebp]
	push	edx
	mov	eax, DWORD PTR _id_type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T13[ebp]
	push	ecx
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	add	esp, 8
	mov	DWORD PTR tv2473[ebp], eax
	mov	edx, DWORD PTR tv2473[ebp]
	mov	DWORD PTR tv2281[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 173		; 000000adH
	mov	eax, DWORD PTR tv2281[ebp]
	push	eax
	lea	ecx, DWORD PTR $T12[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2474[ebp], eax
	mov	edx, DWORD PTR tv2474[ebp]
	mov	DWORD PTR tv2283[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 174		; 000000aeH
	mov	eax, DWORD PTR tv2283[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2475[ebp], eax
	mov	edx, DWORD PTR tv2475[ebp]
	mov	DWORD PTR tv2285[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 175		; 000000afH
	mov	eax, DWORD PTR tv2285[ebp]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2476[ebp], eax
	mov	edx, DWORD PTR tv2476[ebp]
	mov	DWORD PTR tv2287[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 176		; 000000b0H
	mov	eax, DWORD PTR tv2287[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2477[ebp], eax
	mov	edx, DWORD PTR tv2477[ebp]
	mov	DWORD PTR tv2289[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 177		; 000000b1H
	mov	eax, DWORD PTR tv2289[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2478[ebp], eax
	mov	edx, DWORD PTR tv2478[ebp]
	mov	DWORD PTR tv2291[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 178		; 000000b2H
	mov	eax, DWORD PTR tv2291[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2479[ebp], eax
	mov	edx, DWORD PTR tv2479[ebp]
	mov	DWORD PTR tv2293[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 179		; 000000b3H
	mov	eax, DWORD PTR tv2293[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2480[ebp], eax
	mov	edx, DWORD PTR tv2480[ebp]
	mov	DWORD PTR tv2295[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 180		; 000000b4H
	mov	eax, DWORD PTR tv2295[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2481[ebp], eax
	mov	edx, DWORD PTR tv2481[ebp]
	mov	DWORD PTR tv2297[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 181		; 000000b5H
	mov	eax, DWORD PTR tv2297[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2482[ebp], eax
	mov	edx, DWORD PTR tv2482[ebp]
	mov	DWORD PTR tv2299[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 182		; 000000b6H
	mov	eax, DWORD PTR tv2299[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2301[ebp], eax
	mov	edx, DWORD PTR tv2301[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmp$[ebp+16092]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 181		; 000000b5H
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 180		; 000000b4H
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 179		; 000000b3H
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 178		; 000000b2H
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 177		; 000000b1H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 176		; 000000b0H
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 175		; 000000afH
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 174		; 000000aeH
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 173		; 000000adH
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 172		; 000000acH
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 171		; 000000abH
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 170		; 000000aaH
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 169		; 000000a9H
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 168		; 000000a8H
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 167		; 000000a7H
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 166		; 000000a6H
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 165		; 000000a5H
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 164		; 000000a4H
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@ParseFigur:
; Line 307
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FigurePart@@QAE@$$QAU0@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fig_full$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@ParseFigur
$LN3@ParseFigur:
; Line 327
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FigurePart@@QAE@$$QAU0@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??1FigurePart@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fig_full$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@ParseFigur:
; Line 328
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN300@ParseFigur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 25664				; 00006440H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN300@ParseFigur:
	DD	58					; 0000003aH
	DD	$LN299@ParseFigur
$LN299@ParseFigur:
	DD	-16140					; ffffc0f4H
	DD	16120					; 00003ef8H
	DD	$LN240@ParseFigur
	DD	-16324					; ffffc03cH
	DD	176					; 000000b0H
	DD	$LN241@ParseFigur
	DD	-16336					; ffffc030H
	DD	4
	DD	$LN242@ParseFigur
	DD	-16348					; ffffc024H
	DD	4
	DD	$LN243@ParseFigur
	DD	-16360					; ffffc018H
	DD	4
	DD	$LN244@ParseFigur
	DD	-16372					; ffffc00cH
	DD	4
	DD	$LN245@ParseFigur
	DD	-16384					; ffffc000H
	DD	4
	DD	$LN246@ParseFigur
	DD	-16396					; ffffbff4H
	DD	4
	DD	$LN247@ParseFigur
	DD	-16408					; ffffbfe8H
	DD	4
	DD	$LN248@ParseFigur
	DD	-16420					; ffffbfdcH
	DD	4
	DD	$LN249@ParseFigur
	DD	-16432					; ffffbfd0H
	DD	4
	DD	$LN250@ParseFigur
	DD	-16444					; ffffbfc4H
	DD	4
	DD	$LN251@ParseFigur
	DD	-16456					; ffffbfb8H
	DD	4
	DD	$LN252@ParseFigur
	DD	-16468					; ffffbfacH
	DD	4
	DD	$LN253@ParseFigur
	DD	-16480					; ffffbfa0H
	DD	4
	DD	$LN254@ParseFigur
	DD	-16492					; ffffbf94H
	DD	4
	DD	$LN255@ParseFigur
	DD	-16528					; ffffbf70H
	DD	4
	DD	$LN256@ParseFigur
	DD	-16540					; ffffbf64H
	DD	4
	DD	$LN257@ParseFigur
	DD	-16552					; ffffbf58H
	DD	4
	DD	$LN258@ParseFigur
	DD	-16564					; ffffbf4cH
	DD	4
	DD	$LN259@ParseFigur
	DD	-16576					; ffffbf40H
	DD	4
	DD	$LN260@ParseFigur
	DD	-16588					; ffffbf34H
	DD	4
	DD	$LN261@ParseFigur
	DD	-16600					; ffffbf28H
	DD	4
	DD	$LN262@ParseFigur
	DD	-16612					; ffffbf1cH
	DD	4
	DD	$LN263@ParseFigur
	DD	-16624					; ffffbf10H
	DD	4
	DD	$LN264@ParseFigur
	DD	-16636					; ffffbf04H
	DD	4
	DD	$LN265@ParseFigur
	DD	-16648					; ffffbef8H
	DD	4
	DD	$LN266@ParseFigur
	DD	-16660					; ffffbeecH
	DD	4
	DD	$LN267@ParseFigur
	DD	-16696					; ffffbec8H
	DD	4
	DD	$LN268@ParseFigur
	DD	-16708					; ffffbebcH
	DD	4
	DD	$LN269@ParseFigur
	DD	-16720					; ffffbeb0H
	DD	4
	DD	$LN270@ParseFigur
	DD	-16732					; ffffbea4H
	DD	4
	DD	$LN271@ParseFigur
	DD	-16744					; ffffbe98H
	DD	4
	DD	$LN272@ParseFigur
	DD	-16756					; ffffbe8cH
	DD	4
	DD	$LN273@ParseFigur
	DD	-16768					; ffffbe80H
	DD	4
	DD	$LN274@ParseFigur
	DD	-16780					; ffffbe74H
	DD	4
	DD	$LN275@ParseFigur
	DD	-16792					; ffffbe68H
	DD	4
	DD	$LN276@ParseFigur
	DD	-16804					; ffffbe5cH
	DD	4
	DD	$LN277@ParseFigur
	DD	-16816					; ffffbe50H
	DD	4
	DD	$LN278@ParseFigur
	DD	-16828					; ffffbe44H
	DD	4
	DD	$LN279@ParseFigur
	DD	-16840					; ffffbe38H
	DD	4
	DD	$LN280@ParseFigur
	DD	-16852					; ffffbe2cH
	DD	4
	DD	$LN281@ParseFigur
	DD	-16864					; ffffbe20H
	DD	4
	DD	$LN282@ParseFigur
	DD	-16900					; ffffbdfcH
	DD	4
	DD	$LN283@ParseFigur
	DD	-16912					; ffffbdf0H
	DD	4
	DD	$LN284@ParseFigur
	DD	-16924					; ffffbde4H
	DD	4
	DD	$LN285@ParseFigur
	DD	-16936					; ffffbdd8H
	DD	4
	DD	$LN286@ParseFigur
	DD	-16948					; ffffbdccH
	DD	4
	DD	$LN287@ParseFigur
	DD	-16960					; ffffbdc0H
	DD	4
	DD	$LN288@ParseFigur
	DD	-16972					; ffffbdb4H
	DD	4
	DD	$LN289@ParseFigur
	DD	-16984					; ffffbda8H
	DD	4
	DD	$LN290@ParseFigur
	DD	-16996					; ffffbd9cH
	DD	4
	DD	$LN291@ParseFigur
	DD	-17008					; ffffbd90H
	DD	4
	DD	$LN292@ParseFigur
	DD	-17020					; ffffbd84H
	DD	4
	DD	$LN293@ParseFigur
	DD	-17032					; ffffbd78H
	DD	4
	DD	$LN294@ParseFigur
	DD	-17044					; ffffbd6cH
	DD	4
	DD	$LN295@ParseFigur
	DD	-17056					; ffffbd60H
	DD	4
	DD	$LN296@ParseFigur
	DD	-17068					; ffffbd54H
	DD	4
	DD	$LN297@ParseFigur
$LN297@ParseFigur:
	DB	98					; 00000062H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN296@ParseFigur:
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN295@ParseFigur:
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN294@ParseFigur:
	DB	98					; 00000062H
	DB	0
$LN293@ParseFigur:
	DB	103					; 00000067H
	DB	0
$LN292@ParseFigur:
	DB	114					; 00000072H
	DB	0
$LN291@ParseFigur:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN290@ParseFigur:
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN289@ParseFigur:
	DB	67					; 00000043H
	DB	121					; 00000079H
	DB	0
$LN288@ParseFigur:
	DB	67					; 00000043H
	DB	120					; 00000078H
	DB	0
$LN287@ParseFigur:
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	0
$LN286@ParseFigur:
	DB	66					; 00000042H
	DB	120					; 00000078H
	DB	0
$LN285@ParseFigur:
	DB	65					; 00000041H
	DB	121					; 00000079H
	DB	0
$LN284@ParseFigur:
	DB	65					; 00000041H
	DB	120					; 00000078H
	DB	0
$LN283@ParseFigur:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN282@ParseFigur:
	DB	98					; 00000062H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN281@ParseFigur:
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN280@ParseFigur:
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN279@ParseFigur:
	DB	98					; 00000062H
	DB	0
$LN278@ParseFigur:
	DB	103					; 00000067H
	DB	0
$LN277@ParseFigur:
	DB	114					; 00000072H
	DB	0
$LN276@ParseFigur:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN275@ParseFigur:
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN274@ParseFigur:
	DB	67					; 00000043H
	DB	121					; 00000079H
	DB	0
$LN273@ParseFigur:
	DB	67					; 00000043H
	DB	120					; 00000078H
	DB	0
$LN272@ParseFigur:
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	0
$LN271@ParseFigur:
	DB	66					; 00000042H
	DB	120					; 00000078H
	DB	0
$LN270@ParseFigur:
	DB	65					; 00000041H
	DB	121					; 00000079H
	DB	0
$LN269@ParseFigur:
	DB	65					; 00000041H
	DB	120					; 00000078H
	DB	0
$LN268@ParseFigur:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN267@ParseFigur:
	DB	98					; 00000062H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN266@ParseFigur:
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN265@ParseFigur:
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN264@ParseFigur:
	DB	98					; 00000062H
	DB	0
$LN263@ParseFigur:
	DB	103					; 00000067H
	DB	0
$LN262@ParseFigur:
	DB	114					; 00000072H
	DB	0
$LN261@ParseFigur:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN260@ParseFigur:
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN259@ParseFigur:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN258@ParseFigur:
	DB	121					; 00000079H
	DB	0
$LN257@ParseFigur:
	DB	120					; 00000078H
	DB	0
$LN256@ParseFigur:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN255@ParseFigur:
	DB	98					; 00000062H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN254@ParseFigur:
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN253@ParseFigur:
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	0
$LN252@ParseFigur:
	DB	98					; 00000062H
	DB	0
$LN251@ParseFigur:
	DB	103					; 00000067H
	DB	0
$LN250@ParseFigur:
	DB	114					; 00000072H
	DB	0
$LN249@ParseFigur:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN248@ParseFigur:
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN247@ParseFigur:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN246@ParseFigur:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN245@ParseFigur:
	DB	121					; 00000079H
	DB	0
$LN244@ParseFigur:
	DB	120					; 00000078H
	DB	0
$LN243@ParseFigur:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN242@ParseFigur:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN241@ParseFigur:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN240@ParseFigur:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _fig_full$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _tmp$[ebp]
	jmp	??1FigurePart@@QAE@XZ
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T190[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T189[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T188[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T187[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T186[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T185[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T184[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T183[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T182[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T181[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T180[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T179[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T178[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T177[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T176[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T175[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T174[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T173[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T172[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T171[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T170[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24:
	lea	ecx, DWORD PTR $T169[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T168[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26:
	lea	ecx, DWORD PTR $T167[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T166[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28:
	lea	ecx, DWORD PTR $T165[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T164[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31:
	lea	ecx, DWORD PTR $T162[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T161[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33:
	lea	ecx, DWORD PTR $T160[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T159[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35:
	lea	ecx, DWORD PTR $T158[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T157[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T156[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38:
	lea	ecx, DWORD PTR $T155[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39:
	lea	ecx, DWORD PTR $T154[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T153[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T152[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T151[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$43:
	lea	ecx, DWORD PTR $T150[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$44:
	lea	ecx, DWORD PTR $T149[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$45:
	lea	ecx, DWORD PTR $T148[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$48:
	lea	ecx, DWORD PTR $T146[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$49:
	lea	ecx, DWORD PTR $T145[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$50:
	lea	ecx, DWORD PTR $T144[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$51:
	lea	ecx, DWORD PTR $T143[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$52:
	lea	ecx, DWORD PTR $T142[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$53:
	lea	ecx, DWORD PTR $T141[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$54:
	lea	ecx, DWORD PTR $T140[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$55:
	lea	ecx, DWORD PTR $T139[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$56:
	lea	ecx, DWORD PTR $T138[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$57:
	lea	ecx, DWORD PTR $T137[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$58:
	lea	ecx, DWORD PTR $T136[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$59:
	lea	ecx, DWORD PTR $T135[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$60:
	lea	ecx, DWORD PTR $T134[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$61:
	lea	ecx, DWORD PTR $T133[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$62:
	lea	ecx, DWORD PTR $T132[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$63:
	lea	ecx, DWORD PTR $T131[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$64:
	lea	ecx, DWORD PTR $T130[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$65:
	lea	ecx, DWORD PTR $T129[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$66:
	lea	ecx, DWORD PTR $T128[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$67:
	lea	ecx, DWORD PTR $T127[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$68:
	lea	ecx, DWORD PTR $T126[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$69:
	lea	ecx, DWORD PTR $T125[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$70:
	lea	ecx, DWORD PTR $T124[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$71:
	lea	ecx, DWORD PTR $T123[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$72:
	lea	ecx, DWORD PTR $T122[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$74:
	lea	ecx, DWORD PTR $T120[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$75:
	lea	ecx, DWORD PTR $T119[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$76:
	lea	ecx, DWORD PTR $T118[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$77:
	lea	ecx, DWORD PTR $T117[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$78:
	lea	ecx, DWORD PTR $T116[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$79:
	lea	ecx, DWORD PTR $T115[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$80:
	lea	ecx, DWORD PTR $T114[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$81:
	lea	ecx, DWORD PTR $T113[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$82:
	lea	ecx, DWORD PTR $T112[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$83:
	lea	ecx, DWORD PTR $T111[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$84:
	lea	ecx, DWORD PTR $T110[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$85:
	lea	ecx, DWORD PTR $T109[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$86:
	lea	ecx, DWORD PTR $T108[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$88:
	lea	ecx, DWORD PTR $T106[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$89:
	lea	ecx, DWORD PTR $T105[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$90:
	lea	ecx, DWORD PTR $T104[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$91:
	lea	ecx, DWORD PTR $T103[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$92:
	lea	ecx, DWORD PTR $T102[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$93:
	lea	ecx, DWORD PTR $T101[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$94:
	lea	ecx, DWORD PTR $T100[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$95:
	lea	ecx, DWORD PTR $T99[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$96:
	lea	ecx, DWORD PTR $T98[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$97:
	lea	ecx, DWORD PTR $T97[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$98:
	lea	ecx, DWORD PTR $T96[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$99:
	lea	ecx, DWORD PTR $T95[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$100:
	lea	ecx, DWORD PTR $T94[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$101:
	lea	ecx, DWORD PTR $T93[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$102:
	lea	ecx, DWORD PTR $T92[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$103:
	lea	ecx, DWORD PTR $T91[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$104:
	lea	ecx, DWORD PTR $T90[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$105:
	lea	ecx, DWORD PTR $T89[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$106:
	lea	ecx, DWORD PTR $T88[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$107:
	lea	ecx, DWORD PTR $T87[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$108:
	lea	ecx, DWORD PTR $T86[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$109:
	lea	ecx, DWORD PTR $T85[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$110:
	lea	ecx, DWORD PTR $T84[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$111:
	lea	ecx, DWORD PTR $T83[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$112:
	lea	ecx, DWORD PTR $T82[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$113:
	lea	ecx, DWORD PTR $T81[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$114:
	lea	ecx, DWORD PTR $T80[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$115:
	lea	ecx, DWORD PTR $T79[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$116:
	lea	ecx, DWORD PTR $T78[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$117:
	lea	ecx, DWORD PTR $T77[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$118:
	lea	ecx, DWORD PTR $T76[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$120:
	lea	ecx, DWORD PTR $T74[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$121:
	lea	ecx, DWORD PTR $T73[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$122:
	lea	ecx, DWORD PTR $T72[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$123:
	lea	ecx, DWORD PTR $T71[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$124:
	lea	ecx, DWORD PTR $T70[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$125:
	lea	ecx, DWORD PTR $T69[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$126:
	lea	ecx, DWORD PTR $T68[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$127:
	lea	ecx, DWORD PTR $T67[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$128:
	lea	ecx, DWORD PTR $T66[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$129:
	lea	ecx, DWORD PTR $T65[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$130:
	lea	ecx, DWORD PTR $T64[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$131:
	lea	ecx, DWORD PTR $T63[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$132:
	lea	ecx, DWORD PTR $T62[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$133:
	lea	ecx, DWORD PTR $T61[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$134:
	lea	ecx, DWORD PTR $T60[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$135:
	lea	ecx, DWORD PTR $T59[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$136:
	lea	ecx, DWORD PTR $T58[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$137:
	lea	ecx, DWORD PTR $T57[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$138:
	lea	ecx, DWORD PTR $T56[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$140:
	lea	ecx, DWORD PTR $T54[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$141:
	lea	ecx, DWORD PTR $T53[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$142:
	lea	ecx, DWORD PTR $T52[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$143:
	lea	ecx, DWORD PTR $T51[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$144:
	lea	ecx, DWORD PTR $T50[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$145:
	lea	ecx, DWORD PTR $T49[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$146:
	lea	ecx, DWORD PTR $T48[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$147:
	lea	ecx, DWORD PTR $T47[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$148:
	lea	ecx, DWORD PTR $T46[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$149:
	lea	ecx, DWORD PTR $T45[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$150:
	lea	ecx, DWORD PTR $T44[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$151:
	lea	ecx, DWORD PTR $T43[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$152:
	lea	ecx, DWORD PTR $T42[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$153:
	lea	ecx, DWORD PTR $T41[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$154:
	lea	ecx, DWORD PTR $T40[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$155:
	lea	ecx, DWORD PTR $T39[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$156:
	lea	ecx, DWORD PTR $T38[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$157:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$158:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$159:
	lea	ecx, DWORD PTR $T35[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$160:
	lea	ecx, DWORD PTR $T34[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$161:
	lea	ecx, DWORD PTR $T33[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$162:
	lea	ecx, DWORD PTR $T32[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$163:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$164:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$165:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$166:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$167:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$168:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$169:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$170:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$172:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$173:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$174:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$175:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$176:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$177:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$178:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$179:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$180:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$181:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$182:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$183:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$184:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$185:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$186:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$187:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$188:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$189:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$190:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-25668]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ParseFigurePart@@YA?AUFigurePart@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; ParseFigurePart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetRGBfromColorref@@YA?AUrgb@@K@Z
_TEXT	SEGMENT
_tmp$ = -16						; size = 12
$T1 = 8							; size = 4
_color$ = 12						; size = 4
?GetRGBfromColorref@@YA?AUrgb@@K@Z PROC			; GetRGBfromColorref, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 108
	mov	eax, DWORD PTR _color$[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	mov	DWORD PTR _tmp$[ebp], ecx
; Line 109
	movzx	eax, WORD PTR _color$[ebp]
	sar	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	mov	DWORD PTR _tmp$[ebp+4], ecx
; Line 110
	mov	eax, DWORD PTR _color$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	mov	DWORD PTR _tmp$[ebp+8], ecx
; Line 111
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _tmp$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR $T1[ebp]
; Line 112
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetRGBfrom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@GetRGBfrom:
	DD	1
	DD	$LN4@GetRGBfrom
$LN4@GetRGBfrom:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@GetRGBfrom
$LN3@GetRGBfrom:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?GetRGBfromColorref@@YA?AUrgb@@K@Z ENDP			; GetRGBfromColorref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FigurePart@@QAE@$$QAU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FigurePart@@QAE@$$QAU0@@Z PROC			; FigurePart::FigurePart, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+36]
	mov	BYTE PTR [eax+36], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax+52], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+56], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [eax+60], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+64]
	mov	BYTE PTR [eax+64], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+65]
	mov	BYTE PTR [eax+65], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+66]
	mov	BYTE PTR [eax+66], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+67]
	mov	BYTE PTR [eax+67], dl
	push	8000					; 00001f40H
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	push	8000					; 00001f40H
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8068				; 00001f84H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8068				; 00001f84H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16068]
	mov	DWORD PTR [eax+16068], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16072]
	mov	DWORD PTR [eax+16072], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 16076				; 00003eccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16076				; 00003eccH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 16092				; 00003edcH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16092				; 00003edcH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FigurePart@@QAE@$$QAU0@@Z ENDP			; FigurePart::FigurePart
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1FigurePart@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FigurePart@@QAE@XZ PROC				; FigurePart::~FigurePart, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16092				; 00003edcH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FigurePart@@QAE@XZ ENDP				; FigurePart::~FigurePart
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FigurePart@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FigurePart@@QAE@XZ PROC				; FigurePart::FigurePart, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16092				; 00003edcH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FigurePart@@QAE@XZ ENDP				; FigurePart::FigurePart
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TrojBody2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TrojBody2@@QAE@XZ PROC				; TrojBody2::TrojBody2, COMDAT
; _this$ = ecx
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TrojBody2@@QAE@XZ ENDP				; TrojBody2::TrojBody2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Find_number@@YAHQAHHH@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_p$ = 8							; size = 4
_n$ = 12						; size = 4
_x$ = 16						; size = 4
?Find_number@@YAHQAHHH@Z PROC				; Find_number, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\figure_d2d1.h
; Line 659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E90981E3_figure_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 661
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Find_numbe
$LN2@Find_numbe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Find_numbe:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN3@Find_numbe
; Line 662
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jne	SHORT $LN5@Find_numbe
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN1@Find_numbe
$LN5@Find_numbe:
	jmp	SHORT $LN2@Find_numbe
$LN3@Find_numbe:
; Line 663
	or	eax, -1
$LN1@Find_numbe:
; Line 664
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Find_number@@YAHQAHHH@Z ENDP				; Find_number
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Integral_to_string@_WH@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@H@Z
_TEXT	SEGMENT
$T1 = -304						; size = 4
$T2 = -289						; size = 1
__UVal$ = -88						; size = 4
__RNext$ = -76						; size = 4
__Buff_end$ = -64					; size = 4
__Buff$ = -52						; size = 42
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$_Integral_to_string@_WH@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@H@Z PROC ; std::_Integral_to_string<wchar_t,int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 484
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 488
	lea	eax, DWORD PTR __Buff$[ebp]
	push	eax
	call	??$end@_W$0BF@@std@@YAPA_WAAY0BF@_W@Z	; std::end<wchar_t,21>
	add	esp, 4
	mov	DWORD PTR __Buff_end$[ebp], eax
; Line 489
	mov	eax, DWORD PTR __Buff_end$[ebp]
	mov	DWORD PTR __RNext$[ebp], eax
; Line 490
	mov	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR __UVal$[ebp], eax
; Line 491
	cmp	DWORD PTR __Val$[ebp], 0
	jge	SHORT $LN2@Integral_t
; Line 492
	xor	eax, eax
	sub	eax, DWORD PTR __UVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	push	ecx
	call	??$_UIntegral_to_buff@_WI@std@@YAPA_WPA_WI@Z ; std::_UIntegral_to_buff<wchar_t,unsigned int>
	add	esp, 8
	mov	DWORD PTR __RNext$[ebp], eax
; Line 493
	mov	eax, DWORD PTR __RNext$[ebp]
	sub	eax, 2
	mov	DWORD PTR __RNext$[ebp], eax
	mov	ecx, 45					; 0000002dH
	mov	edx, DWORD PTR __RNext$[ebp]
	mov	WORD PTR [edx], cx
; Line 494
	jmp	SHORT $LN3@Integral_t
$LN2@Integral_t:
; Line 495
	mov	eax, DWORD PTR __UVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	push	ecx
	call	??$_UIntegral_to_buff@_WI@std@@YAPA_WPA_WI@Z ; std::_UIntegral_to_buff<wchar_t,unsigned int>
	add	esp, 8
	mov	DWORD PTR __RNext$[ebp], eax
$LN3@Integral_t:
; Line 498
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	eax, DWORD PTR __Buff_end$[ebp]
	push	eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PA_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PA_W0ABV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><wchar_t *,0>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 499
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Integral_t
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Integral_t:
	DD	1
	DD	$LN8@Integral_t
$LN8@Integral_t:
	DD	-52					; ffffffccH
	DD	42					; 0000002aH
	DD	$LN7@Integral_t
$LN7@Integral_t:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
??$_Integral_to_string@_WH@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@H@Z ENDP ; std::_Integral_to_string<wchar_t,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z PROC ; std::to_wstring, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 554
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$_Integral_to_string@_WH@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@H@Z ; std::_Integral_to_string<wchar_t,int>
	add	esp, 8
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 555
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?to_wstring@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ENDP ; std::to_wstring
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Integral_to_string@DH@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@H@Z
_TEXT	SEGMENT
$T1 = -284						; size = 4
$T2 = -269						; size = 1
__UVal$ = -68						; size = 4
__RNext$ = -56						; size = 4
__Buff_end$ = -44					; size = 4
__Buff$ = -32						; size = 21
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$_Integral_to_string@DH@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@H@Z PROC ; std::_Integral_to_string<char,int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 484
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 488
	lea	eax, DWORD PTR __Buff$[ebp]
	push	eax
	call	??$end@D$0BF@@std@@YAPADAAY0BF@D@Z	; std::end<char,21>
	add	esp, 4
	mov	DWORD PTR __Buff_end$[ebp], eax
; Line 489
	mov	eax, DWORD PTR __Buff_end$[ebp]
	mov	DWORD PTR __RNext$[ebp], eax
; Line 490
	mov	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR __UVal$[ebp], eax
; Line 491
	cmp	DWORD PTR __Val$[ebp], 0
	jge	SHORT $LN2@Integral_t
; Line 492
	xor	eax, eax
	sub	eax, DWORD PTR __UVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	push	ecx
	call	??$_UIntegral_to_buff@DI@std@@YAPADPADI@Z ; std::_UIntegral_to_buff<char,unsigned int>
	add	esp, 8
	mov	DWORD PTR __RNext$[ebp], eax
; Line 493
	mov	eax, DWORD PTR __RNext$[ebp]
	sub	eax, 1
	mov	DWORD PTR __RNext$[ebp], eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	mov	BYTE PTR [ecx], 45			; 0000002dH
; Line 494
	jmp	SHORT $LN3@Integral_t
$LN2@Integral_t:
; Line 495
	mov	eax, DWORD PTR __UVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	push	ecx
	call	??$_UIntegral_to_buff@DI@std@@YAPADPADI@Z ; std::_UIntegral_to_buff<char,unsigned int>
	add	esp, 8
	mov	DWORD PTR __RNext$[ebp], eax
$LN3@Integral_t:
; Line 498
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	eax, DWORD PTR __Buff_end$[ebp]
	push	eax
	mov	ecx, DWORD PTR __RNext$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0ABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 499
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Integral_t
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Integral_t:
	DD	1
	DD	$LN8@Integral_t
$LN8@Integral_t:
	DD	-32					; ffffffe0H
	DD	21					; 00000015H
	DD	$LN7@Integral_t
$LN7@Integral_t:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
??$_Integral_to_string@DH@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@H@Z ENDP ; std::_Integral_to_string<char,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::to_string, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\string
; Line 513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __6F1FEC90_string
	call	@__CheckForDebuggerJustMyCode@4
; Line 514
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$_Integral_to_string@DH@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@H@Z ; std::_Integral_to_string<char,int>
	add	esp, 8
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::to_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ungetc@_W@std@@YA_NAB_WPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Wchar$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@_W@std@@YA_NAB_WPAU_iobuf@@@Z PROC		; std::_Ungetc<wchar_t>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 145
	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wchar$[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__ungetwc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 65535				; 0000ffffH
	je	SHORT $LN3@Ungetc
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Ungetc
$LN3@Ungetc:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Ungetc:
	mov	al, BYTE PTR tv69[ebp]
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ungetc@_W@std@@YA_NAB_WPAU_iobuf@@@Z ENDP		; std::_Ungetc<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 130
	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Byte$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	call	DWORD PTR __imp__ungetc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN3@Ungetc
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Ungetc
$LN3@Ungetc:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Ungetc:
	mov	al, BYTE PTR tv69[ebp]
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Fputc@_W@std@@YA_N_WPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Wchar$ = 8						; size = 2
__File$ = 12						; size = 4
??$_Fputc@_W@std@@YA_N_WPAU_iobuf@@@Z PROC		; std::_Fputc<wchar_t>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 112
	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	movzx	ecx, WORD PTR __Wchar$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputwc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 65535				; 0000ffffH
	je	SHORT $LN3@Fputc
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Fputc
$LN3@Fputc:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Fputc:
	mov	al, BYTE PTR tv69[ebp]
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fputc@_W@std@@YA_N_WPAU_iobuf@@@Z ENDP		; std::_Fputc<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__Byte$ = 8						; size = 1
__File$ = 12						; size = 4
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 107
	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	movsx	ecx, BYTE PTR __Byte$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN3@Fputc
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Fputc
$LN3@Fputc:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Fputc:
	mov	al, BYTE PTR tv69[ebp]
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Fgetc@_W@std@@YA_NAA_WPAU_iobuf@@@Z
_TEXT	SEGMENT
__Meta$ = -8						; size = 2
__Wchar$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@_W@std@@YA_NAA_WPAU_iobuf@@@Z PROC		; std::_Fgetc<wchar_t>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 78
	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp__fgetwc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR __Meta$[ebp], ax
	movzx	ecx, WORD PTR __Meta$[ebp]
	cmp	ecx, 65535				; 0000ffffH
	jne	SHORT $LN2@Fgetc
; Line 79
	xor	al, al
	jmp	SHORT $LN1@Fgetc
; Line 80
	jmp	SHORT $LN1@Fgetc
$LN2@Fgetc:
; Line 81
	mov	eax, DWORD PTR __Wchar$[ebp]
	mov	cx, WORD PTR __Meta$[ebp]
	mov	WORD PTR [eax], cx
; Line 82
	mov	al, 1
$LN1@Fgetc:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fgetc@_W@std@@YA_NAA_WPAU_iobuf@@@Z ENDP		; std::_Fgetc<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Meta$ = -8						; size = 4
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\fstream
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B9D77FC5_fstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 67
	mov	esi, esp
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Meta$[ebp], eax
	cmp	DWORD PTR __Meta$[ebp], -1
	jne	SHORT $LN2@Fgetc
; Line 68
	xor	al, al
	jmp	SHORT $LN1@Fgetc
; Line 69
	jmp	SHORT $LN1@Fgetc
$LN2@Fgetc:
; Line 70
	mov	eax, DWORD PTR __Byte$[ebp]
	mov	cl, BYTE PTR __Meta$[ebp]
	mov	BYTE PTR [eax], cl
; Line 71
	mov	al, 1
$LN1@Fgetc:
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\iosfwd
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6B8BB304_iosfwd
	call	@__CheckForDebuggerJustMyCode@4
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [eax+4]
	adc	esi, DWORD PTR [ecx+12]
	mov	eax, edx
	mov	edx, esi
; Line 71
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ PROC ; std::fpos<_Mbstatet>::state, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\iosfwd
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6B8BB304_iosfwd
	call	@__CheckForDebuggerJustMyCode@4
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?state@?$fpos@U_Mbstatet@@@std@@QBE?AU_Mbstatet@@XZ ENDP ; std::fpos<_Mbstatet>::state
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = 8						; size = 8
__Fileposition$ = 16					; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z PROC	; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\iosfwd
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6B8BB304_iosfwd
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	xor	edx, edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __State$[ebp]
	mov	edx, DWORD PTR __State$[ebp+4]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$fpos@U_Mbstatet@@@std@@QAE@U_Mbstatet@@_J@Z ENDP	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\iosfwd
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6B8BB304_iosfwd
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	xor	edx, edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -288						; size = 4
__Psave_guard$3 = -84					; size = 4
__Pfmod$4 = -72						; size = 4
__Pf$5 = -60						; size = 4
__Id$6 = -48						; size = 4
__Psave$7 = -36						; size = 4
__Lock$8 = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xlocale
; Line 426
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __3F5FE0D2_xlocale
	call	@__CheckForDebuggerJustMyCode@4
; Line 427
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 428
	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	DWORD PTR __Psave$7[ebp], eax
; Line 430
	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?id@?$ctype@D@std@@2V0locale@2@A
	call	DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Id$6[ebp], eax
; Line 431
	mov	eax, DWORD PTR __Id$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp]
	call	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 433
	cmp	DWORD PTR __Pf$5[ebp], 0
	jne	$LN2@use_facet
; Line 434
	cmp	DWORD PTR __Psave$7[ebp], 0
	je	SHORT $LN3@use_facet
; Line 435
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
	jmp	$LN2@use_facet
$LN3@use_facet:
; Line 436
	mov	esi, esp
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave$7[ebp]
	push	ecx
	call	DWORD PTR __imp_?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN5@use_facet
; Line 438
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
; Line 442
	jmp	SHORT $LN2@use_facet
$LN5@use_facet:
; Line 443
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pfmod$4[ebp], eax
; Line 444
	push	4
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@PAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 449
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	push	eax
	call	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
	add	esp, 4
; Line 452
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 453
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, eax ; std::_Facetptr<std::ctype<char> >::_Psave
; Line 454
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 456
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAEPAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
; Line 457
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:
; Line 460
	mov	eax, DWORD PTR __Pf$5[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
$LN7@use_facet:
; Line 462
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@use_facet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@use_facet:
	DD	3
	DD	$LN14@use_facet
$LN14@use_facet:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@use_facet
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@use_facet
	DD	-84					; ffffffacH
	DD	4
	DD	$LN12@use_facet
$LN12@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	103					; 00000067H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN11@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN10@use_facet:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$1:
	lea	ecx, DWORD PTR __Psave_guard$3[ebp]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Adl_verify_range@PADPAD@std@@YAXABQAD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PADPAD@std@@YAXABQAD0@Z PROC	; std::_Adl_verify_range<char *,char *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 1267
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@D@std@@YAXQBD0@Z	; std::_Verify_range<char>
	add	esp, 8
; Line 1269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adl_verify_range@PADPAD@std@@YAXABQAD0@Z ENDP	; std::_Adl_verify_range<char *,char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Adl_verify_range@PA_WPA_W@std@@YAXABQA_W0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PA_WPA_W@std@@YAXABQA_W0@Z PROC	; std::_Adl_verify_range<wchar_t *,wchar_t *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; Line 1264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __37A42F42_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 1267
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@_W@std@@YAXQB_W0@Z	; std::_Verify_range<wchar_t>
	add	esp, 8
; Line 1269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adl_verify_range@PA_WPA_W@std@@YAXABQA_W0@Z ENDP	; std::_Adl_verify_range<wchar_t *,wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
tv71 = -232						; size = 4
__Ptr0$ = -32						; size = 4
__Facptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xlocale
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F5FE0D2_xlocale
	call	@__CheckForDebuggerJustMyCode@4
; Line 374
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Id$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR __Id$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN7@Getfacet
$LN6@Getfacet:
	mov	DWORD PTR tv71[ebp], 0
$LN7@Getfacet:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Facptr$[ebp], edx
; Line 375
	cmp	DWORD PTR __Facptr$[ebp], 0
	jne	SHORT $LN3@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, BYTE PTR [ecx+20]
	test	edx, edx
	jne	SHORT $LN2@Getfacet
$LN3@Getfacet:
; Line 376
	mov	eax, DWORD PTR __Facptr$[ebp]
	jmp	SHORT $LN1@Getfacet
$LN2@Getfacet:
; Line 380
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	mov	DWORD PTR __Ptr0$[ebp], eax
; Line 381
	mov	eax, DWORD PTR __Ptr0$[ebp]
	mov	ecx, DWORD PTR __Id$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN4@Getfacet
; Line 382
	mov	eax, DWORD PTR __Ptr0$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Id$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN1@Getfacet
$LN4@Getfacet:
; Line 385
	xor	eax, eax
$LN1@Getfacet:
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
tv84 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xlocale
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F5FE0D2_xlocale
	call	@__CheckForDebuggerJustMyCode@4
; Line 351
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@locale
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@locale
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN3@locale
$LN4@locale:
	mov	DWORD PTR tv84[ebp], 0
$LN3@locale:
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -208						; size = 12
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\typeinfo
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __477BDC5B_typeinfo
	call	@__CheckForDebuggerJustMyCode@4
; Line 65
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_cast@std@@QAE@XZ			; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_cast@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_cast@std@@UAEPAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_cast@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_cast@std@@UAEPAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_cast@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_cast@std@@QAE@ABV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_cast@std@@QAE@ABV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_cast@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_cast@std@@UAE@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_cast@std@@UAE@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_cast@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_cast@std@@QAE@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __332CE83C_vcruntime_typeinfo@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 134
	push	1
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_cast@std@@6B@
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_cast@std@@QAE@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1350
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1351
	mov	eax, DWORD PTR _this$[ebp]
; Line 1352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1347
	mov	eax, DWORD PTR _this$[ebp]
; Line 1348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEABV?$allocator@_W@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEABV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
; Line 4414
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEABV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4408
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4409
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
; Line 4410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4404
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4405
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
; Line 4406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -246						; size = 2
__Al$3 = -44						; size = 4
__Ptr$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4383
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4384
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4385
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall
; Line 4386
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$4[ebp], ecx
; Line 4387
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	DWORD PTR __Al$3[ebp], eax
; Line 4388
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PA_W@std@@YAXAAPA_W@Z ; std::_Destroy_in_place<wchar_t *>
	add	esp, 4
; Line 4389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$4[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$3[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z ; std::allocator<wchar_t>::deallocate
$LN2@Tidy_deall:
; Line 4392
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 4393
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 7
; Line 4395
	xor	eax, eax
	mov	WORD PTR $T2[ebp], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, 2
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ; std::_WChar_traits<wchar_t>::assign
	add	esp, 8
; Line 4396
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -210						; size = 2
_this$ = -8						; size = 4
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4376
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4377
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 4378
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 7
; Line 4380
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, 2
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ; std::_WChar_traits<wchar_t>::assign
	add	esp, 8
; Line 4381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4298
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR __Requested$[ebp]
	push	edx
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAIIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	add	esp, 12					; 0000000cH
; Line 4299
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAIIII@Z
_TEXT	SEGMENT
$T1 = -216						; size = 4
__Masked$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Requested$ = 8					; size = 4
__Old$ = 12						; size = 4
__Max$ = 16						; size = 4
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAIIII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4285
	mov	eax, DWORD PTR __Requested$[ebp]
	or	eax, 7
	mov	DWORD PTR __Masked$[ebp], eax
; Line 4286
	mov	eax, DWORD PTR __Masked$[ebp]
	cmp	eax, DWORD PTR __Max$[ebp]
	jbe	SHORT $LN2@Calculate_
; Line 4287
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN2@Calculate_:
; Line 4290
	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Old$[ebp], ecx
	jbe	SHORT $LN3@Calculate_
; Line 4291
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN3@Calculate_:
; Line 4294
	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	add	eax, DWORD PTR __Old$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Masked$[ebp]
	push	edx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
$LN4@Calculate_:
; Line 4295
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Calculate_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Calculate_:
	DD	1
	DD	$LN6@Calculate_
$LN6@Calculate_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@Calculate_
$LN5@Calculate_:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAIIII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -264						; size = 4
$T2 = -252						; size = 4
$T3 = -240						; size = 4
__Storage_max$ = -36					; size = 4
__Alloc_max$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3773
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3774
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABEABV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
	add	esp, 4
	mov	DWORD PTR __Alloc_max$[ebp], eax
; Line 3775
	mov	DWORD PTR $T3[ebp], 8
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Alloc_max$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Storage_max$[ebp], edx
; Line 3777
	mov	eax, DWORD PTR __Storage_max$[ebp]
	sub	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 3780
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@max_size
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@max_size:
	DD	1
	DD	$LN4@max_size
$LN4@max_size:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@max_size
$LN3@max_size:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3769
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3770
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 3771
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3755
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3756
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
; Line 3757
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3751
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3752
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
; Line 3753
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3194
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3195
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_WChar_traits@_W@std@@SAIPB_W@Z ; std::_WChar_traits<wchar_t>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
; Line 3196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_WI@Z
_TEXT	SEGMENT
$T1 = -257						; size = 1
__Ptr_shifted_after$2 = -56				; size = 4
__Insert_at$3 = -44					; size = 4
__Old_ptr$4 = -32					; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3156
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3158
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEXI@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset
; Line 3159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 3160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Old_size$[ebp]
	cmp	DWORD PTR __Count$[ebp], ecx
	ja	$LN2@insert
; Line 3161
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 3162
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	DWORD PTR __Old_ptr$4[ebp], eax
; Line 3163
	mov	eax, DWORD PTR __Off$[ebp]
	mov	ecx, DWORD PTR __Old_ptr$4[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR __Insert_at$3[ebp], edx
; Line 3168
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	cmp	edx, DWORD PTR __Insert_at$3[ebp]
	jbe	SHORT $LN5@insert
	mov	eax, DWORD PTR __Old_size$[ebp]
	mov	ecx, DWORD PTR __Old_ptr$4[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	cmp	DWORD PTR __Ptr$[ebp], edx
	jbe	SHORT $LN3@insert
$LN5@insert:
; Line 3169
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Ptr_shifted_after$2[ebp], eax
	jmp	SHORT $LN4@insert
$LN3@insert:
; Line 3170
	mov	eax, DWORD PTR __Insert_at$3[ebp]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN6@insert
; Line 3171
	mov	DWORD PTR __Ptr_shifted_after$2[ebp], 0
; Line 3172
	jmp	SHORT $LN4@insert
$LN6@insert:
; Line 3173
	mov	eax, DWORD PTR __Insert_at$3[ebp]
	sub	eax, DWORD PTR __Ptr$[ebp]
	sar	eax, 1
	mov	DWORD PTR __Ptr_shifted_after$2[ebp], eax
$LN4@insert:
; Line 3176
	mov	eax, DWORD PTR __Old_size$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Insert_at$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Insert_at$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::move
	add	esp, 12					; 0000000cH
; Line 3177
	mov	eax, DWORD PTR __Ptr_shifted_after$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_at$3[ebp]
	push	edx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 3178
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Ptr_shifted_after$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR __Ptr_shifted_after$2[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	eax, DWORD PTR __Ptr_shifted_after$2[ebp]
	mov	ecx, DWORD PTR __Insert_at$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 3180
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@insert
$LN2@insert:
; Line 3183
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_grow_by@V<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_09fe38f6114539daa867a3e4d6874f49>@@IPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_09fe38f6114539daa867a3e4d6874f49>,unsigned int,wchar_t const *,unsigned int>
$LN1@insert:
; Line 3192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IQB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3062
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_WChar_traits@_W@std@@SAIPB_W@Z ; std::_WChar_traits<wchar_t>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 3063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -222						; size = 2
__Old_ptr$3 = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3042
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3044
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	ja	SHORT $LN2@assign
; Line 3045
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax
; Line 3046
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 3047
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$3[ebp]
	push	edx
	call	?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::move
	add	esp, 12					; 0000000cH
; Line 3048
	xor	eax, eax
	mov	WORD PTR $T2[ebp], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Old_ptr$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ; std::_WChar_traits<wchar_t>::assign
	add	esp, 8
; Line 3049
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@assign
$LN2@assign:
; Line 3052
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>
$LN1@assign:
; Line 3059
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2957
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2958
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_WChar_traits@_W@std@@SAIPB_W@Z ; std::_WChar_traits<wchar_t>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; Line 2959
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -234						; size = 2
__Old_ptr$3 = -32					; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2935
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2937
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 2938
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Old_size$[ebp]
	cmp	DWORD PTR __Count$[ebp], ecx
	ja	SHORT $LN2@append
; Line 2939
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 2940
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax
; Line 2941
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	mov	eax, DWORD PTR __Old_ptr$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::move
	add	esp, 12					; 0000000cH
; Line 2942
	xor	eax, eax
	mov	WORD PTR $T2[ebp], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Old_ptr$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ; std::_WChar_traits<wchar_t>::assign
	add	esp, 8
; Line 2943
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@append
$LN2@append:
; Line 2946
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_grow_by@V<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV01@IV<lambda_2fb699096920f2dc628cb0826b07831d>@@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_2fb699096920f2dc628cb0826b07831d>,wchar_t const *,unsigned int>
$LN1@append:
; Line 2955
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
__To_delete$ = -48					; size = 4
_$S21$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2800
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2801
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; Line 2803
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S21$[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	lea	eax, DWORD PTR _$S21$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2804
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __To_delete$[ebp], ecx
; Line 2805
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2806
	mov	eax, DWORD PTR __To_delete$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 2808
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@basic_stri:
	DD	1
	DD	$LN4@basic_stri
$LN4@basic_stri:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@basic_stri
$LN3@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	49					; 00000031H
	DB	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2687
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2694
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte
; Line 2696
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
; Line 2697
	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:
; Line 2698
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:
; Line 2702
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
; Line 2703
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
; Line 2704
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
__Right_data_mem$ = -32					; size = 4
__My_data_mem$ = -20					; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2678
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2680
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __My_data_mem$[ebp], eax
; Line 2682
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@_W@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __Right_data_mem$[ebp], eax
; Line 2684
	push	24					; 00000018H
	mov	eax, DWORD PTR __Right_data_mem$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data_mem$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2685
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
_TEXT	SEGMENT
tv162 = -513						; size = 1
tv128 = -513						; size = 1
$T2 = -505						; size = 1
$T3 = -493						; size = 1
$T4 = -481						; size = 1
$T5 = -469						; size = 1
$T6 = -457						; size = 1
__Ptr$ = -256						; size = 4
__Fancyptr$ = -244					; size = 4
__Proxy$ = -232						; size = 8
_$S31$ = -213						; size = 1
__Alproxy$ = -204					; size = 4
__New_capacity$ = -192					; size = 4
__Max$ = -180						; size = 4
__Ptr$7 = -168						; size = 4
__Fits_in_right$ = -153					; size = 1
__Ptr$8 = -144						; size = 4
__Fits_in_left$ = -129					; size = 1
__New_size$ = -120					; size = 4
__Right_capacity$ = -108				; size = 4
__Left_capacity$ = -96					; size = 4
__Right_size$ = -84					; size = 4
__Left_size$ = -72					; size = 4
__Right_data$ = -60					; size = 4
__Left_data$ = -48					; size = 4
__My_data$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2547
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	movzx	eax, BYTE PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> &>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2548
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 2549
	mov	eax, DWORD PTR __Left$[ebp]
	mov	DWORD PTR __Left_data$[ebp], eax
; Line 2550
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Right_data$[ebp], eax
; Line 2551
	mov	ecx, DWORD PTR __Left_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 2552
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 2553
	mov	eax, DWORD PTR __Left_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Left_size$[ebp], ecx
; Line 2554
	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Right_size$[ebp], ecx
; Line 2556
	mov	eax, DWORD PTR __Left_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Left_capacity$[ebp], ecx
; Line 2557
	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Right_capacity$[ebp], ecx
; Line 2559
	mov	eax, DWORD PTR __Left_size$[ebp]
	add	eax, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 2560
	mov	eax, DWORD PTR __Left_capacity$[ebp]
	sub	eax, DWORD PTR __Left_size$[ebp]
	cmp	DWORD PTR __Right_size$[ebp], eax
	ja	SHORT $LN6@basic_stri
	mov	BYTE PTR tv128[ebp], 1
	jmp	SHORT $LN7@basic_stri
$LN6@basic_stri:
	mov	BYTE PTR tv128[ebp], 0
$LN7@basic_stri:
	mov	cl, BYTE PTR tv128[ebp]
	mov	BYTE PTR __Fits_in_left$[ebp], cl
; Line 2561
	movzx	eax, BYTE PTR __Fits_in_left$[ebp]
	test	eax, eax
	je	$LN2@basic_stri
	mov	eax, DWORD PTR __Right_capacity$[ebp]
	cmp	eax, DWORD PTR __Left_capacity$[ebp]
	ja	SHORT $LN2@basic_stri
; Line 2563
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2564
	xor	eax, eax
	mov	BYTE PTR $T4[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
; Line 2565
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	DWORD PTR __Ptr$8[ebp], eax
; Line 2566
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Left_size$[ebp]
	mov	edx, DWORD PTR __Ptr$8[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 2567
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2568
	jmp	$LN1@basic_stri
$LN2@basic_stri:
; Line 2571
	mov	eax, DWORD PTR __Right_capacity$[ebp]
	sub	eax, DWORD PTR __Right_size$[ebp]
	cmp	DWORD PTR __Left_size$[ebp], eax
	ja	SHORT $LN8@basic_stri
	mov	BYTE PTR tv162[ebp], 1
	jmp	SHORT $LN9@basic_stri
$LN8@basic_stri:
	mov	BYTE PTR tv162[ebp], 0
$LN9@basic_stri:
	mov	cl, BYTE PTR tv162[ebp]
	mov	BYTE PTR __Fits_in_right$[ebp], cl
; Line 2572
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	call	??$_Allocators_equal@V?$allocator@_W@std@@@std@@YA_NABV?$allocator@_W@0@0@Z ; std::_Allocators_equal<std::allocator<wchar_t> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN3@basic_stri
	movzx	eax, BYTE PTR __Fits_in_right$[ebp]
	test	eax, eax
	je	$LN3@basic_stri
; Line 2583
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2584
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
; Line 2585
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	mov	DWORD PTR __Ptr$7[ebp], eax
; Line 2586
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Ptr$7[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left_size$[ebp]
	mov	eax, DWORD PTR __Ptr$7[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::move
	add	esp, 12					; 0000000cH
; Line 2587
	mov	eax, DWORD PTR __Left_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$7[ebp]
	push	ecx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 2588
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2589
	jmp	$LN1@basic_stri
$LN3@basic_stri:
; Line 2593
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	DWORD PTR __Max$[ebp], eax
; Line 2594
	mov	eax, DWORD PTR __Max$[ebp]
	sub	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN4@basic_stri
; Line 2595
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN4@basic_stri:
; Line 2598
	mov	eax, DWORD PTR __Max$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAIIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 2599
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S31$[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	lea	eax, DWORD PTR _$S31$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2600
	mov	eax, DWORD PTR __My_data$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2601
	mov	eax, DWORD PTR __New_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	ecx, eax
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __Fancyptr$[ebp], eax
; Line 2603
	lea	eax, DWORD PTR __Fancyptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PA_WABQA_W@std@@YAXAAPA_WABQA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
	add	esp, 8
; Line 2604
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2605
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2606
	mov	eax, DWORD PTR __Fancyptr$[ebp]
	push	eax
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 2607
	mov	eax, DWORD PTR __Left_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 2608
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Left_size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	call	?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
	add	esp, 12					; 0000000cH
; Line 2609
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2610
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN1@basic_stri:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN5@basic_stri:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN17@basic_stri:
	DD	3
	DD	$LN16@basic_stri
$LN16@basic_stri:
	DD	-213					; ffffff2bH
	DD	1
	DD	$LN12@basic_stri
	DD	-232					; ffffff18H
	DD	8
	DD	$LN13@basic_stri
	DD	-244					; ffffff0cH
	DD	4
	DD	$LN14@basic_stri
$LN14@basic_stri:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN13@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN12@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -245						; size = 1
$T3 = -233						; size = 1
$T4 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2496
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	call	??$move@AAV?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::move<std::allocator<wchar_t> &>
	add	esp, 4
	push	eax
	movzx	eax, BYTE PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
; Line 2497
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2498
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
; Line 2499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Construct@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXQA_W0Urandom_access_iterator_tag@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Construct@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXQA_W0Urandom_access_iterator_tag@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2482
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2484
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Construct
; Line 2485
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 1
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN1@Construct:
; Line 2487
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Construct@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXQA_W0Urandom_access_iterator_tag@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
_TEXT	SEGMENT
$T2 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S23$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2413
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEAAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S23$[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	lea	eax, DWORD PTR _$S23$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2415
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2416
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
; Line 2417
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 2418
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2419
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@basic_stri:
	DD	2
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@basic_stri
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@basic_stri
$LN6@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	51					; 00000033H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2254
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2243
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEXI@Z PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@Check_offs
; Line 2232
	call	?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran
$LN3@Check_offs:
; Line 2234
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEXI@Z ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2226
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2227
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Large_stri:
	mov	al, BYTE PTR tv66[ebp]
; Line 2228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2217
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2218
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax
; Line 2219
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr
; Line 2220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; Line 2223
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2208
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax
; Line 2210
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr
; Line 2211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@_W@std@@YAPA_WPA_W@Z	; std::_Unfancy<wchar_t>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; Line 2214
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 709
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 710
	mov	eax, 2147483647				; 7fffffffH
; Line 711
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 814
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$01@std@@YAII@Z	; std::_Get_size_of_n<2>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 808
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 810
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 811
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 802
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1350
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1351
	mov	eax, DWORD PTR _this$[ebp]
; Line 1352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1347
	mov	eax, DWORD PTR _this$[ebp]
; Line 1348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
; Line 4414
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4408
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4409
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
; Line 4410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4404
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4405
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
; Line 4406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -245						; size = 1
__Al$3 = -44						; size = 4
__Ptr$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4383
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4384
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4385
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall
; Line 4386
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$4[ebp], ecx
; Line 4387
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$3[ebp], eax
; Line 4388
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>
	add	esp, 4
; Line 4389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$4[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$3[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:
; Line 4392
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 4393
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 4395
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 4396
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4376
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4377
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 4378
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 4380
	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 4381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4373
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 4374
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4298
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR __Requested$[ebp]
	push	edx
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	add	esp, 12					; 0000000cH
; Line 4299
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z
_TEXT	SEGMENT
$T1 = -216						; size = 4
__Masked$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Requested$ = 8					; size = 4
__Old$ = 12						; size = 4
__Max$ = 16						; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4285
	mov	eax, DWORD PTR __Requested$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Masked$[ebp], eax
; Line 4286
	mov	eax, DWORD PTR __Masked$[ebp]
	cmp	eax, DWORD PTR __Max$[ebp]
	jbe	SHORT $LN2@Calculate_
; Line 4287
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN2@Calculate_:
; Line 4290
	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Old$[ebp], ecx
	jbe	SHORT $LN3@Calculate_
; Line 4291
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN3@Calculate_:
; Line 4294
	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	add	eax, DWORD PTR __Old$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Masked$[ebp]
	push	edx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
$LN4@Calculate_:
; Line 4295
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Calculate_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Calculate_:
	DD	1
	DD	$LN6@Calculate_
$LN6@Calculate_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@Calculate_
$LN5@Calculate_:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 4278
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4279
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -264						; size = 4
$T2 = -252						; size = 4
$T3 = -240						; size = 4
__Storage_max$ = -36					; size = 4
__Alloc_max$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3773
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3774
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
	mov	DWORD PTR __Alloc_max$[ebp], eax
; Line 3775
	mov	DWORD PTR $T3[ebp], 16			; 00000010H
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Alloc_max$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Storage_max$[ebp], edx
; Line 3777
	mov	eax, DWORD PTR __Storage_max$[ebp]
	sub	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 3780
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@max_size
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@max_size:
	DD	1
	DD	$LN4@max_size
$LN4@max_size:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@max_size
$LN3@max_size:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3769
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3770
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 3771
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3765
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3755
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3756
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 3757
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3751
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3752
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 3753
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3719
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
$LN4@front:
; Line 3721
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN7@front
	jmp	SHORT $LN2@front
$LN7@front:
	mov	esi, esp
	push	OFFSET ??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	3721					; 00000e89H
	push	OFFSET ??_C@_0FE@LCNAMHNP@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@front
	int	3
$LN11@front:
	mov	esi, esp
	push	0
	push	3721					; 00000e89H
	push	OFFSET ??_C@_1KI@BCEOLJOE@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
	push	OFFSET ??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@front
$LN2@front:
	xor	eax, eax
	jne	SHORT $LN4@front
; Line 3724
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, 1
	imul	edx, ecx, 0
	add	eax, edx
; Line 3725
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -233						; size = 1
__Ptr$3 = -32						; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Ch$ = 8						; size = 1
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3691
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3692
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 3693
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Old_size$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jae	SHORT $LN2@push_back
; Line 3694
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 3695
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Ptr$3[ebp], eax
; Line 3696
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	add	ecx, DWORD PTR __Old_size$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 3697
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	mov	edx, DWORD PTR __Ptr$3[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	push	eax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 3698
	jmp	SHORT $LN1@push_back
$LN2@push_back:
; Line 3701
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_grow_by@V<lambda_15711c68e099a15a58f4d77303cb286d>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_15711c68e099a15a58f4d77303cb286d>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_15711c68e099a15a58f4d77303cb286d>,char>
$LN1@push_back:
; Line 3709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3307
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
; Line 3308
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Erase_noexcept
; Line 3309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV12@II@Z
_TEXT	SEGMENT
__New_size$ = -56					; size = 4
__Erase_at$ = -44					; size = 4
__My_ptr$ = -32						; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Erase_noexcept, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3294
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3295
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEIII@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
	mov	DWORD PTR __Count$[ebp], eax
; Line 3296
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 3297
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __My_ptr$[ebp], eax
; Line 3298
	mov	eax, DWORD PTR __My_ptr$[ebp]
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Erase_at$[ebp], eax
; Line 3299
	mov	eax, DWORD PTR __Old_size$[ebp]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 3300
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 3301
	mov	eax, DWORD PTR __New_size$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Erase_at$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Erase_at$[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH
; Line 3302
	mov	eax, DWORD PTR _this$[ebp]
; Line 3303
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Erase_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3287
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3288
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
; Line 3289
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 3290
	mov	eax, DWORD PTR _this$[ebp]
; Line 3291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3194
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3195
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 3196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z
_TEXT	SEGMENT
$T1 = -257						; size = 1
__Ptr_shifted_after$2 = -56				; size = 4
__Insert_at$3 = -44					; size = 4
__Old_ptr$4 = -32					; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3156
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3158
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
; Line 3159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 3160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Old_size$[ebp]
	cmp	DWORD PTR __Count$[ebp], ecx
	ja	$LN2@insert
; Line 3161
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 3162
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Old_ptr$4[ebp], eax
; Line 3163
	mov	eax, DWORD PTR __Old_ptr$4[ebp]
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Insert_at$3[ebp], eax
; Line 3168
	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Insert_at$3[ebp]
	jbe	SHORT $LN5@insert
	mov	eax, DWORD PTR __Old_ptr$4[ebp]
	add	eax, DWORD PTR __Old_size$[ebp]
	cmp	DWORD PTR __Ptr$[ebp], eax
	jbe	SHORT $LN3@insert
$LN5@insert:
; Line 3169
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Ptr_shifted_after$2[ebp], eax
	jmp	SHORT $LN4@insert
$LN3@insert:
; Line 3170
	mov	eax, DWORD PTR __Insert_at$3[ebp]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN6@insert
; Line 3171
	mov	DWORD PTR __Ptr_shifted_after$2[ebp], 0
; Line 3172
	jmp	SHORT $LN4@insert
$LN6@insert:
; Line 3173
	mov	eax, DWORD PTR __Insert_at$3[ebp]
	sub	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr_shifted_after$2[ebp], eax
$LN4@insert:
; Line 3176
	mov	eax, DWORD PTR __Old_size$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Insert_at$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_at$3[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH
; Line 3177
	mov	eax, DWORD PTR __Ptr_shifted_after$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_at$3[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3178
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Ptr_shifted_after$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	add	ecx, DWORD PTR __Ptr_shifted_after$2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_at$3[ebp]
	add	edx, DWORD PTR __Ptr_shifted_after$2[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 3180
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@insert
$LN2@insert:
; Line 3183
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_grow_by@V<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_4d79bb85f269e6e8002a4599002d832c>@@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_4d79bb85f269e6e8002a4599002d832c>,unsigned int,char const *,unsigned int>
$LN1@insert:
; Line 3192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Old_ptr$3 = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 3042
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3044
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	ja	SHORT $LN2@assign
; Line 3045
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax
; Line 3046
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 3047
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$3[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH
; Line 3048
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$3[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 3049
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@assign
$LN2@assign:
; Line 3052
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
$LN1@assign:
; Line 3059
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2957
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2958
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 2959
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -233						; size = 1
__Old_ptr$3 = -32					; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2935
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2937
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx
; Line 2938
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Old_size$[ebp]
	cmp	DWORD PTR __Count$[ebp], ecx
	ja	SHORT $LN2@append
; Line 2939
	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 2940
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax
; Line 2941
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$3[ebp]
	add	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH
; Line 2942
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	add	ecx, DWORD PTR __Old_ptr$3[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 2943
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@append
$LN2@append:
; Line 2946
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>
$LN1@append:
; Line 2955
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ch$ = 8						; size = 1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2904
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2905
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
; Line 2906
	mov	eax, DWORD PTR _this$[ebp]
; Line 2907
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2862
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2863
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 4
	cmp	DWORD PTR _this$[ebp], eax
	je	SHORT $LN2@operator
; Line 2864
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
$LN2@operator:
; Line 2867
	mov	eax, DWORD PTR _this$[ebp]
; Line 2868
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2826
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2827
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
	add	esp, 8
; Line 2828
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 2829
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
__To_delete$ = -48					; size = 4
_$S25$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2800
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2801
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Line 2803
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S25$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S25$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2804
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __To_delete$[ebp], ecx
; Line 2805
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2806
	mov	eax, DWORD PTR __To_delete$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 2808
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@basic_stri:
	DD	1
	DD	$LN4@basic_stri
$LN4@basic_stri:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@basic_stri
$LN3@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	53					; 00000035H
	DB	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
$T1 = -312						; size = 4
$T2 = -300						; size = 4
__New_array$ = -96					; size = 4
__New_capacity$ = -84					; size = 4
__Al$ = -72						; size = 4
__My_data$ = -60					; size = 4
__Right_ptr$ = -48					; size = 4
__Right_size$ = -36					; size = 4
__Right_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2728
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2733
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Right_data$[ebp], eax
; Line 2734
	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Right_size$[ebp], ecx
; Line 2735
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Right_ptr$[ebp], eax
; Line 2736
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 2737
	cmp	DWORD PTR __Right_size$[ebp], 16	; 00000010H
	jae	SHORT $LN2@Construct_
; Line 2738
	push	16					; 00000010H
	mov	eax, DWORD PTR __Right_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2739
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2740
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 2741
	jmp	$LN1@Construct_
$LN2@Construct_:
; Line 2744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 2745
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR __Right_size$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 2746
	mov	eax, DWORD PTR __New_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_array$[ebp], eax
; Line 2747
	lea	eax, DWORD PTR __New_array$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
; Line 2748
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_array$[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2749
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2750
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN1@Construct_:
; Line 2751
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Construct_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN6@Construct_:
	DD	1
	DD	$LN5@Construct_
$LN5@Construct_:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN4@Construct_
$LN4@Construct_:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2687
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2694
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte
; Line 2696
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
; Line 2697
	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:
; Line 2698
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:
; Line 2702
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
; Line 2703
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Line 2704
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
__Right_data_mem$ = -32					; size = 4
__My_data_mem$ = -20					; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2678
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2680
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __My_data_mem$[ebp], eax
; Line 2682
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __Right_data_mem$[ebp], eax
; Line 2684
	push	24					; 00000018H
	mov	eax, DWORD PTR __Right_data_mem$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data_mem$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2685
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2664
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2665
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	cmp	DWORD PTR _this$[ebp], eax
	je	SHORT $LN2@operator
; Line 2666
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:
; Line 2669
	mov	eax, DWORD PTR _this$[ebp]
; Line 2670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2636
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2637
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Line 2638
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
	add	esp, 8
; Line 2639
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Line 2640
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
_TEXT	SEGMENT
tv161 = -513						; size = 1
tv128 = -513						; size = 1
$T2 = -505						; size = 1
$T3 = -493						; size = 1
$T4 = -481						; size = 1
$T5 = -469						; size = 1
$T6 = -457						; size = 1
__Ptr$ = -256						; size = 4
__Fancyptr$ = -244					; size = 4
__Proxy$ = -232						; size = 8
_$S32$ = -213						; size = 1
__Alproxy$ = -204					; size = 4
__New_capacity$ = -192					; size = 4
__Max$ = -180						; size = 4
__Ptr$7 = -168						; size = 4
__Fits_in_right$ = -153					; size = 1
__Ptr$8 = -144						; size = 4
__Fits_in_left$ = -129					; size = 1
__New_size$ = -120					; size = 4
__Right_capacity$ = -108				; size = 4
__Left_capacity$ = -96					; size = 4
__Right_size$ = -84					; size = 4
__Left_size$ = -72					; size = 4
__Right_data$ = -60					; size = 4
__Left_data$ = -48					; size = 4
__My_data$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2547
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	movzx	eax, BYTE PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2548
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 2549
	mov	eax, DWORD PTR __Left$[ebp]
	mov	DWORD PTR __Left_data$[ebp], eax
; Line 2550
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Right_data$[ebp], eax
; Line 2551
	mov	ecx, DWORD PTR __Left_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 2552
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 2553
	mov	eax, DWORD PTR __Left_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Left_size$[ebp], ecx
; Line 2554
	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Right_size$[ebp], ecx
; Line 2556
	mov	eax, DWORD PTR __Left_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Left_capacity$[ebp], ecx
; Line 2557
	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Right_capacity$[ebp], ecx
; Line 2559
	mov	eax, DWORD PTR __Left_size$[ebp]
	add	eax, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 2560
	mov	eax, DWORD PTR __Left_capacity$[ebp]
	sub	eax, DWORD PTR __Left_size$[ebp]
	cmp	DWORD PTR __Right_size$[ebp], eax
	ja	SHORT $LN6@basic_stri
	mov	BYTE PTR tv128[ebp], 1
	jmp	SHORT $LN7@basic_stri
$LN6@basic_stri:
	mov	BYTE PTR tv128[ebp], 0
$LN7@basic_stri:
	mov	cl, BYTE PTR tv128[ebp]
	mov	BYTE PTR __Fits_in_left$[ebp], cl
; Line 2561
	movzx	eax, BYTE PTR __Fits_in_left$[ebp]
	test	eax, eax
	je	SHORT $LN2@basic_stri
	mov	eax, DWORD PTR __Right_capacity$[ebp]
	cmp	eax, DWORD PTR __Left_capacity$[ebp]
	ja	SHORT $LN2@basic_stri
; Line 2563
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2564
	xor	eax, eax
	mov	BYTE PTR $T4[ebp], al
	movzx	ecx, BYTE PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR __Left$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Line 2565
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Ptr$8[ebp], eax
; Line 2566
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$8[ebp]
	add	ecx, DWORD PTR __Left_size$[ebp]
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2567
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2568
	jmp	$LN1@basic_stri
$LN2@basic_stri:
; Line 2571
	mov	eax, DWORD PTR __Right_capacity$[ebp]
	sub	eax, DWORD PTR __Right_size$[ebp]
	cmp	DWORD PTR __Left_size$[ebp], eax
	ja	SHORT $LN8@basic_stri
	mov	BYTE PTR tv161[ebp], 1
	jmp	SHORT $LN9@basic_stri
$LN8@basic_stri:
	mov	BYTE PTR tv161[ebp], 0
$LN9@basic_stri:
	mov	cl, BYTE PTR tv161[ebp]
	mov	BYTE PTR __Fits_in_right$[ebp], cl
; Line 2572
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NABV?$allocator@D@0@0@Z ; std::_Allocators_equal<std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN3@basic_stri
	movzx	eax, BYTE PTR __Fits_in_right$[ebp]
	test	eax, eax
	je	$LN3@basic_stri
; Line 2583
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2584
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Line 2585
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Ptr$7[ebp], eax
; Line 2586
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Ptr$7[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$7[ebp]
	add	edx, DWORD PTR __Left_size$[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH
; Line 2587
	mov	eax, DWORD PTR __Left_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$7[ebp]
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2588
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2589
	jmp	$LN1@basic_stri
$LN3@basic_stri:
; Line 2593
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Max$[ebp], eax
; Line 2594
	mov	eax, DWORD PTR __Max$[ebp]
	sub	eax, DWORD PTR __Left_size$[ebp]
	cmp	eax, DWORD PTR __Right_size$[ebp]
	jae	SHORT $LN4@basic_stri
; Line 2595
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN4@basic_stri:
; Line 2598
	mov	eax, DWORD PTR __Max$[ebp]
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 2599
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S32$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S32$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2600
	mov	eax, DWORD PTR __My_data$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2601
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	ecx, eax
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Fancyptr$[ebp], eax
; Line 2603
	lea	eax, DWORD PTR __Fancyptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
; Line 2604
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2605
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2606
	mov	eax, DWORD PTR __Fancyptr$[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 2607
	mov	eax, DWORD PTR __Left_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2608
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, DWORD PTR __Left_size$[ebp]
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2609
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2610
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN1@basic_stri:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN5@basic_stri:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN17@basic_stri:
	DD	3
	DD	$LN16@basic_stri
$LN16@basic_stri:
	DD	-213					; ffffff2bH
	DD	1
	DD	$LN12@basic_stri
	DD	-232					; ffffff18H
	DD	8
	DD	$LN13@basic_stri
	DD	-244					; ffffff0cH
	DD	4
	DD	$LN14@basic_stri
$LN14@basic_stri:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN13@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN12@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@AAV01@1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z
_TEXT	SEGMENT
$T2 = -349						; size = 1
$T3 = -337						; size = 1
$T4 = -325						; size = 1
__Fancyptr$5 = -124					; size = 4
__Proxy$ = -112						; size = 8
_$S33$ = -93						; size = 1
__Alproxy$ = -84					; size = 4
__Ptr$ = -72						; size = 4
__My_data$ = -60					; size = 4
__New_capacity$ = -48					; size = 4
__New_size$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
__Source_of_al$ = 12					; size = 4
__Left_ptr$ = 16					; size = 4
__Left_size$ = 20					; size = 4
__Right_ptr$ = 24					; size = 4
__Right_size$ = 28					; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2521
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2520
	mov	ecx, DWORD PTR __Source_of_al$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2525
	mov	eax, DWORD PTR __Left_size$[ebp]
	add	eax, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax
; Line 2526
	mov	DWORD PTR __New_capacity$[ebp], 15	; 0000000fH
; Line 2527
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 2528
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 2529
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S33$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S33$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2530
	mov	eax, DWORD PTR __My_data$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2531
	mov	eax, DWORD PTR __New_capacity$[ebp]
	cmp	eax, DWORD PTR __New_size$[ebp]
	jae	SHORT $LN2@basic_stri
; Line 2532
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	push	eax
	push	15					; 0000000fH
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 2533
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	ecx, eax
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Fancyptr$5[ebp], eax
; Line 2534
	mov	eax, DWORD PTR __Fancyptr$5[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 2535
	lea	eax, DWORD PTR __Fancyptr$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN2@basic_stri:
; Line 2538
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2539
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2540
	mov	eax, DWORD PTR __Left_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2541
	mov	eax, DWORD PTR __Right_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	add	edx, DWORD PTR __Left_size$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2542
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 2543
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2544
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN11@basic_stri:
	DD	3
	DD	$LN10@basic_stri
$LN10@basic_stri:
	DD	-93					; ffffffa3H
	DD	1
	DD	$LN6@basic_stri
	DD	-112					; ffffff90H
	DD	8
	DD	$LN7@basic_stri
	DD	-124					; ffffff84H
	DD	4
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN7@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN6@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	51					; 00000033H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -245						; size = 1
$T3 = -233						; size = 1
$T4 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2496
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
	add	esp, 4
	push	eax
	movzx	eax, BYTE PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
; Line 2497
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2498
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Line 2499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXQAD0Urandom_access_iterator_tag@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXQAD0Urandom_access_iterator_tag@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2482
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2484
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Construct
; Line 2485
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN1@Construct:
; Line 2487
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXQAD0Urandom_access_iterator_tag@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
; Line 2366
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2367
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Line 2368
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T2 = -277						; size = 1
$T3 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S29$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2351
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2352
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S29$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S29$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2353
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2354
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
; Line 2355
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2356
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@basic_stri:
	DD	2
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@basic_stri
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@basic_stri
$LN6@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	57					; 00000039H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2254
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEIII@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEIII@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2246
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2248
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	lea	eax, DWORD PTR __Size$[ebp]
	push	eax
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 2249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEIII@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2243
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@Check_offs
; Line 2232
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN3@Check_offs:
; Line 2234
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEXI@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2226
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2227
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Large_stri:
	mov	al, BYTE PTR tv66[ebp]
; Line 2228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2217
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2218
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax
; Line 2219
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr
; Line 2220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; Line 2223
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2208
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax
; Line 2210
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr
; Line 2211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; Line 2214
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 714
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 715
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 709
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 710
	or	eax, -1
; Line 711
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 814
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$00@std@@YAII@Z	; std::_Get_size_of_n<1>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 808
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 810
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 811
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 802
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 2274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2275
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen_strin:
; Line 2276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 456
	or	eax, -1
; Line 457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -200						; size = 4
tv69 = -196						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z PROC	; std::_Narrow_char_traits<char,int>::not_eof, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 452
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv68[ebp], 0
$LN4@not_eof:
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ENDP	; std::_Narrow_char_traits<char,int>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 447
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 448
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv65[ebp]
; Line 449
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z PROC ; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 444
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 445
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ENDP ; std::_Narrow_char_traits<char,int>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z PROC ; std::_Narrow_char_traits<char,int>::to_char_type, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 440
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ENDP ; std::_Narrow_char_traits<char,int>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z PROC	; std::_Narrow_char_traits<char,int>::eq, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 431
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 432
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq:
	mov	al, BYTE PTR tv67[ebp]
; Line 433
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z ENDP	; std::_Narrow_char_traits<char,int>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z PROC	; std::_Narrow_char_traits<char,int>::assign, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 428
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 429
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ENDP	; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 389
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Char_traits<char,int>::move, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 119
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 122
	mov	eax, DWORD PTR __First1$[ebp]
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 62
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 65
	mov	eax, DWORD PTR __First1$[ebp]
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$_WChar_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$_WChar_traits@_W@std@@SAGXZ PROC			; std::_WChar_traits<wchar_t>::eof, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 309
	mov	eax, 65535				; 0000ffffH
; Line 310
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eof@?$_WChar_traits@_W@std@@SAGXZ ENDP			; std::_WChar_traits<wchar_t>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?not_eof@?$_WChar_traits@_W@std@@SAGABG@Z
_TEXT	SEGMENT
tv71 = -196						; size = 2
tv72 = -194						; size = 2
__Meta$ = 8						; size = 4
?not_eof@?$_WChar_traits@_W@std@@SAGABG@Z PROC		; std::_WChar_traits<wchar_t>::not_eof, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 305
	mov	eax, DWORD PTR __Meta$[ebp]
	movzx	esi, WORD PTR [eax]
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	movzx	ecx, ax
	cmp	esi, ecx
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv72[ebp], ax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN3@not_eof
	mov	edx, 1
	mov	WORD PTR tv71[ebp], dx
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	xor	eax, eax
	mov	WORD PTR tv71[ebp], ax
$LN4@not_eof:
	mov	cx, WORD PTR tv71[ebp]
	mov	WORD PTR tv72[ebp], cx
$LN6@not_eof:
	mov	ax, WORD PTR tv72[ebp]
; Line 306
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$_WChar_traits@_W@std@@SAGABG@Z ENDP		; std::_WChar_traits<wchar_t>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z PROC	; std::_WChar_traits<wchar_t>::eq_int_type, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 301
	mov	eax, DWORD PTR __Left$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv67[ebp]
; Line 302
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$_WChar_traits@_W@std@@SA_NABG0@Z ENDP	; std::_WChar_traits<wchar_t>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z PROC	; std::_WChar_traits<wchar_t>::to_int_type, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 297
	mov	eax, DWORD PTR __Ch$[ebp]
	mov	ax, WORD PTR [eax]
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?to_int_type@?$_WChar_traits@_W@std@@SAGAB_W@Z ENDP	; std::_WChar_traits<wchar_t>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z PROC	; std::_WChar_traits<wchar_t>::to_char_type, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 293
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	ax, WORD PTR [eax]
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?to_char_type@?$_WChar_traits@_W@std@@SA_WABG@Z ENDP	; std::_WChar_traits<wchar_t>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::_WChar_traits<wchar_t>::assign, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 281
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
; Line 282
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::_WChar_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$_WChar_traits@_W@std@@SAIPB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$_WChar_traits@_W@std@@SAIPB_W@Z PROC		; std::_WChar_traits<wchar_t>::length, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 251
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$_WChar_traits@_W@std@@SAIPB_W@Z ENDP		; std::_WChar_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z PROC	; std::_Char_traits<wchar_t,unsigned short>::move, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 119
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 122
	mov	eax, DWORD PTR __First1$[ebp]
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::_Char_traits<wchar_t,unsigned short>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z PROC	; std::_Char_traits<wchar_t,unsigned short>::copy, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E06194E3_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 62
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 65
	mov	eax, DWORD PTR __First1$[ebp]
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$_Char_traits@_WG@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::_Char_traits<wchar_t,unsigned short>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
; Line 231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0938E6AE_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1269
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -36						; size = 4
__Lock$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1224
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1226
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx
; Line 1230
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 1231
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1233
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Swap_proxy
; Line 1234
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@Swap_proxy:
; Line 1237
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Swap_proxy
; Line 1238
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN3@Swap_proxy:
; Line 1240
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Swap_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Swap_proxy:
	DD	1
	DD	$LN6@Swap_proxy
$LN6@Swap_proxy:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@Swap_proxy
$LN5@Swap_proxy:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -36						; size = 4
__Lock$2 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1210
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1212
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_all
; Line 1213
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1215
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all
; Line 1216
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
; Line 1217
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:
; Line 1219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0
; Line 1220
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Orphan_all:
; Line 1222
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Orphan_all:
	DD	1
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_all
$LN7@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1097
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 1089
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Convert_size@I@std@@YAII@Z
_TEXT	SEGMENT
__Len$ = 8						; size = 4
??$_Convert_size@I@std@@YAII@Z PROC			; std::_Convert_size<unsigned int>, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 995
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 997
	mov	eax, DWORD PTR __Len$[ebp]
; Line 998
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Convert_size@I@std@@YAII@Z ENDP			; std::_Convert_size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -44					; size = 4
__Min_back_shift$ = -32					; size = 4
__Ptr_container$ = -20					; size = 4
__Ptr_user$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 134
	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 136
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx
; Line 137
	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Adjust_man:
; Line 141
	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_0FE@ELBNMLDG@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_1KI@PMMCEADF@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN4@Adjust_man
; Line 146
	mov	DWORD PTR __Min_back_shift$[ebp], 8
; Line 150
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:
; Line 151
	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0FE@ELBNMLDG@D?3?2Microsoft?5Visual?5Studio?22019@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_1KI@PMMCEADF@?$AAD?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN10@Adjust_man
; Line 152
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 153
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __94B2127F_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 77
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 78
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; Line 556
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A7626682_limits
	call	@__CheckForDebuggerJustMyCode@4
; Line 557
	mov	eax, 2147483647				; 7fffffffH
; Line 558
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -208						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __2EDB6A35_exception
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7D20BDF6_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 140
	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7D20BDF6_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 129
	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7D20BDF6_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7D20BDF6_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_destroy
	add	esp, 4
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7D20BDF6_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@
; Line 71
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7D20BDF6_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@
; Line 65
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EA052A26_cmath
	call	@__CheckForDebuggerJustMyCode@4
; Line 223
	push	ecx
	movss	xmm0, DWORD PTR __Xx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
; Line 224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EA052A26_cmath
	call	@__CheckForDebuggerJustMyCode@4
; Line 67
	push	ecx
	movss	xmm0, DWORD PTR __Xx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceil@@YAMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?ceil@@YAMM@Z PROC					; ceil, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EA052A26_cmath
	call	@__CheckForDebuggerJustMyCode@4
; Line 59
	push	ecx
	movss	xmm0, DWORD PTR __Xx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceil@@YAMM@Z ENDP					; ceil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File D:\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __2FFF9A72_vcruntime_new@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 169
	mov	eax, DWORD PTR __Where$[ebp]
; Line 170
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_factoryType$ = 8					; size = 4
_riid$ = 12						; size = 4
_factory$ = 16						; size = 4
?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z PROC ; D2D1CreateFactory, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3722
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3723
	mov	eax, DWORD PTR _factory$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _factoryType$[ebp]
	push	edx
	call	_D2D1CreateFactory@16
; Line 3729
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@ABU_GUID@@PAPAX@Z ENDP ; D2D1CreateFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ
_TEXT	SEGMENT
_identity$ = -32					; size = 24
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ PROC		; D2D1::Matrix3x2F::Identity, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 770
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 771
	lea	ecx, DWORD PTR _identity$[ebp]
	call	??0Matrix3x2F@D2D1@@QAE@XZ		; D2D1::Matrix3x2F::Matrix3x2F
; Line 773
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _identity$[ebp], xmm0
; Line 774
	xorps	xmm0, xmm0
	movss	DWORD PTR _identity$[ebp+4], xmm0
; Line 775
	xorps	xmm0, xmm0
	movss	DWORD PTR _identity$[ebp+8], xmm0
; Line 776
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _identity$[ebp+12], xmm0
; Line 777
	xorps	xmm0, xmm0
	movss	DWORD PTR _identity$[ebp+16], xmm0
; Line 778
	xorps	xmm0, xmm0
	movss	DWORD PTR _identity$[ebp+20], xmm0
; Line 780
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _identity$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _identity$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _identity$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _identity$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _identity$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _identity$[ebp+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 781
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Identity
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Identity:
	DD	1
	DD	$LN4@Identity
$LN4@Identity:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN3@Identity
$LN3@Identity:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ ENDP		; D2D1::Matrix3x2F::Identity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Matrix3x2F@D2D1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Matrix3x2F@D2D1@@QAE@XZ PROC				; D2D1::Matrix3x2F::Matrix3x2F, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 757
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 760
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix3x2F@D2D1@@QAE@XZ ENDP				; D2D1::Matrix3x2F::Matrix3x2F
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init@ColorF@D2D1@@AAEXIM@Z
_TEXT	SEGMENT
tv152 = -216						; size = 8
tv142 = -216						; size = 8
tv132 = -216						; size = 8
tv149 = -208						; size = 4
tv139 = -208						; size = 4
tv129 = -208						; size = 4
_this$ = -8						; size = 4
_rgb$ = 8						; size = 4
_alpha$ = 12						; size = 4
?Init@ColorF@D2D1@@AAEXIM@Z PROC			; D2D1::ColorF::Init, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 714
	mov	eax, DWORD PTR _rgb$[ebp]
	and	eax, 16711680				; 00ff0000H
	shr	eax, 16					; 00000010H
	mov	DWORD PTR tv129[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv129[ebp]
	mov	ecx, DWORD PTR tv129[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv132[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv132[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0
; Line 715
	mov	eax, DWORD PTR _rgb$[ebp]
	and	eax, 65280				; 0000ff00H
	shr	eax, 8
	mov	DWORD PTR tv139[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv139[ebp]
	mov	ecx, DWORD PTR tv139[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv142[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv142[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0
; Line 716
	mov	eax, DWORD PTR _rgb$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR tv149[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv149[ebp]
	mov	ecx, DWORD PTR tv149[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv152[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv152[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0
; Line 717
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [eax+12], xmm0
; Line 718
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@ColorF@D2D1@@AAEXIM@Z ENDP			; D2D1::ColorF::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ColorF@D2D1@@QAE@W4Enum@01@M@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_knownColor$ = 8					; size = 4
_a$ = 12						; size = 4
??0ColorF@D2D1@@QAE@W4Enum@01@M@Z PROC			; D2D1::ColorF::ColorF, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 681
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 686
	push	ecx
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _knownColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@ColorF@D2D1@@AAEXIM@Z		; D2D1::ColorF::Init
; Line 687
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0ColorF@D2D1@@QAE@W4Enum@01@M@Z ENDP			; D2D1::ColorF::ColorF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z
_TEXT	SEGMENT
_hwndRenderTargetProperties$ = -20			; size = 16
$T1 = 8							; size = 4
_hwnd$ = 12						; size = 4
_pixelSize$ = 16					; size = 8
_presentOptions$ = 24					; size = 4
?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z PROC ; D2D1::HwndRenderTargetProperties, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 459
	mov	eax, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR _hwndRenderTargetProperties$[ebp], eax
; Line 460
	mov	eax, DWORD PTR _pixelSize$[ebp]
	mov	ecx, DWORD PTR _pixelSize$[ebp+4]
	mov	DWORD PTR _hwndRenderTargetProperties$[ebp+4], eax
	mov	DWORD PTR _hwndRenderTargetProperties$[ebp+8], ecx
; Line 461
	mov	eax, DWORD PTR _presentOptions$[ebp]
	mov	DWORD PTR _hwndRenderTargetProperties$[ebp+12], eax
; Line 463
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _hwndRenderTargetProperties$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _hwndRenderTargetProperties$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _hwndRenderTargetProperties$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _hwndRenderTargetProperties$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 464
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@HwndRender
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@HwndRender:
	DD	1
	DD	$LN4@HwndRender
$LN4@HwndRender:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@HwndRender
$LN3@HwndRender:
	DB	104					; 00000068H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ENDP ; D2D1::HwndRenderTargetProperties
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
_renderTargetProperties$ = -32				; size = 28
$T1 = 8							; size = 4
_type$ = 12						; size = 4
_pixelFormat$ = 16					; size = 4
_dpiX$ = 20						; size = 4
_dpiY$ = 24						; size = 4
_usage$ = 28						; size = 4
_minLevel$ = 32						; size = 4
?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z PROC ; D2D1::RenderTargetProperties, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 438
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR _renderTargetProperties$[ebp], eax
; Line 439
	mov	eax, DWORD PTR _pixelFormat$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _renderTargetProperties$[ebp+4], ecx
	mov	DWORD PTR _renderTargetProperties$[ebp+8], edx
; Line 440
	movss	xmm0, DWORD PTR _dpiX$[ebp]
	movss	DWORD PTR _renderTargetProperties$[ebp+12], xmm0
; Line 441
	movss	xmm0, DWORD PTR _dpiY$[ebp]
	movss	DWORD PTR _renderTargetProperties$[ebp+16], xmm0
; Line 442
	mov	eax, DWORD PTR _usage$[ebp]
	mov	DWORD PTR _renderTargetProperties$[ebp+20], eax
; Line 443
	mov	eax, DWORD PTR _minLevel$[ebp]
	mov	DWORD PTR _renderTargetProperties$[ebp+24], eax
; Line 445
	mov	ecx, 7
	lea	esi, DWORD PTR _renderTargetProperties$[ebp]
	mov	edi, DWORD PTR $T1[ebp]
	rep movsd
	mov	eax, DWORD PTR $T1[ebp]
; Line 446
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@RenderTarg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@RenderTarg:
	DD	1
	DD	$LN4@RenderTarg
$LN4@RenderTarg:
	DD	-32					; ffffffe0H
	DD	28					; 0000001cH
	DD	$LN3@RenderTarg
$LN3@RenderTarg:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@ABUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ENDP ; D2D1::RenderTargetProperties
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z
_TEXT	SEGMENT
_pixelFormat$ = -12					; size = 8
_dxgiFormat$ = 8					; size = 4
_alphaMode$ = 12					; size = 4
?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z PROC ; D2D1::PixelFormat, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 394
	mov	eax, DWORD PTR _dxgiFormat$[ebp]
	mov	DWORD PTR _pixelFormat$[ebp], eax
; Line 395
	mov	eax, DWORD PTR _alphaMode$[ebp]
	mov	DWORD PTR _pixelFormat$[ebp+4], eax
; Line 397
	mov	eax, DWORD PTR _pixelFormat$[ebp]
	mov	edx, DWORD PTR _pixelFormat$[ebp+4]
; Line 398
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PixelForma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@PixelForma:
	DD	1
	DD	$LN4@PixelForma
$LN4@PixelForma:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@PixelForma
$LN3@PixelForma:
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ENDP ; D2D1::PixelFormat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z
_TEXT	SEGMENT
_linearGradientBrushProperties$ = -20			; size = 16
$T1 = 8							; size = 4
_startPoint$ = 12					; size = 4
_endPoint$ = 16						; size = 4
?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z PROC ; D2D1::LinearGradientBrushProperties, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 355
	mov	eax, DWORD PTR _startPoint$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _linearGradientBrushProperties$[ebp], ecx
	mov	DWORD PTR _linearGradientBrushProperties$[ebp+4], edx
; Line 356
	mov	eax, DWORD PTR _endPoint$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _linearGradientBrushProperties$[ebp+8], ecx
	mov	DWORD PTR _linearGradientBrushProperties$[ebp+12], edx
; Line 358
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _linearGradientBrushProperties$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _linearGradientBrushProperties$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _linearGradientBrushProperties$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _linearGradientBrushProperties$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 359
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@LinearGrad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@LinearGrad:
	DD	1
	DD	$LN4@LinearGrad
$LN4@LinearGrad:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@LinearGrad
$LN3@LinearGrad:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	71					; 00000047H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?LinearGradientBrushProperties@D2D1@@YA?AUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@ABUD2D_POINT_2F@@0@Z ENDP ; D2D1::LinearGradientBrushProperties
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
_TEXT	SEGMENT
_rect$ = -20						; size = 16
$T1 = 8							; size = 4
_left$ = 12						; size = 4
_top$ = 16						; size = 4
_right$ = 20						; size = 4
_bottom$ = 24						; size = 4
??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z PROC		; D2D1::Rect<float>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 152
	movss	xmm0, DWORD PTR _left$[ebp]
	movss	DWORD PTR _rect$[ebp], xmm0
	movss	xmm0, DWORD PTR _top$[ebp]
	movss	DWORD PTR _rect$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _right$[ebp]
	movss	DWORD PTR _rect$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _bottom$[ebp]
	movss	DWORD PTR _rect$[ebp+12], xmm0
; Line 154
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 155
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Rect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Rect:
	DD	1
	DD	$LN4@Rect
$LN4@Rect:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@Rect
$LN3@Rect:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z ENDP		; D2D1::Rect<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
_TEXT	SEGMENT
$T1 = -236						; size = 16
$T2 = -212						; size = 16
$T3 = 8							; size = 4
_left$ = 12						; size = 4
_top$ = 16						; size = 4
_right$ = 20						; size = 4
_bottom$ = 24						; size = 4
?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z PROC		; D2D1::RectF, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 167
	push	ecx
	movss	xmm0, DWORD PTR _bottom$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _right$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _top$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _left$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::Rect<float>
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T3[ebp]
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z ENDP		; D2D1::RectF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z
_TEXT	SEGMENT
_size$ = -12						; size = 8
_width$ = 8						; size = 4
_height$ = 12						; size = 4
??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z PROC		; D2D1::Size<unsigned int>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _width$[ebp]
	mov	DWORD PTR _size$[ebp], eax
	mov	eax, DWORD PTR _height$[ebp]
	mov	DWORD PTR _size$[ebp+4], eax
; Line 116
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _size$[ebp+4]
; Line 117
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Size
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Size:
	DD	1
	DD	$LN4@Size
$LN4@Size:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@Size
$LN3@Size:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z ENDP		; D2D1::Size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z
_TEXT	SEGMENT
$T1 = -204						; size = 8
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z PROC			; D2D1::SizeU, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 138
	mov	eax, DWORD PTR _height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$[ebp]
	push	ecx
	call	??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::Size<unsigned int>
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR $T1[ebp+4]
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z ENDP			; D2D1::SizeU
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z
_TEXT	SEGMENT
_point$ = -12						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z PROC		; D2D1::Point2<float>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 78
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR _point$[ebp], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _point$[ebp+4], xmm0
; Line 80
	mov	eax, DWORD PTR _point$[ebp]
	mov	edx, DWORD PTR _point$[ebp+4]
; Line 81
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Point2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Point2:
	DD	1
	DD	$LN4@Point2
$LN4@Point2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@Point2
$LN3@Point2:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z ENDP		; D2D1::Point2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z
_TEXT	SEGMENT
$T1 = -204						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z PROC		; D2D1::Point2F, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1helper.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A42BBD61_d2d1helper@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 91
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z ; D2D1::Point2<float>
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR $T1[ebp+4]
; Line 92
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z ENDP		; D2D1::Point2F
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_renderTargetProperties$ = 8				; size = 4
_hwndRenderTargetProperties$ = 12			; size = 4
_hwndRenderTarget$ = 16					; size = 4
?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z PROC ; ID2D1Factory::CreateHwndRenderTarget, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3546
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3547
	mov	esi, esp
	mov	eax, DWORD PTR _hwndRenderTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndRenderTargetProperties$[ebp]
	push	ecx
	mov	edx, DWORD PTR _renderTargetProperties$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3548
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateHwndRenderTarget@ID2D1Factory@@QAEJABUD2D1_RENDER_TARGET_PROPERTIES@@ABUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PAPAUID2D1HwndRenderTarget@@@Z ENDP ; ID2D1Factory::CreateHwndRenderTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pixelSize$ = 8						; size = 4
?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z PROC ; ID2D1HwndRenderTarget::Resize, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3289
	mov	esi, esp
	mov	eax, DWORD PTR _pixelSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+232]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Resize@ID2D1HwndRenderTarget@@QAEJABUD2D_SIZE_U@@@Z ENDP ; ID2D1HwndRenderTarget::Resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_string$ = 8						; size = 4
_stringLength$ = 12					; size = 4
_textFormat$ = 16					; size = 4
_layoutRect$ = 20					; size = 4
_defaultFillBrush$ = 24					; size = 4
_options$ = 28						; size = 4
_measuringMode$ = 32					; size = 4
?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z PROC ; ID2D1RenderTarget::DrawTextW, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3231
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3232
	mov	esi, esp
	mov	eax, DWORD PTR _measuringMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _defaultFillBrush$[ebp]
	push	edx
	mov	eax, DWORD PTR _layoutRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stringLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+108]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3233
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?DrawTextW@ID2D1RenderTarget@@QAEXPB_WIPAUIDWriteTextFormat@@ABUD2D_RECT_F@@PAUID2D1Brush@@W4D2D1_DRAW_TEXT_OPTIONS@@W4DWRITE_MEASURING_MODE@@@Z ENDP ; ID2D1RenderTarget::DrawTextW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@ID2D1RenderTarget@@QAEXABU_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_clearColor$ = 8					; size = 4
?Clear@ID2D1RenderTarget@@QAEXABU_D3DCOLORVALUE@@@Z PROC ; ID2D1RenderTarget::Clear, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3213
	mov	esi, esp
	mov	eax, DWORD PTR _clearColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+188]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@ID2D1RenderTarget@@QAEXABU_D3DCOLORVALUE@@@Z ENDP ; ID2D1RenderTarget::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTransform@ID2D1RenderTarget@@QAEXABUD2D_MATRIX_3X2_F@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_transform$ = 8						; size = 4
?SetTransform@ID2D1RenderTarget@@QAEXABUD2D_MATRIX_3X2_F@@@Z PROC ; ID2D1RenderTarget::SetTransform, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3184
	mov	esi, esp
	mov	eax, DWORD PTR _transform$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+120]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTransform@ID2D1RenderTarget@@QAEXABUD2D_MATRIX_3X2_F@@@Z ENDP ; ID2D1RenderTarget::SetTransform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_roundedRect$ = 8					; size = 4
_brush$ = 12						; size = 4
?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z PROC ; ID2D1RenderTarget::FillRoundedRectangle, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3113
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3114
	mov	esi, esp
	mov	eax, DWORD PTR _brush$[ebp]
	push	eax
	mov	ecx, DWORD PTR _roundedRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?FillRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@@Z ENDP ; ID2D1RenderTarget::FillRoundedRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_roundedRect$ = 8					; size = 4
_brush$ = 12						; size = 4
_strokeWidth$ = 16					; size = 4
_strokeStyle$ = 20					; size = 4
?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z PROC ; ID2D1RenderTarget::DrawRoundedRectangle, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3104
	mov	esi, esp
	mov	eax, DWORD PTR _strokeStyle$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _strokeWidth$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _brush$[ebp]
	push	ecx
	mov	edx, DWORD PTR _roundedRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawRoundedRectangle@ID2D1RenderTarget@@QAEXABUD2D1_ROUNDED_RECT@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ENDP ; ID2D1RenderTarget::DrawRoundedRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rect$ = 8						; size = 4
_brush$ = 12						; size = 4
?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z PROC ; ID2D1RenderTarget::FillRectangle, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3091
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3092
	mov	esi, esp
	mov	eax, DWORD PTR _brush$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+68]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3093
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?FillRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@@Z ENDP ; ID2D1RenderTarget::FillRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rect$ = 8						; size = 4
_brush$ = 12						; size = 4
_strokeWidth$ = 16					; size = 4
_strokeStyle$ = 20					; size = 4
?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z PROC ; ID2D1RenderTarget::DrawRectangle, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 3081
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 3082
	mov	esi, esp
	mov	eax, DWORD PTR _strokeStyle$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _strokeWidth$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _brush$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3083
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawRectangle@ID2D1RenderTarget@@QAEXABUD2D_RECT_F@@PAUID2D1Brush@@MPAUID2D1StrokeStyle@@@Z ENDP ; ID2D1RenderTarget::DrawRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_linearGradientBrushProperties$ = 8			; size = 4
_gradientStopCollection$ = 12				; size = 4
_linearGradientBrush$ = 16				; size = 4
?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z PROC ; ID2D1RenderTarget::CreateLinearGradientBrush, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 2960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 2961
	mov	esi, esp
	mov	eax, DWORD PTR _linearGradientBrush$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gradientStopCollection$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _linearGradientBrushProperties$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateLinearGradientBrush@ID2D1RenderTarget@@QAEJABUD2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES@@PAUID2D1GradientStopCollection@@PAPAUID2D1LinearGradientBrush@@@Z ENDP ; ID2D1RenderTarget::CreateLinearGradientBrush
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_color$ = 8						; size = 4
_solidColorBrush$ = 12					; size = 4
?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z PROC ; ID2D1RenderTarget::CreateSolidColorBrush, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 2927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 2928
	mov	esi, esp
	mov	eax, DWORD PTR _solidColorBrush$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _color$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2929
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CreateSolidColorBrush@ID2D1RenderTarget@@QAEJABU_D3DCOLORVALUE@@PAPAUID2D1SolidColorBrush@@@Z ENDP ; ID2D1RenderTarget::CreateSolidColorBrush
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_color$ = 8						; size = 4
?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z PROC ; ID2D1SolidColorBrush::SetColor, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\d2d1.h
; Line 1294
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __433C12BC_d2d1@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 1295
	mov	esi, esp
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1296
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetColor@ID2D1SolidColorBrush@@QAEXABU_D3DCOLORVALUE@@@Z ENDP ; ID2D1SolidColorBrush::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sinf
_TEXT	SEGMENT
tv72 = -196						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; Line 749
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __09340588_corecrt_math@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 750
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	add	esp, 8
	fstp	DWORD PTR tv72[ebp]
	fld	DWORD PTR tv72[ebp]
; Line 751
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _cosf
_TEXT	SEGMENT
tv72 = -196						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __09340588_corecrt_math@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 649
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	add	esp, 8
	fstp	DWORD PTR tv72[ebp]
	fld	DWORD PTR tv72[ebp]
; Line 650
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ceilf
_TEXT	SEGMENT
tv74 = -196						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; Line 643
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __09340588_corecrt_math@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 644
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	mov	esi, esp
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__ceil
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR tv74[ebp]
	fld	DWORD PTR tv74[ebp]
; Line 645
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
; Line 1538
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __101834BA_corecrt_wstdio@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 1541
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 1542
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __BufferCount$[ebp]
	push	edx
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	__vswprintf_s_l
	add	esp, 20					; 00000014H
	mov	DWORD PTR __Result$[ebp], eax
; Line 1543
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 1544
	mov	eax, DWORD PTR __Result$[ebp]
; Line 1545
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -208						; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
; Line 1264
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __101834BA_corecrt_wstdio@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 1265
	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __BufferCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp____stdio_common_vswprintf_s
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Result$[ebp], eax
; Line 1269
	cmp	DWORD PTR __Result$[ebp], 0
	jge	SHORT $LN3@vswprintf_
	mov	DWORD PTR tv73[ebp], -1
	jmp	SHORT $LN4@vswprintf_
$LN3@vswprintf_:
	mov	eax, DWORD PTR __Result$[ebp]
	mov	DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1270
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __F66CEB67_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?abs@@YAJJ@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?abs@@YAJJ@Z PROC					; abs, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h
; Line 360
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __24E9E95F_stdlib@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 361
	mov	eax, DWORD PTR __X$[ebp]
	push	eax
	call	_labs
	add	esp, 4
; Line 362
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?abs@@YAJJ@Z ENDP					; abs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -196						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\shared\winerror.h
; Line 28857
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __76CD430D_winerror@h
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_app$1 = -36						; size = 28
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 330
	mov	esi, esp
	push	0
	push	0
	push	1
	push	0
	call	DWORD PTR __imp__HeapSetInformation@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 332
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__CoInitialize@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN2@WinMain
; Line 335
	push	28					; 0000001cH
	lea	ecx, DWORD PTR _app$1[ebp]
	call	?__autoclassinit2@DemoApp@@QAEXI@Z
	lea	ecx, DWORD PTR _app$1[ebp]
	call	??0DemoApp@@QAE@XZ			; DemoApp::DemoApp
; Line 337
	lea	ecx, DWORD PTR _app$1[ebp]
	call	?Initialize@DemoApp@@QAEJXZ		; DemoApp::Initialize
	test	eax, eax
	jl	SHORT $LN3@WinMain
; Line 339
	lea	ecx, DWORD PTR _app$1[ebp]
	call	?RunMessageLoop@DemoApp@@QAEXXZ		; DemoApp::RunMessageLoop
$LN3@WinMain:
; Line 341
	lea	ecx, DWORD PTR _app$1[ebp]
	call	??1DemoApp@@QAE@XZ			; DemoApp::~DemoApp
; Line 342
	mov	esi, esp
	call	DWORD PTR __imp__CoUninitialize@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@WinMain:
; Line 345
	xor	eax, eax
; Line 346
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@WinMain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN7@WinMain:
	DD	1
	DD	$LN6@WinMain
$LN6@WinMain:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN5@WinMain
$LN5@WinMain:
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	0
_WinMain@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\C++PROGRAMUJU\Visual studio c++\DirectX app\Main.cpp
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __68D9E3CC_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
